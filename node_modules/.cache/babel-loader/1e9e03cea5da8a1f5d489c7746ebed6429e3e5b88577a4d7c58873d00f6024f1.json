{"ast":null,"code":"'use client';\n\n// src/index.ts\nimport { useEffect } from \"react\";\nimport { useCallbackRef } from \"@chakra-ui/react-use-callback-ref\";\nfunction useEventListener(target, event, handler, options) {\n  const listener = useCallbackRef(handler);\n  useEffect(() => {\n    const node = typeof target === \"function\" ? target() : target != null ? target : document;\n    if (!handler || !node) return;\n    node.addEventListener(event, listener, options);\n    return () => {\n      node.removeEventListener(event, listener, options);\n    };\n  }, [event, target, options, listener, handler]);\n  return () => {\n    const node = typeof target === \"function\" ? target() : target != null ? target : document;\n    node == null ? void 0 : node.removeEventListener(event, listener, options);\n  };\n}\nexport { useEventListener };","map":{"version":3,"mappings":";;;AAAA,SAASA,iBAAiB;AAC1B,SAASC,sBAAsB;AAuBxB,SAASC,iBACdC,QACAC,OACAC,SACAC,SACA;EACA,MAAMC,WAAWN,eAAeI,OAAO;EAEvCL,UAAU,MAAM;IACd,MAAMQ,OAAO,OAAOL,WAAW,aAAaA,QAAO,GAAIA,0BAAUM;IAEjE,IAAI,CAACJ,WAAW,CAACG,MAAM;IAEvBA,KAAKE,iBAAiBN,OAAOG,UAAUD,OAAO;IAC9C,OAAO,MAAM;MACXE,KAAKG,oBAAoBP,OAAOG,UAAUD,OAAO;IACnD;EACF,GAAG,CAACF,OAAOD,QAAQG,SAASC,UAAUF,OAAO,CAAC;EAE9C,OAAO,MAAM;IACX,MAAMG,OAAO,OAAOL,WAAW,aAAaA,QAAO,GAAIA,0BAAUM;IACjED,6BAAMG,oBAAoBP,OAAOG,UAAUD;EAC7C;AACF","names":["useEffect","useCallbackRef","useEventListener","target","event","handler","options","listener","node","document","addEventListener","removeEventListener"],"sources":["/Users/santitri1205/Documents/SkillAcademy/BATCH2/react-final-project-hacktogram-v1/node_modules/@chakra-ui/react-use-event-listener/src/index.ts"],"sourcesContent":["import { useEffect } from \"react\"\nimport { useCallbackRef } from \"@chakra-ui/react-use-callback-ref\"\n\ntype Target = EventTarget | null | (() => EventTarget | null)\ntype Options = boolean | AddEventListenerOptions\n\nexport function useEventListener<K extends keyof DocumentEventMap>(\n  target: Target,\n  event: K,\n  handler?: (event: DocumentEventMap[K]) => void,\n  options?: Options,\n): VoidFunction\nexport function useEventListener<K extends keyof WindowEventMap>(\n  target: Target,\n  event: K,\n  handler?: (event: WindowEventMap[K]) => void,\n  options?: Options,\n): VoidFunction\nexport function useEventListener<K extends keyof GlobalEventHandlersEventMap>(\n  target: Target,\n  event: K,\n  handler?: (event: GlobalEventHandlersEventMap[K]) => void,\n  options?: Options,\n): VoidFunction\nexport function useEventListener(\n  target: Target,\n  event: string,\n  handler: ((event: Event) => void) | undefined,\n  options?: Options,\n) {\n  const listener = useCallbackRef(handler)\n\n  useEffect(() => {\n    const node = typeof target === \"function\" ? target() : target ?? document\n\n    if (!handler || !node) return\n\n    node.addEventListener(event, listener, options)\n    return () => {\n      node.removeEventListener(event, listener, options)\n    }\n  }, [event, target, options, listener, handler])\n\n  return () => {\n    const node = typeof target === \"function\" ? target() : target ?? document\n    node?.removeEventListener(event, listener, options)\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}