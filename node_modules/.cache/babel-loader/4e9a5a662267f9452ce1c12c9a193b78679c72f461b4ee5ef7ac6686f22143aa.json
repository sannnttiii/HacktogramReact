{"ast":null,"code":"'use client';\n\nimport { CheckboxGroupProvider } from \"./chunk-LYGBQ47X.mjs\";\nimport { useCheckboxGroup } from \"./chunk-TOQK4WO2.mjs\";\n\n// src/checkbox-group.tsx\nimport { useMemo } from \"react\";\nimport { jsx } from \"react/jsx-runtime\";\nfunction CheckboxGroup(props) {\n  const {\n    colorScheme,\n    size,\n    variant,\n    children,\n    isDisabled\n  } = props;\n  const {\n    value,\n    onChange\n  } = useCheckboxGroup(props);\n  const group = useMemo(() => ({\n    size,\n    onChange,\n    colorScheme,\n    value,\n    variant,\n    isDisabled\n  }), [size, onChange, colorScheme, value, variant, isDisabled]);\n  return /* @__PURE__ */jsx(CheckboxGroupProvider, {\n    value: group,\n    children\n  });\n}\nCheckboxGroup.displayName = \"CheckboxGroup\";\nexport { CheckboxGroup };","map":{"version":3,"mappings":";;;;;;AACA,SAASA,eAAe;AAiCf;AAhBF,SAASC,cAAcC,OAA2B;EACvD,MAAM;IAAEC;IAAaC;IAAMC;IAASC;IAAUC;EAAW,IAAIL;EAC7D,MAAM;IAAEM;IAAOC;EAAS,IAAIC,iBAAiBR,KAAK;EAElD,MAAMS,QAAQX,QACZ,OAAO;IACLI;IACAK;IACAN;IACAK;IACAH;IACAE;EACF,IACA,CAACH,MAAMK,UAAUN,aAAaK,OAAOH,SAASE,UAAU,EAC1D;EAEA,OAAO,mBAACK;IAAsBJ,OAAOG;IAAOL;EAAA,CAAoB;AAClE;AAEAL,cAAcY,cAAc","names":["useMemo","CheckboxGroup","props","colorScheme","size","variant","children","isDisabled","value","onChange","useCheckboxGroup","group","CheckboxGroupProvider","displayName"],"sources":["/Users/santitri1205/Documents/SkillAcademy/BATCH2/react-final-project-hacktogram-v1/node_modules/@chakra-ui/checkbox/src/checkbox-group.tsx"],"sourcesContent":["import { ThemingProps } from \"@chakra-ui/system\"\nimport { useMemo } from \"react\"\nimport { CheckboxGroupProvider } from \"./checkbox-context\"\nimport { UseCheckboxGroupProps } from \"./checkbox-types\"\nimport { useCheckboxGroup } from \"./use-checkbox-group\"\n\nexport interface CheckboxGroupProps\n  extends UseCheckboxGroupProps,\n    Omit<ThemingProps<\"Checkbox\">, \"orientation\"> {\n  children?: React.ReactNode\n}\n\n/**\n * Used for multiple checkboxes which are bound in one group,\n * and it indicates whether one or more options are selected.\n *\n * @see Docs https://chakra-ui.com/checkbox\n */\nexport function CheckboxGroup(props: CheckboxGroupProps) {\n  const { colorScheme, size, variant, children, isDisabled } = props\n  const { value, onChange } = useCheckboxGroup(props)\n\n  const group = useMemo(\n    () => ({\n      size,\n      onChange,\n      colorScheme,\n      value,\n      variant,\n      isDisabled,\n    }),\n    [size, onChange, colorScheme, value, variant, isDisabled],\n  )\n\n  return <CheckboxGroupProvider value={group} children={children} />\n}\n\nCheckboxGroup.displayName = \"CheckboxGroup\"\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}