{"ast":null,"code":"'use client';\n\nimport { useAccordionItem } from \"./chunk-74QY6M57.mjs\";\nimport { AccordionItemProvider, useAccordionStyles } from \"./chunk-RUEU7BLR.mjs\";\n\n// src/accordion-item.tsx\nimport { chakra, forwardRef } from \"@chakra-ui/system\";\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { useMemo } from \"react\";\nimport { jsx } from \"react/jsx-runtime\";\nvar AccordionItem = forwardRef(function AccordionItem2(props, ref) {\n  const {\n    children,\n    className\n  } = props;\n  const {\n    htmlProps,\n    ...context\n  } = useAccordionItem(props);\n  const styles = useAccordionStyles();\n  const containerStyles = {\n    ...styles.container,\n    overflowAnchor: \"none\"\n  };\n  const ctx = useMemo(() => context, [context]);\n  return /* @__PURE__ */jsx(AccordionItemProvider, {\n    value: ctx,\n    children: /* @__PURE__ */jsx(chakra.div, {\n      ref,\n      ...htmlProps,\n      className: cx(\"chakra-accordion__item\", className),\n      __css: containerStyles,\n      children: typeof children === \"function\" ? children({\n        isExpanded: !!context.isOpen,\n        isDisabled: !!context.isDisabled\n      }) : children\n    })\n  });\n});\nAccordionItem.displayName = \"AccordionItem\";\nexport { AccordionItem };","map":{"version":3,"mappings":";;;;;;AAAA,SACEA,QACAC,kBAGK;AACP,SAASC,UAAU;AACnB,SAASC,eAAe;AAoChB;AAfD,IAAMC,gBAAgBH,WAC3B,SAASG,eAAcC,OAAOC,KAAK;EACjC,MAAM;IAAEC;IAAUC;EAAU,IAAIH;EAChC,MAAM;IAAEI;IAAW,GAAGC;EAAQ,IAAIC,iBAAiBN,KAAK;EAExD,MAAMO,SAASC,oBAAmB;EAClC,MAAMC,kBAAqC;IACzC,GAAGF,OAAOG;IACVC,gBAAgB;EAClB;EAEA,MAAMC,MAAMd,QAAQ,MAAMO,SAAS,CAACA,OAAO,CAAC;EAE5C,OACE,mBAACQ;IAAsBC,OAAOF;IAC5BV,6BAACP,OAAOoB,KAAP;MACCd;MACC,GAAGG;MACJD,WAAWN,GAAG,0BAA0BM,SAAS;MACjDa,OAAOP;MAENP,iBAAOA,aAAa,aACjBA,SAAS;QACPe,YAAY,CAAC,CAACZ,QAAQa;QACtBC,YAAY,CAAC,CAACd,QAAQc;MACxB,CAAC,IACDjB;IAAA;EACN,CACF;AAEJ,EACF;AAEAH,cAAcqB,cAAc","names":["chakra","forwardRef","cx","useMemo","AccordionItem","props","ref","children","className","htmlProps","context","useAccordionItem","styles","useAccordionStyles","containerStyles","container","overflowAnchor","ctx","AccordionItemProvider","value","div","__css","isExpanded","isOpen","isDisabled","displayName"],"sources":["/Users/santitri1205/Documents/SkillAcademy/BATCH2/react-final-project-hacktogram-v1/node_modules/@chakra-ui/accordion/src/accordion-item.tsx"],"sourcesContent":["import {\n  chakra,\n  forwardRef,\n  HTMLChakraProps,\n  SystemStyleObject,\n} from \"@chakra-ui/system\"\nimport { cx } from \"@chakra-ui/shared-utils\"\nimport { useMemo } from \"react\"\nimport { AccordionItemProvider, useAccordionStyles } from \"./accordion-context\"\nimport { useAccordionItem, UseAccordionItemProps } from \"./use-accordion\"\n\nexport interface AccordionItemProps\n  extends Omit<\n      HTMLChakraProps<\"div\">,\n      keyof UseAccordionItemProps | \"children\"\n    >,\n    UseAccordionItemProps {\n  children?:\n    | React.ReactNode\n    | ((props: { isExpanded: boolean; isDisabled: boolean }) => React.ReactNode)\n}\n/**\n * AccordionItem is a single accordion that provides the open-close\n * behavior when the accordion button is clicked.\n *\n * It also provides context for the accordion button and panel.\n */\n\nexport const AccordionItem = forwardRef<AccordionItemProps, \"div\">(\n  function AccordionItem(props, ref) {\n    const { children, className } = props\n    const { htmlProps, ...context } = useAccordionItem(props)\n\n    const styles = useAccordionStyles()\n    const containerStyles: SystemStyleObject = {\n      ...styles.container,\n      overflowAnchor: \"none\",\n    }\n\n    const ctx = useMemo(() => context, [context])\n\n    return (\n      <AccordionItemProvider value={ctx}>\n        <chakra.div\n          ref={ref}\n          {...htmlProps}\n          className={cx(\"chakra-accordion__item\", className)}\n          __css={containerStyles}\n        >\n          {typeof children === \"function\"\n            ? children({\n                isExpanded: !!context.isOpen,\n                isDisabled: !!context.isDisabled,\n              })\n            : children}\n        </chakra.div>\n      </AccordionItemProvider>\n    )\n  },\n)\n\nAccordionItem.displayName = \"AccordionItem\"\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}