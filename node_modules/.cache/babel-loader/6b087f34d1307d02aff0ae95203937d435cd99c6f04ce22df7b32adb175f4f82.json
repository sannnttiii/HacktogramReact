{"ast":null,"code":"'use client';\n\nimport { findToast, getToastPosition } from \"./chunk-LDADOVIM.mjs\";\nimport { getToastPlacement } from \"./chunk-LHPMGMGT.mjs\";\n\n// src/toast.tsx\nimport { Alert, AlertDescription, AlertIcon, AlertTitle } from \"@chakra-ui/alert\";\nimport { chakra } from \"@chakra-ui/system\";\nimport { CloseButton } from \"@chakra-ui/close-button\";\nimport { runIfFn } from \"@chakra-ui/shared-utils\";\n\n// src/toast.store.ts\nvar initialState = {\n  top: [],\n  \"top-left\": [],\n  \"top-right\": [],\n  \"bottom-left\": [],\n  bottom: [],\n  \"bottom-right\": []\n};\nvar toastStore = createStore(initialState);\nfunction createStore(initialState2) {\n  let state = initialState2;\n  const listeners = /* @__PURE__ */new Set();\n  const setState = setStateFn => {\n    state = setStateFn(state);\n    listeners.forEach(l => l());\n  };\n  return {\n    getState: () => state,\n    subscribe: listener => {\n      listeners.add(listener);\n      return () => {\n        setState(() => initialState2);\n        listeners.delete(listener);\n      };\n    },\n    /**\n     * Delete a toast record at its position\n     */\n    removeToast: (id, position) => {\n      setState(prevState => ({\n        ...prevState,\n        // id may be string or number\n        // eslint-disable-next-line eqeqeq\n        [position]: prevState[position].filter(toast => toast.id != id)\n      }));\n    },\n    notify: (message, options) => {\n      const toast = createToast(message, options);\n      const {\n        position,\n        id\n      } = toast;\n      setState(prevToasts => {\n        var _a, _b;\n        const isTop = position.includes(\"top\");\n        const toasts = isTop ? [toast, ...((_a = prevToasts[position]) != null ? _a : [])] : [...((_b = prevToasts[position]) != null ? _b : []), toast];\n        return {\n          ...prevToasts,\n          [position]: toasts\n        };\n      });\n      return id;\n    },\n    update: (id, options) => {\n      if (!id) return;\n      setState(prevState => {\n        const nextState = {\n          ...prevState\n        };\n        const {\n          position,\n          index\n        } = findToast(nextState, id);\n        if (position && index !== -1) {\n          nextState[position][index] = {\n            ...nextState[position][index],\n            ...options,\n            message: createRenderToast(options)\n          };\n        }\n        return nextState;\n      });\n    },\n    closeAll: function () {\n      let {\n        positions\n      } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      setState(prev => {\n        const allPositions = [\"bottom\", \"bottom-right\", \"bottom-left\", \"top\", \"top-left\", \"top-right\"];\n        const positionsToClose = positions != null ? positions : allPositions;\n        return positionsToClose.reduce((acc, position) => {\n          acc[position] = prev[position].map(toast => ({\n            ...toast,\n            requestClose: true\n          }));\n          return acc;\n        }, {\n          ...prev\n        });\n      });\n    },\n    close: id => {\n      setState(prevState => {\n        const position = getToastPosition(prevState, id);\n        if (!position) return prevState;\n        return {\n          ...prevState,\n          [position]: prevState[position].map(toast => {\n            if (toast.id == id) {\n              return {\n                ...toast,\n                requestClose: true\n              };\n            }\n            return toast;\n          })\n        };\n      });\n    },\n    isActive: id => Boolean(findToast(toastStore.getState(), id).position)\n  };\n}\nvar counter = 0;\nfunction createToast(message) {\n  let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var _a, _b;\n  counter += 1;\n  const id = (_a = options.id) != null ? _a : counter;\n  const position = (_b = options.position) != null ? _b : \"bottom\";\n  return {\n    id,\n    message,\n    position,\n    duration: options.duration,\n    onCloseComplete: options.onCloseComplete,\n    onRequestRemove: () => toastStore.removeToast(String(id), position),\n    status: options.status,\n    requestClose: false,\n    containerStyle: options.containerStyle\n  };\n}\n\n// src/toast.tsx\nimport { jsx, jsxs } from \"react/jsx-runtime\";\nvar Toast = props => {\n  const {\n    status,\n    variant = \"solid\",\n    id,\n    title,\n    isClosable,\n    onClose,\n    description,\n    colorScheme,\n    icon\n  } = props;\n  const ids = id ? {\n    root: `toast-${id}`,\n    title: `toast-${id}-title`,\n    description: `toast-${id}-description`\n  } : void 0;\n  return /* @__PURE__ */jsxs(Alert, {\n    addRole: false,\n    status,\n    variant,\n    id: ids == null ? void 0 : ids.root,\n    alignItems: \"start\",\n    borderRadius: \"md\",\n    boxShadow: \"lg\",\n    paddingEnd: 8,\n    textAlign: \"start\",\n    width: \"auto\",\n    colorScheme,\n    children: [/* @__PURE__ */jsx(AlertIcon, {\n      children: icon\n    }), /* @__PURE__ */jsxs(chakra.div, {\n      flex: \"1\",\n      maxWidth: \"100%\",\n      children: [title && /* @__PURE__ */jsx(AlertTitle, {\n        id: ids == null ? void 0 : ids.title,\n        children: title\n      }), description && /* @__PURE__ */jsx(AlertDescription, {\n        id: ids == null ? void 0 : ids.description,\n        display: \"block\",\n        children: description\n      })]\n    }), isClosable && /* @__PURE__ */jsx(CloseButton, {\n      size: \"sm\",\n      onClick: onClose,\n      position: \"absolute\",\n      insetEnd: 1,\n      top: 1\n    })]\n  });\n};\nfunction createRenderToast() {\n  let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  const {\n    render,\n    toastComponent: ToastComponent = Toast\n  } = options;\n  const renderToast = props => {\n    if (typeof render === \"function\") {\n      return render({\n        ...props,\n        ...options\n      });\n    }\n    return /* @__PURE__ */jsx(ToastComponent, {\n      ...props,\n      ...options\n    });\n  };\n  return renderToast;\n}\nfunction createToastFn(dir, defaultOptions) {\n  const normalizeToastOptions = options => {\n    var _a;\n    return {\n      ...defaultOptions,\n      ...options,\n      position: getToastPlacement((_a = options == null ? void 0 : options.position) != null ? _a : defaultOptions == null ? void 0 : defaultOptions.position, dir)\n    };\n  };\n  const toast = options => {\n    const normalizedToastOptions = normalizeToastOptions(options);\n    const Message = createRenderToast(normalizedToastOptions);\n    return toastStore.notify(Message, normalizedToastOptions);\n  };\n  toast.update = (id, options) => {\n    toastStore.update(id, normalizeToastOptions(options));\n  };\n  toast.promise = (promise, options) => {\n    const id = toast({\n      ...options.loading,\n      status: \"loading\",\n      duration: null\n    });\n    promise.then(data => toast.update(id, {\n      status: \"success\",\n      duration: 5e3,\n      ...runIfFn(options.success, data)\n    })).catch(error => toast.update(id, {\n      status: \"error\",\n      duration: 5e3,\n      ...runIfFn(options.error, error)\n    }));\n  };\n  toast.closeAll = toastStore.closeAll;\n  toast.close = toastStore.close;\n  toast.isActive = toastStore.isActive;\n  return toast;\n}\nexport { Toast, createRenderToast, createToastFn, toastStore };","map":{"version":3,"mappings":"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","names":["Alert","AlertDescription","AlertIcon","AlertTitle","chakra","CloseButton","runIfFn","initialState","top","bottom","toastStore","createStore","state","listeners","Set","setState","setStateFn","forEach","l","getState","subscribe","listener","add","delete","removeToast","id","position","prevState","filter","toast","notify","message","options","createToast","prevToasts","isTop","includes","toasts","_a","_b","update","nextState","index","findToast","createRenderToast","closeAll","positions","prev","allPositions","positionsToClose","reduce","acc","map","requestClose","close","getToastPosition","isActive","Boolean","counter","duration","onCloseComplete","onRequestRemove","String","status","containerStyle","jsxs","Toast","props","variant","title","isClosable","onClose","description","colorScheme","icon","ids","root","addRole","alignItems","borderRadius","boxShadow","paddingEnd","textAlign","width","children","div","flex","maxWidth","display","size","onClick","insetEnd","render","toastComponent","ToastComponent","renderToast","createToastFn","dir","defaultOptions","normalizeToastOptions","getToastPlacement","normalizedToastOptions","Message","promise","loading","then","data","success","catch","error"],"sources":["/Users/santitri1205/Documents/SkillAcademy/BATCH2/react-final-project-hacktogram-v1/node_modules/@chakra-ui/toast/src/toast.tsx","/Users/santitri1205/Documents/SkillAcademy/BATCH2/react-final-project-hacktogram-v1/node_modules/@chakra-ui/toast/src/toast.store.ts"],"sourcesContent":["import {\n  Alert,\n  AlertDescription,\n  AlertIcon,\n  AlertProps,\n  AlertTitle,\n} from \"@chakra-ui/alert\"\nimport { chakra } from \"@chakra-ui/system\"\nimport { CloseButton } from \"@chakra-ui/close-button\"\nimport { runIfFn } from \"@chakra-ui/shared-utils\"\nimport type { UseToastOptions } from \"./use-toast\"\nimport type { RenderProps, ToastId } from \"./toast.types\"\nimport { getToastPlacement } from \"./toast.placement\"\nimport { toastStore } from \"./toast.store\"\n\nexport interface ToastProps\n  extends UseToastOptions,\n    Omit<AlertProps, keyof UseToastOptions> {\n  onClose?: () => void\n}\n\n/**\n * The `Toast` component is used to give feedback to users after an action has taken place.\n *\n * @see Docs https://chakra-ui.com/docs/components/toast\n */\nexport const Toast: React.FC<ToastProps> = (props) => {\n  const {\n    status,\n    variant = \"solid\",\n    id,\n    title,\n    isClosable,\n    onClose,\n    description,\n    colorScheme,\n    icon,\n  } = props\n\n  const ids = id\n    ? {\n        root: `toast-${id}`,\n        title: `toast-${id}-title`,\n        description: `toast-${id}-description`,\n      }\n    : undefined\n\n  return (\n    <Alert\n      addRole={false}\n      status={status}\n      variant={variant}\n      id={ids?.root}\n      alignItems=\"start\"\n      borderRadius=\"md\"\n      boxShadow=\"lg\"\n      paddingEnd={8}\n      textAlign=\"start\"\n      width=\"auto\"\n      colorScheme={colorScheme}\n    >\n      <AlertIcon>{icon}</AlertIcon>\n      <chakra.div flex=\"1\" maxWidth=\"100%\">\n        {title && <AlertTitle id={ids?.title}>{title}</AlertTitle>}\n        {description && (\n          <AlertDescription id={ids?.description} display=\"block\">\n            {description}\n          </AlertDescription>\n        )}\n      </chakra.div>\n      {isClosable && (\n        <CloseButton\n          size=\"sm\"\n          onClick={onClose}\n          position=\"absolute\"\n          insetEnd={1}\n          top={1}\n        />\n      )}\n    </Alert>\n  )\n}\n\nexport function createRenderToast(\n  options: UseToastOptions & {\n    toastComponent?: React.FC<ToastProps>\n  } = {},\n) {\n  const { render, toastComponent: ToastComponent = Toast } = options\n  const renderToast: React.FC<RenderProps> = (props) => {\n    if (typeof render === \"function\") {\n      return render({ ...props, ...options }) as JSX.Element\n    }\n    return <ToastComponent {...props} {...options} />\n  }\n  return renderToast\n}\n\ntype UseToastPromiseOption = Omit<UseToastOptions, \"status\">\n\nexport function createToastFn(\n  dir: \"ltr\" | \"rtl\",\n  defaultOptions?: UseToastOptions,\n) {\n  const normalizeToastOptions = (options?: UseToastOptions) => ({\n    ...defaultOptions,\n    ...options,\n    position: getToastPlacement(\n      options?.position ?? defaultOptions?.position,\n      dir,\n    ),\n  })\n\n  const toast = (options?: UseToastOptions) => {\n    const normalizedToastOptions = normalizeToastOptions(options)\n    const Message = createRenderToast(normalizedToastOptions)\n    return toastStore.notify(Message, normalizedToastOptions)\n  }\n\n  toast.update = (id: ToastId, options: Omit<UseToastOptions, \"id\">) => {\n    toastStore.update(id, normalizeToastOptions(options))\n  }\n\n  toast.promise = <Result extends any, Err extends Error = Error>(\n    promise: Promise<Result>,\n    options: {\n      success: MaybeFunction<UseToastPromiseOption, [Result]>\n      error: MaybeFunction<UseToastPromiseOption, [Err]>\n      loading: UseToastPromiseOption\n    },\n  ) => {\n    const id = toast({\n      ...options.loading,\n      status: \"loading\",\n      duration: null,\n    })\n\n    promise\n      .then((data) =>\n        toast.update(id, {\n          status: \"success\",\n          duration: 5_000,\n          ...runIfFn(options.success, data),\n        }),\n      )\n      .catch((error) =>\n        toast.update(id, {\n          status: \"error\",\n          duration: 5_000,\n          ...runIfFn(options.error, error),\n        }),\n      )\n  }\n\n  toast.closeAll = toastStore.closeAll\n  toast.close = toastStore.close\n  toast.isActive = toastStore.isActive\n\n  return toast\n}\n\nexport type CreateToastFnReturn = ReturnType<typeof createToastFn>\n\ntype MaybeFunction<T, Args extends unknown[] = []> = T | ((...args: Args) => T)\n","import { createRenderToast } from \"./toast\"\nimport { ToastPosition } from \"./toast.placement\"\nimport { CreateToastOptions, ToastMethods } from \"./toast.provider\"\nimport type { ToastId, ToastMessage, ToastState } from \"./toast.types\"\nimport { findToast, getToastPosition } from \"./toast.utils\"\n\ntype ToastStore = ToastMethods & {\n  getState: () => ToastState\n  subscribe: (onStoreChange: () => void) => () => void\n  removeToast: (id: ToastId, position: ToastPosition) => void\n}\n\nconst initialState = {\n  top: [],\n  \"top-left\": [],\n  \"top-right\": [],\n  \"bottom-left\": [],\n  bottom: [],\n  \"bottom-right\": [],\n}\n\n/**\n * Store to track all the toast across all positions\n */\nexport const toastStore = createStore(initialState)\n\nfunction createStore(initialState: ToastState): ToastStore {\n  let state = initialState\n  const listeners = new Set<() => void>()\n\n  const setState = (setStateFn: (values: ToastState) => ToastState) => {\n    state = setStateFn(state)\n    listeners.forEach((l) => l())\n  }\n\n  return {\n    getState: () => state,\n\n    subscribe: (listener) => {\n      listeners.add(listener)\n      return () => {\n        // Delete all toasts on unmount\n        setState(() => initialState)\n        listeners.delete(listener)\n      }\n    },\n\n    /**\n     * Delete a toast record at its position\n     */\n    removeToast: (id, position) => {\n      setState((prevState) => ({\n        ...prevState,\n        // id may be string or number\n        // eslint-disable-next-line eqeqeq\n        [position]: prevState[position].filter((toast) => toast.id != id),\n      }))\n    },\n\n    notify: (message, options) => {\n      const toast = createToast(message, options)\n      const { position, id } = toast\n\n      setState((prevToasts) => {\n        const isTop = position.includes(\"top\")\n\n        /**\n         * - If the toast is positioned at the top edges, the\n         * recent toast stacks on top of the other toasts.\n         *\n         * - If the toast is positioned at the bottom edges, the recent\n         * toast stacks below the other toasts.\n         */\n        const toasts = isTop\n          ? [toast, ...(prevToasts[position] ?? [])]\n          : [...(prevToasts[position] ?? []), toast]\n\n        return {\n          ...prevToasts,\n          [position]: toasts,\n        }\n      })\n\n      return id\n    },\n\n    update: (id, options) => {\n      if (!id) return\n\n      setState((prevState) => {\n        const nextState = { ...prevState }\n        const { position, index } = findToast(nextState, id)\n\n        if (position && index !== -1) {\n          nextState[position][index] = {\n            ...nextState[position][index],\n            ...options,\n            message: createRenderToast(options),\n          }\n        }\n\n        return nextState\n      })\n    },\n\n    closeAll: ({ positions } = {}) => {\n      // only one setState here for perf reasons\n      // instead of spamming this.closeToast\n      setState((prev) => {\n        const allPositions: ToastPosition[] = [\n          \"bottom\",\n          \"bottom-right\",\n          \"bottom-left\",\n          \"top\",\n          \"top-left\",\n          \"top-right\",\n        ]\n\n        const positionsToClose = positions ?? allPositions\n\n        return positionsToClose.reduce(\n          (acc, position) => {\n            acc[position] = prev[position].map((toast) => ({\n              ...toast,\n              requestClose: true,\n            }))\n\n            return acc\n          },\n          { ...prev } as ToastState,\n        )\n      })\n    },\n\n    close: (id) => {\n      setState((prevState) => {\n        const position = getToastPosition(prevState, id)\n\n        if (!position) return prevState\n\n        return {\n          ...prevState,\n          [position]: prevState[position].map((toast) => {\n            // id may be string or number\n            // eslint-disable-next-line eqeqeq\n            if (toast.id == id) {\n              return {\n                ...toast,\n                requestClose: true,\n              }\n            }\n\n            return toast\n          }),\n        }\n      })\n    },\n\n    isActive: (id) => Boolean(findToast(toastStore.getState(), id).position),\n  }\n}\n\n/**\n * Static id counter to create unique ids\n * for each toast\n */\nlet counter = 0\n\n/**\n * Create properties for a new toast\n */\nfunction createToast(message: ToastMessage, options: CreateToastOptions = {}) {\n  counter += 1\n  const id = options.id ?? counter\n\n  const position = options.position ?? \"bottom\"\n\n  return {\n    id,\n    message,\n    position,\n    duration: options.duration,\n    onCloseComplete: options.onCloseComplete,\n    onRequestRemove: () => toastStore.removeToast(String(id), position),\n    status: options.status,\n    requestClose: false,\n    containerStyle: options.containerStyle,\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}