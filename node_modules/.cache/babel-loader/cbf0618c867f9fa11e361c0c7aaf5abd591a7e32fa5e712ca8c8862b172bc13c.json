{"ast":null,"code":"// src/components/tabs.ts\nimport { tabsAnatomy as parts } from \"@chakra-ui/anatomy\";\nimport { createMultiStyleConfigHelpers, cssVar, defineStyle } from \"@chakra-ui/styled-system\";\nimport { getColor } from \"@chakra-ui/theme-tools\";\nvar $fg = cssVar(\"tabs-color\");\nvar $bg = cssVar(\"tabs-bg\");\nvar $border = cssVar(\"tabs-border-color\");\nvar {\n  defineMultiStyleConfig,\n  definePartsStyle\n} = createMultiStyleConfigHelpers(parts.keys);\nvar baseStyleRoot = defineStyle(props => {\n  const {\n    orientation\n  } = props;\n  return {\n    display: orientation === \"vertical\" ? \"flex\" : \"block\"\n  };\n});\nvar baseStyleTab = defineStyle(props => {\n  const {\n    isFitted\n  } = props;\n  return {\n    flex: isFitted ? 1 : void 0,\n    transitionProperty: \"common\",\n    transitionDuration: \"normal\",\n    _focusVisible: {\n      zIndex: 1,\n      boxShadow: \"outline\"\n    },\n    _disabled: {\n      cursor: \"not-allowed\",\n      opacity: 0.4\n    }\n  };\n});\nvar baseStyleTablist = defineStyle(props => {\n  const {\n    align = \"start\",\n    orientation\n  } = props;\n  const alignments = {\n    end: \"flex-end\",\n    center: \"center\",\n    start: \"flex-start\"\n  };\n  return {\n    justifyContent: alignments[align],\n    flexDirection: orientation === \"vertical\" ? \"column\" : \"row\"\n  };\n});\nvar baseStyleTabpanel = defineStyle({\n  p: 4\n});\nvar baseStyle = definePartsStyle(props => ({\n  root: baseStyleRoot(props),\n  tab: baseStyleTab(props),\n  tablist: baseStyleTablist(props),\n  tabpanel: baseStyleTabpanel\n}));\nvar sizes = {\n  sm: definePartsStyle({\n    tab: {\n      py: 1,\n      px: 4,\n      fontSize: \"sm\"\n    }\n  }),\n  md: definePartsStyle({\n    tab: {\n      fontSize: \"md\",\n      py: 2,\n      px: 4\n    }\n  }),\n  lg: definePartsStyle({\n    tab: {\n      fontSize: \"lg\",\n      py: 3,\n      px: 4\n    }\n  })\n};\nvar variantLine = definePartsStyle(props => {\n  const {\n    colorScheme: c,\n    orientation\n  } = props;\n  const isVertical = orientation === \"vertical\";\n  const borderProp = isVertical ? \"borderStart\" : \"borderBottom\";\n  const marginProp = isVertical ? \"marginStart\" : \"marginBottom\";\n  return {\n    tablist: {\n      [borderProp]: \"2px solid\",\n      borderColor: \"inherit\"\n    },\n    tab: {\n      [borderProp]: \"2px solid\",\n      borderColor: \"transparent\",\n      [marginProp]: \"-2px\",\n      _selected: {\n        [$fg.variable]: `colors.${c}.600`,\n        _dark: {\n          [$fg.variable]: `colors.${c}.300`\n        },\n        borderColor: \"currentColor\"\n      },\n      _active: {\n        [$bg.variable]: \"colors.gray.200\",\n        _dark: {\n          [$bg.variable]: \"colors.whiteAlpha.300\"\n        }\n      },\n      _disabled: {\n        _active: {\n          bg: \"none\"\n        }\n      },\n      color: $fg.reference,\n      bg: $bg.reference\n    }\n  };\n});\nvar variantEnclosed = definePartsStyle(props => {\n  const {\n    colorScheme: c\n  } = props;\n  return {\n    tab: {\n      borderTopRadius: \"md\",\n      border: \"1px solid\",\n      borderColor: \"transparent\",\n      mb: \"-1px\",\n      [$border.variable]: \"transparent\",\n      _selected: {\n        [$fg.variable]: `colors.${c}.600`,\n        [$border.variable]: `colors.white`,\n        _dark: {\n          [$fg.variable]: `colors.${c}.300`,\n          [$border.variable]: `colors.gray.800`\n        },\n        borderColor: \"inherit\",\n        borderBottomColor: $border.reference\n      },\n      color: $fg.reference\n    },\n    tablist: {\n      mb: \"-1px\",\n      borderBottom: \"1px solid\",\n      borderColor: \"inherit\"\n    }\n  };\n});\nvar variantEnclosedColored = definePartsStyle(props => {\n  const {\n    colorScheme: c\n  } = props;\n  return {\n    tab: {\n      border: \"1px solid\",\n      borderColor: \"inherit\",\n      [$bg.variable]: \"colors.gray.50\",\n      _dark: {\n        [$bg.variable]: \"colors.whiteAlpha.50\"\n      },\n      mb: \"-1px\",\n      _notLast: {\n        marginEnd: \"-1px\"\n      },\n      _selected: {\n        [$bg.variable]: \"colors.white\",\n        [$fg.variable]: `colors.${c}.600`,\n        _dark: {\n          [$bg.variable]: \"colors.gray.800\",\n          [$fg.variable]: `colors.${c}.300`\n        },\n        borderColor: \"inherit\",\n        borderTopColor: \"currentColor\",\n        borderBottomColor: \"transparent\"\n      },\n      color: $fg.reference,\n      bg: $bg.reference\n    },\n    tablist: {\n      mb: \"-1px\",\n      borderBottom: \"1px solid\",\n      borderColor: \"inherit\"\n    }\n  };\n});\nvar variantSoftRounded = definePartsStyle(props => {\n  const {\n    colorScheme: c,\n    theme\n  } = props;\n  return {\n    tab: {\n      borderRadius: \"full\",\n      fontWeight: \"semibold\",\n      color: \"gray.600\",\n      _selected: {\n        color: getColor(theme, `${c}.700`),\n        bg: getColor(theme, `${c}.100`)\n      }\n    }\n  };\n});\nvar variantSolidRounded = definePartsStyle(props => {\n  const {\n    colorScheme: c\n  } = props;\n  return {\n    tab: {\n      borderRadius: \"full\",\n      fontWeight: \"semibold\",\n      [$fg.variable]: \"colors.gray.600\",\n      _dark: {\n        [$fg.variable]: \"inherit\"\n      },\n      _selected: {\n        [$fg.variable]: \"colors.white\",\n        [$bg.variable]: `colors.${c}.600`,\n        _dark: {\n          [$fg.variable]: \"colors.gray.800\",\n          [$bg.variable]: `colors.${c}.300`\n        }\n      },\n      color: $fg.reference,\n      bg: $bg.reference\n    }\n  };\n});\nvar variantUnstyled = definePartsStyle({});\nvar variants = {\n  line: variantLine,\n  enclosed: variantEnclosed,\n  \"enclosed-colored\": variantEnclosedColored,\n  \"soft-rounded\": variantSoftRounded,\n  \"solid-rounded\": variantSolidRounded,\n  unstyled: variantUnstyled\n};\nvar tabsTheme = defineMultiStyleConfig({\n  baseStyle,\n  sizes,\n  variants,\n  defaultProps: {\n    size: \"md\",\n    variant: \"line\",\n    colorScheme: \"blue\"\n  }\n});\nexport { tabsTheme };","map":{"version":3,"mappings":";AAAA,SAASA,eAAeC,aAAa;AACrC,SACEC,+BACAC,QACAC,mBACK;AACP,SAASC,gBAAgB;AAEzB,IAAMC,MAAMH,OAAO,YAAY;AAC/B,IAAMI,MAAMJ,OAAO,SAAS;AAC5B,IAAMK,UAAUL,OAAO,mBAAmB;AAE1C,IAAM;EAAEM;EAAwBC;AAAiB,IAC/CR,8BAA8BD,MAAMU,IAAI;AAE1C,IAAMC,gBAAgBR,YAAaS,SAAU;EAC3C,MAAM;IAAEC;EAAY,IAAID;EACxB,OAAO;IACLE,SAASD,gBAAgB,aAAa,SAAS;EACjD;AACF,CAAC;AAED,IAAME,eAAeZ,YAAaS,SAAU;EAC1C,MAAM;IAAEI;EAAS,IAAIJ;EAErB,OAAO;IACLK,MAAMD,WAAW,IAAI;IACrBE,oBAAoB;IACpBC,oBAAoB;IACpBC,eAAe;MACbC,QAAQ;MACRC,WAAW;IACb;IACAC,WAAW;MACTC,QAAQ;MACRC,SAAS;IACX;EACF;AACF,CAAC;AAED,IAAMC,mBAAmBvB,YAAaS,SAAU;EAC9C,MAAM;IAAEe,QAAQ;IAASd;EAAY,IAAID;EAEzC,MAAMgB,aAAqC;IACzCC,KAAK;IACLC,QAAQ;IACRC,OAAO;EACT;EAEA,OAAO;IACLC,gBAAgBJ,WAAWD,KAAK;IAChCM,eAAepB,gBAAgB,aAAa,WAAW;EACzD;AACF,CAAC;AAED,IAAMqB,oBAAoB/B,YAAY;EACpCgC,GAAG;AACL,CAAC;AAED,IAAMC,YAAY3B,iBAAkBG,UAAW;EAC7CyB,MAAM1B,cAAcC,KAAK;EACzB0B,KAAKvB,aAAaH,KAAK;EACvB2B,SAASb,iBAAiBd,KAAK;EAC/B4B,UAAUN;AACZ,EAAE;AAEF,IAAMO,QAAQ;EACZC,IAAIjC,iBAAiB;IACnB6B,KAAK;MACHK,IAAI;MACJC,IAAI;MACJC,UAAU;IACZ;EACF,CAAC;EACDC,IAAIrC,iBAAiB;IACnB6B,KAAK;MACHO,UAAU;MACVF,IAAI;MACJC,IAAI;IACN;EACF,CAAC;EACDG,IAAItC,iBAAiB;IACnB6B,KAAK;MACHO,UAAU;MACVF,IAAI;MACJC,IAAI;IACN;EACF,CAAC;AACH;AAEA,IAAMI,cAAcvC,iBAAkBG,SAAU;EAC9C,MAAM;IAAEqC,aAAaC;IAAGrC;EAAY,IAAID;EACxC,MAAMuC,aAAatC,gBAAgB;EACnC,MAAMuC,aAAaD,aAAa,gBAAgB;EAChD,MAAME,aAAaF,aAAa,gBAAgB;EAEhD,OAAO;IACLZ,SAAS;MACP,CAACa,UAAU,GAAG;MACdE,aAAa;IACf;IACAhB,KAAK;MACH,CAACc,UAAU,GAAG;MACdE,aAAa;MACb,CAACD,UAAU,GAAG;MACdE,WAAW;QACT,CAAClD,IAAImD,QAAQ,GAAG,UAAUN,CAAC;QAC3BO,OAAO;UACL,CAACpD,IAAImD,QAAQ,GAAG,UAAUN,CAAC;QAC7B;QACAI,aAAa;MACf;MACAI,SAAS;QACP,CAACpD,IAAIkD,QAAQ,GAAG;QAChBC,OAAO;UACL,CAACnD,IAAIkD,QAAQ,GAAG;QAClB;MACF;MACAjC,WAAW;QACTmC,SAAS;UAAEC,IAAI;QAAO;MACxB;MACAC,OAAOvD,IAAIwD;MACXF,IAAIrD,IAAIuD;IACV;EACF;AACF,CAAC;AAED,IAAMC,kBAAkBrD,iBAAkBG,SAAU;EAClD,MAAM;IAAEqC,aAAaC;EAAE,IAAItC;EAC3B,OAAO;IACL0B,KAAK;MACHyB,iBAAiB;MACjBC,QAAQ;MACRV,aAAa;MACbW,IAAI;MACJ,CAAC1D,QAAQiD,QAAQ,GAAG;MACpBD,WAAW;QACT,CAAClD,IAAImD,QAAQ,GAAG,UAAUN,CAAC;QAC3B,CAAC3C,QAAQiD,QAAQ,GAAG;QACpBC,OAAO;UACL,CAACpD,IAAImD,QAAQ,GAAG,UAAUN,CAAC;UAC3B,CAAC3C,QAAQiD,QAAQ,GAAG;QACtB;QACAF,aAAa;QACbY,mBAAmB3D,QAAQsD;MAC7B;MACAD,OAAOvD,IAAIwD;IACb;IACAtB,SAAS;MACP0B,IAAI;MACJE,cAAc;MACdb,aAAa;IACf;EACF;AACF,CAAC;AAED,IAAMc,yBAAyB3D,iBAAkBG,SAAU;EACzD,MAAM;IAAEqC,aAAaC;EAAE,IAAItC;EAC3B,OAAO;IACL0B,KAAK;MACH0B,QAAQ;MACRV,aAAa;MACb,CAAChD,IAAIkD,QAAQ,GAAG;MAChBC,OAAO;QACL,CAACnD,IAAIkD,QAAQ,GAAG;MAClB;MACAS,IAAI;MACJI,UAAU;QACRC,WAAW;MACb;MACAf,WAAW;QACT,CAACjD,IAAIkD,QAAQ,GAAG;QAChB,CAACnD,IAAImD,QAAQ,GAAG,UAAUN,CAAC;QAC3BO,OAAO;UACL,CAACnD,IAAIkD,QAAQ,GAAG;UAChB,CAACnD,IAAImD,QAAQ,GAAG,UAAUN,CAAC;QAC7B;QACAI,aAAa;QACbiB,gBAAgB;QAChBL,mBAAmB;MACrB;MACAN,OAAOvD,IAAIwD;MACXF,IAAIrD,IAAIuD;IACV;IACAtB,SAAS;MACP0B,IAAI;MACJE,cAAc;MACdb,aAAa;IACf;EACF;AACF,CAAC;AAED,IAAMkB,qBAAqB/D,iBAAkBG,SAAU;EACrD,MAAM;IAAEqC,aAAaC;IAAGuB;EAAM,IAAI7D;EAClC,OAAO;IACL0B,KAAK;MACHoC,cAAc;MACdC,YAAY;MACZf,OAAO;MACPL,WAAW;QACTK,OAAOxD,SAASqE,OAAO,GAAGvB,CAAC,MAAM;QACjCS,IAAIvD,SAASqE,OAAO,GAAGvB,CAAC,MAAM;MAChC;IACF;EACF;AACF,CAAC;AAED,IAAM0B,sBAAsBnE,iBAAkBG,SAAU;EACtD,MAAM;IAAEqC,aAAaC;EAAE,IAAItC;EAC3B,OAAO;IACL0B,KAAK;MACHoC,cAAc;MACdC,YAAY;MACZ,CAACtE,IAAImD,QAAQ,GAAG;MAChBC,OAAO;QACL,CAACpD,IAAImD,QAAQ,GAAG;MAClB;MACAD,WAAW;QACT,CAAClD,IAAImD,QAAQ,GAAG;QAChB,CAAClD,IAAIkD,QAAQ,GAAG,UAAUN,CAAC;QAC3BO,OAAO;UACL,CAACpD,IAAImD,QAAQ,GAAG;UAChB,CAAClD,IAAIkD,QAAQ,GAAG,UAAUN,CAAC;QAC7B;MACF;MACAU,OAAOvD,IAAIwD;MACXF,IAAIrD,IAAIuD;IACV;EACF;AACF,CAAC;AAED,IAAMgB,kBAAkBpE,iBAAiB,CAAC,CAAC;AAE3C,IAAMqE,WAAW;EACfC,MAAM/B;EACNgC,UAAUlB;EACV,oBAAoBM;EACpB,gBAAgBI;EAChB,iBAAiBI;EACjBK,UAAUJ;AACZ;AAEO,IAAMK,YAAY1E,uBAAuB;EAC9C4B;EACAK;EACAqC;EACAK,cAAc;IACZC,MAAM;IACNC,SAAS;IACTpC,aAAa;EACf;AACF,CAAC","names":["tabsAnatomy","parts","createMultiStyleConfigHelpers","cssVar","defineStyle","getColor","$fg","$bg","$border","defineMultiStyleConfig","definePartsStyle","keys","baseStyleRoot","props","orientation","display","baseStyleTab","isFitted","flex","transitionProperty","transitionDuration","_focusVisible","zIndex","boxShadow","_disabled","cursor","opacity","baseStyleTablist","align","alignments","end","center","start","justifyContent","flexDirection","baseStyleTabpanel","p","baseStyle","root","tab","tablist","tabpanel","sizes","sm","py","px","fontSize","md","lg","variantLine","colorScheme","c","isVertical","borderProp","marginProp","borderColor","_selected","variable","_dark","_active","bg","color","reference","variantEnclosed","borderTopRadius","border","mb","borderBottomColor","borderBottom","variantEnclosedColored","_notLast","marginEnd","borderTopColor","variantSoftRounded","theme","borderRadius","fontWeight","variantSolidRounded","variantUnstyled","variants","line","enclosed","unstyled","tabsTheme","defaultProps","size","variant"],"sources":["/Users/santitri1205/Documents/SkillAcademy/BATCH2/react-final-project-hacktogram-v1/node_modules/@chakra-ui/theme/src/components/tabs.ts"],"sourcesContent":["import { tabsAnatomy as parts } from \"@chakra-ui/anatomy\"\nimport {\n  createMultiStyleConfigHelpers,\n  cssVar,\n  defineStyle,\n} from \"@chakra-ui/styled-system\"\nimport { getColor } from \"@chakra-ui/theme-tools\"\n\nconst $fg = cssVar(\"tabs-color\")\nconst $bg = cssVar(\"tabs-bg\")\nconst $border = cssVar(\"tabs-border-color\")\n\nconst { defineMultiStyleConfig, definePartsStyle } =\n  createMultiStyleConfigHelpers(parts.keys)\n\nconst baseStyleRoot = defineStyle((props) => {\n  const { orientation } = props\n  return {\n    display: orientation === \"vertical\" ? \"flex\" : \"block\",\n  }\n})\n\nconst baseStyleTab = defineStyle((props) => {\n  const { isFitted } = props\n\n  return {\n    flex: isFitted ? 1 : undefined,\n    transitionProperty: \"common\",\n    transitionDuration: \"normal\",\n    _focusVisible: {\n      zIndex: 1,\n      boxShadow: \"outline\",\n    },\n    _disabled: {\n      cursor: \"not-allowed\",\n      opacity: 0.4,\n    },\n  }\n})\n\nconst baseStyleTablist = defineStyle((props) => {\n  const { align = \"start\", orientation } = props\n\n  const alignments: Record<string, string> = {\n    end: \"flex-end\",\n    center: \"center\",\n    start: \"flex-start\",\n  }\n\n  return {\n    justifyContent: alignments[align],\n    flexDirection: orientation === \"vertical\" ? \"column\" : \"row\",\n  }\n})\n\nconst baseStyleTabpanel = defineStyle({\n  p: 4,\n})\n\nconst baseStyle = definePartsStyle((props) => ({\n  root: baseStyleRoot(props),\n  tab: baseStyleTab(props),\n  tablist: baseStyleTablist(props),\n  tabpanel: baseStyleTabpanel,\n}))\n\nconst sizes = {\n  sm: definePartsStyle({\n    tab: {\n      py: 1,\n      px: 4,\n      fontSize: \"sm\",\n    },\n  }),\n  md: definePartsStyle({\n    tab: {\n      fontSize: \"md\",\n      py: 2,\n      px: 4,\n    },\n  }),\n  lg: definePartsStyle({\n    tab: {\n      fontSize: \"lg\",\n      py: 3,\n      px: 4,\n    },\n  }),\n}\n\nconst variantLine = definePartsStyle((props) => {\n  const { colorScheme: c, orientation } = props\n  const isVertical = orientation === \"vertical\"\n  const borderProp = isVertical ? \"borderStart\" : \"borderBottom\"\n  const marginProp = isVertical ? \"marginStart\" : \"marginBottom\"\n\n  return {\n    tablist: {\n      [borderProp]: \"2px solid\",\n      borderColor: \"inherit\",\n    },\n    tab: {\n      [borderProp]: \"2px solid\",\n      borderColor: \"transparent\",\n      [marginProp]: \"-2px\",\n      _selected: {\n        [$fg.variable]: `colors.${c}.600`,\n        _dark: {\n          [$fg.variable]: `colors.${c}.300`,\n        },\n        borderColor: \"currentColor\",\n      },\n      _active: {\n        [$bg.variable]: \"colors.gray.200\",\n        _dark: {\n          [$bg.variable]: \"colors.whiteAlpha.300\",\n        },\n      },\n      _disabled: {\n        _active: { bg: \"none\" },\n      },\n      color: $fg.reference,\n      bg: $bg.reference,\n    },\n  }\n})\n\nconst variantEnclosed = definePartsStyle((props) => {\n  const { colorScheme: c } = props\n  return {\n    tab: {\n      borderTopRadius: \"md\",\n      border: \"1px solid\",\n      borderColor: \"transparent\",\n      mb: \"-1px\",\n      [$border.variable]: \"transparent\",\n      _selected: {\n        [$fg.variable]: `colors.${c}.600`,\n        [$border.variable]: `colors.white`,\n        _dark: {\n          [$fg.variable]: `colors.${c}.300`,\n          [$border.variable]: `colors.gray.800`,\n        },\n        borderColor: \"inherit\",\n        borderBottomColor: $border.reference,\n      },\n      color: $fg.reference,\n    },\n    tablist: {\n      mb: \"-1px\",\n      borderBottom: \"1px solid\",\n      borderColor: \"inherit\",\n    },\n  }\n})\n\nconst variantEnclosedColored = definePartsStyle((props) => {\n  const { colorScheme: c } = props\n  return {\n    tab: {\n      border: \"1px solid\",\n      borderColor: \"inherit\",\n      [$bg.variable]: \"colors.gray.50\",\n      _dark: {\n        [$bg.variable]: \"colors.whiteAlpha.50\",\n      },\n      mb: \"-1px\",\n      _notLast: {\n        marginEnd: \"-1px\",\n      },\n      _selected: {\n        [$bg.variable]: \"colors.white\",\n        [$fg.variable]: `colors.${c}.600`,\n        _dark: {\n          [$bg.variable]: \"colors.gray.800\",\n          [$fg.variable]: `colors.${c}.300`,\n        },\n        borderColor: \"inherit\",\n        borderTopColor: \"currentColor\",\n        borderBottomColor: \"transparent\",\n      },\n      color: $fg.reference,\n      bg: $bg.reference,\n    },\n    tablist: {\n      mb: \"-1px\",\n      borderBottom: \"1px solid\",\n      borderColor: \"inherit\",\n    },\n  }\n})\n\nconst variantSoftRounded = definePartsStyle((props) => {\n  const { colorScheme: c, theme } = props\n  return {\n    tab: {\n      borderRadius: \"full\",\n      fontWeight: \"semibold\",\n      color: \"gray.600\",\n      _selected: {\n        color: getColor(theme, `${c}.700`),\n        bg: getColor(theme, `${c}.100`),\n      },\n    },\n  }\n})\n\nconst variantSolidRounded = definePartsStyle((props) => {\n  const { colorScheme: c } = props\n  return {\n    tab: {\n      borderRadius: \"full\",\n      fontWeight: \"semibold\",\n      [$fg.variable]: \"colors.gray.600\",\n      _dark: {\n        [$fg.variable]: \"inherit\",\n      },\n      _selected: {\n        [$fg.variable]: \"colors.white\",\n        [$bg.variable]: `colors.${c}.600`,\n        _dark: {\n          [$fg.variable]: \"colors.gray.800\",\n          [$bg.variable]: `colors.${c}.300`,\n        },\n      },\n      color: $fg.reference,\n      bg: $bg.reference,\n    },\n  }\n})\n\nconst variantUnstyled = definePartsStyle({})\n\nconst variants = {\n  line: variantLine,\n  enclosed: variantEnclosed,\n  \"enclosed-colored\": variantEnclosedColored,\n  \"soft-rounded\": variantSoftRounded,\n  \"solid-rounded\": variantSolidRounded,\n  unstyled: variantUnstyled,\n}\n\nexport const tabsTheme = defineMultiStyleConfig({\n  baseStyle,\n  sizes,\n  variants,\n  defaultProps: {\n    size: \"md\",\n    variant: \"line\",\n    colorScheme: \"blue\",\n  },\n})\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}