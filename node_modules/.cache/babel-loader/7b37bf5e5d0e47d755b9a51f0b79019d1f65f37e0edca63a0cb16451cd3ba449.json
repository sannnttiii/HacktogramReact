{"ast":null,"code":"// src/components/switch.ts\nimport { switchAnatomy as parts } from \"@chakra-ui/anatomy\";\nimport { createMultiStyleConfigHelpers, defineStyle } from \"@chakra-ui/styled-system\";\nimport { calc, cssVar } from \"@chakra-ui/theme-tools\";\nvar {\n  defineMultiStyleConfig,\n  definePartsStyle\n} = createMultiStyleConfigHelpers(parts.keys);\nvar $width = cssVar(\"switch-track-width\");\nvar $height = cssVar(\"switch-track-height\");\nvar $diff = cssVar(\"switch-track-diff\");\nvar diffValue = calc.subtract($width, $height);\nvar $translateX = cssVar(\"switch-thumb-x\");\nvar $bg = cssVar(\"switch-bg\");\nvar baseStyleTrack = defineStyle(props => {\n  const {\n    colorScheme: c\n  } = props;\n  return {\n    borderRadius: \"full\",\n    p: \"0.5\",\n    width: [$width.reference],\n    height: [$height.reference],\n    transitionProperty: \"common\",\n    transitionDuration: \"fast\",\n    [$bg.variable]: \"colors.gray.300\",\n    _dark: {\n      [$bg.variable]: \"colors.whiteAlpha.400\"\n    },\n    _focusVisible: {\n      boxShadow: \"outline\"\n    },\n    _disabled: {\n      opacity: 0.4,\n      cursor: \"not-allowed\"\n    },\n    _checked: {\n      [$bg.variable]: `colors.${c}.500`,\n      _dark: {\n        [$bg.variable]: `colors.${c}.200`\n      }\n    },\n    bg: $bg.reference\n  };\n});\nvar baseStyleThumb = defineStyle({\n  bg: \"white\",\n  transitionProperty: \"transform\",\n  transitionDuration: \"normal\",\n  borderRadius: \"inherit\",\n  width: [$height.reference],\n  height: [$height.reference],\n  _checked: {\n    transform: `translateX(${$translateX.reference})`\n  }\n});\nvar baseStyle = definePartsStyle(props => ({\n  container: {\n    [$diff.variable]: diffValue,\n    [$translateX.variable]: $diff.reference,\n    _rtl: {\n      [$translateX.variable]: calc($diff).negate().toString()\n    }\n  },\n  track: baseStyleTrack(props),\n  thumb: baseStyleThumb\n}));\nvar sizes = {\n  sm: definePartsStyle({\n    container: {\n      [$width.variable]: \"1.375rem\",\n      [$height.variable]: \"sizes.3\"\n    }\n  }),\n  md: definePartsStyle({\n    container: {\n      [$width.variable]: \"1.875rem\",\n      [$height.variable]: \"sizes.4\"\n    }\n  }),\n  lg: definePartsStyle({\n    container: {\n      [$width.variable]: \"2.875rem\",\n      [$height.variable]: \"sizes.6\"\n    }\n  })\n};\nvar switchTheme = defineMultiStyleConfig({\n  baseStyle,\n  sizes,\n  defaultProps: {\n    size: \"md\",\n    colorScheme: \"blue\"\n  }\n});\nexport { switchTheme };","map":{"version":3,"mappings":";AAAA,SAASA,iBAAiBC,aAAa;AACvC,SACEC,+BACAC,mBACK;AACP,SAASC,MAAMC,cAAc;AAE7B,IAAM;EAAEC;EAAwBC;AAAiB,IAC/CL,8BAA8BD,MAAMO,IAAI;AAE1C,IAAMC,SAASJ,OAAO,oBAAoB;AAC1C,IAAMK,UAAUL,OAAO,qBAAqB;AAC5C,IAAMM,QAAQN,OAAO,mBAAmB;AACxC,IAAMO,YAAYR,KAAKS,SAASJ,QAAQC,OAAO;AAC/C,IAAMI,cAAcT,OAAO,gBAAgB;AAC3C,IAAMU,MAAMV,OAAO,WAAW;AAE9B,IAAMW,iBAAiBb,YAAac,SAAU;EAC5C,MAAM;IAAEC,aAAaC;EAAE,IAAIF;EAE3B,OAAO;IACLG,cAAc;IACdC,GAAG;IACHC,OAAO,CAACb,OAAOc,SAAS;IACxBC,QAAQ,CAACd,QAAQa,SAAS;IAC1BE,oBAAoB;IACpBC,oBAAoB;IACpB,CAACX,IAAIY,QAAQ,GAAG;IAChBC,OAAO;MACL,CAACb,IAAIY,QAAQ,GAAG;IAClB;IACAE,eAAe;MACbC,WAAW;IACb;IACAC,WAAW;MACTC,SAAS;MACTC,QAAQ;IACV;IACAC,UAAU;MACR,CAACnB,IAAIY,QAAQ,GAAG,UAAUR,CAAC;MAC3BS,OAAO;QACL,CAACb,IAAIY,QAAQ,GAAG,UAAUR,CAAC;MAC7B;IACF;IACAgB,IAAIpB,IAAIQ;EACV;AACF,CAAC;AAED,IAAMa,iBAAiBjC,YAAY;EACjCgC,IAAI;EACJV,oBAAoB;EACpBC,oBAAoB;EACpBN,cAAc;EACdE,OAAO,CAACZ,QAAQa,SAAS;EACzBC,QAAQ,CAACd,QAAQa,SAAS;EAC1BW,UAAU;IACRG,WAAW,cAAcvB,YAAYS,SAAS;EAChD;AACF,CAAC;AAED,IAAMe,YAAY/B,iBAAkBU,UAAW;EAC7CsB,WAAW;IACT,CAAC5B,MAAMgB,QAAQ,GAAGf;IAClB,CAACE,YAAYa,QAAQ,GAAGhB,MAAMY;IAC9BiB,MAAM;MACJ,CAAC1B,YAAYa,QAAQ,GAAGvB,KAAKO,KAAK,EAAE8B,QAAO,CAAEC;IAC/C;EACF;EACAC,OAAO3B,eAAeC,KAAK;EAC3B2B,OAAOR;AACT,EAAE;AAEF,IAAMS,QAAQ;EACZC,IAAIvC,iBAAiB;IACnBgC,WAAW;MACT,CAAC9B,OAAOkB,QAAQ,GAAG;MACnB,CAACjB,QAAQiB,QAAQ,GAAG;IACtB;EACF,CAAC;EACDoB,IAAIxC,iBAAiB;IACnBgC,WAAW;MACT,CAAC9B,OAAOkB,QAAQ,GAAG;MACnB,CAACjB,QAAQiB,QAAQ,GAAG;IACtB;EACF,CAAC;EACDqB,IAAIzC,iBAAiB;IACnBgC,WAAW;MACT,CAAC9B,OAAOkB,QAAQ,GAAG;MACnB,CAACjB,QAAQiB,QAAQ,GAAG;IACtB;EACF,CAAC;AACH;AAEO,IAAMsB,cAAc3C,uBAAuB;EAChDgC;EACAO;EACAK,cAAc;IACZC,MAAM;IACNjC,aAAa;EACf;AACF,CAAC","names":["switchAnatomy","parts","createMultiStyleConfigHelpers","defineStyle","calc","cssVar","defineMultiStyleConfig","definePartsStyle","keys","$width","$height","$diff","diffValue","subtract","$translateX","$bg","baseStyleTrack","props","colorScheme","c","borderRadius","p","width","reference","height","transitionProperty","transitionDuration","variable","_dark","_focusVisible","boxShadow","_disabled","opacity","cursor","_checked","bg","baseStyleThumb","transform","baseStyle","container","_rtl","negate","toString","track","thumb","sizes","sm","md","lg","switchTheme","defaultProps","size"],"sources":["/Users/santitri1205/Documents/SkillAcademy/BATCH2/react-final-project-hacktogram-v1/node_modules/@chakra-ui/theme/src/components/switch.ts"],"sourcesContent":["import { switchAnatomy as parts } from \"@chakra-ui/anatomy\"\nimport {\n  createMultiStyleConfigHelpers,\n  defineStyle,\n} from \"@chakra-ui/styled-system\"\nimport { calc, cssVar } from \"@chakra-ui/theme-tools\"\n\nconst { defineMultiStyleConfig, definePartsStyle } =\n  createMultiStyleConfigHelpers(parts.keys)\n\nconst $width = cssVar(\"switch-track-width\")\nconst $height = cssVar(\"switch-track-height\")\nconst $diff = cssVar(\"switch-track-diff\")\nconst diffValue = calc.subtract($width, $height)\nconst $translateX = cssVar(\"switch-thumb-x\")\nconst $bg = cssVar(\"switch-bg\")\n\nconst baseStyleTrack = defineStyle((props) => {\n  const { colorScheme: c } = props\n\n  return {\n    borderRadius: \"full\",\n    p: \"0.5\",\n    width: [$width.reference],\n    height: [$height.reference],\n    transitionProperty: \"common\",\n    transitionDuration: \"fast\",\n    [$bg.variable]: \"colors.gray.300\",\n    _dark: {\n      [$bg.variable]: \"colors.whiteAlpha.400\",\n    },\n    _focusVisible: {\n      boxShadow: \"outline\",\n    },\n    _disabled: {\n      opacity: 0.4,\n      cursor: \"not-allowed\",\n    },\n    _checked: {\n      [$bg.variable]: `colors.${c}.500`,\n      _dark: {\n        [$bg.variable]: `colors.${c}.200`,\n      },\n    },\n    bg: $bg.reference,\n  }\n})\n\nconst baseStyleThumb = defineStyle({\n  bg: \"white\",\n  transitionProperty: \"transform\",\n  transitionDuration: \"normal\",\n  borderRadius: \"inherit\",\n  width: [$height.reference],\n  height: [$height.reference],\n  _checked: {\n    transform: `translateX(${$translateX.reference})`,\n  },\n})\n\nconst baseStyle = definePartsStyle((props) => ({\n  container: {\n    [$diff.variable]: diffValue,\n    [$translateX.variable]: $diff.reference,\n    _rtl: {\n      [$translateX.variable]: calc($diff).negate().toString(),\n    },\n  },\n  track: baseStyleTrack(props),\n  thumb: baseStyleThumb,\n}))\n\nconst sizes = {\n  sm: definePartsStyle({\n    container: {\n      [$width.variable]: \"1.375rem\",\n      [$height.variable]: \"sizes.3\",\n    },\n  }),\n  md: definePartsStyle({\n    container: {\n      [$width.variable]: \"1.875rem\",\n      [$height.variable]: \"sizes.4\",\n    },\n  }),\n  lg: definePartsStyle({\n    container: {\n      [$width.variable]: \"2.875rem\",\n      [$height.variable]: \"sizes.6\",\n    },\n  }),\n}\n\nexport const switchTheme = defineMultiStyleConfig({\n  baseStyle,\n  sizes,\n  defaultProps: {\n    size: \"md\",\n    colorScheme: \"blue\",\n  },\n})\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}