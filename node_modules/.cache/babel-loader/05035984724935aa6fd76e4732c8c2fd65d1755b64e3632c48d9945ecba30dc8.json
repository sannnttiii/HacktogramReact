{"ast":null,"code":"'use client';\n\n// src/transition-utils.ts\nvar TRANSITION_EASINGS = {\n  ease: [0.25, 0.1, 0.25, 1],\n  easeIn: [0.4, 0, 1, 1],\n  easeOut: [0, 0, 0.2, 1],\n  easeInOut: [0.4, 0, 0.2, 1]\n};\nvar TRANSITION_VARIANTS = {\n  scale: {\n    enter: {\n      scale: 1\n    },\n    exit: {\n      scale: 0.95\n    }\n  },\n  fade: {\n    enter: {\n      opacity: 1\n    },\n    exit: {\n      opacity: 0\n    }\n  },\n  pushLeft: {\n    enter: {\n      x: \"100%\"\n    },\n    exit: {\n      x: \"-30%\"\n    }\n  },\n  pushRight: {\n    enter: {\n      x: \"-100%\"\n    },\n    exit: {\n      x: \"30%\"\n    }\n  },\n  pushUp: {\n    enter: {\n      y: \"100%\"\n    },\n    exit: {\n      y: \"-30%\"\n    }\n  },\n  pushDown: {\n    enter: {\n      y: \"-100%\"\n    },\n    exit: {\n      y: \"30%\"\n    }\n  },\n  slideLeft: {\n    position: {\n      left: 0,\n      top: 0,\n      bottom: 0,\n      width: \"100%\"\n    },\n    enter: {\n      x: 0,\n      y: 0\n    },\n    exit: {\n      x: \"-100%\",\n      y: 0\n    }\n  },\n  slideRight: {\n    position: {\n      right: 0,\n      top: 0,\n      bottom: 0,\n      width: \"100%\"\n    },\n    enter: {\n      x: 0,\n      y: 0\n    },\n    exit: {\n      x: \"100%\",\n      y: 0\n    }\n  },\n  slideUp: {\n    position: {\n      top: 0,\n      left: 0,\n      right: 0,\n      maxWidth: \"100vw\"\n    },\n    enter: {\n      x: 0,\n      y: 0\n    },\n    exit: {\n      x: 0,\n      y: \"-100%\"\n    }\n  },\n  slideDown: {\n    position: {\n      bottom: 0,\n      left: 0,\n      right: 0,\n      maxWidth: \"100vw\"\n    },\n    enter: {\n      x: 0,\n      y: 0\n    },\n    exit: {\n      x: 0,\n      y: \"100%\"\n    }\n  }\n};\nfunction getSlideTransition(options) {\n  var _a;\n  const side = (_a = options == null ? void 0 : options.direction) != null ? _a : \"right\";\n  switch (side) {\n    case \"right\":\n      return TRANSITION_VARIANTS.slideRight;\n    case \"left\":\n      return TRANSITION_VARIANTS.slideLeft;\n    case \"bottom\":\n      return TRANSITION_VARIANTS.slideDown;\n    case \"top\":\n      return TRANSITION_VARIANTS.slideUp;\n    default:\n      return TRANSITION_VARIANTS.slideRight;\n  }\n}\nvar TRANSITION_DEFAULTS = {\n  enter: {\n    duration: 0.2,\n    ease: TRANSITION_EASINGS.easeOut\n  },\n  exit: {\n    duration: 0.1,\n    ease: TRANSITION_EASINGS.easeIn\n  }\n};\nvar withDelay = {\n  enter: (transition, delay) => ({\n    ...transition,\n    delay: typeof delay === \"number\" ? delay : delay == null ? void 0 : delay[\"enter\"]\n  }),\n  exit: (transition, delay) => ({\n    ...transition,\n    delay: typeof delay === \"number\" ? delay : delay == null ? void 0 : delay[\"exit\"]\n  })\n};\nexport { TRANSITION_EASINGS, TRANSITION_VARIANTS, getSlideTransition, TRANSITION_DEFAULTS, withDelay };","map":{"version":3,"mappings":";;;AAqCO,IAAMA,qBAAqB;EAChCC,MAAM,CAAC,MAAM,KAAK,MAAM,CAAC;EACzBC,QAAQ,CAAC,KAAK,GAAG,GAAG,CAAC;EACrBC,SAAS,CAAC,GAAG,GAAG,KAAK,CAAC;EACtBC,WAAW,CAAC,KAAK,GAAG,KAAK,CAAC;AAC5B;AAEO,IAAMC,sBAAsB;EACjCC,OAAO;IACLC,OAAO;MAAED,OAAO;IAAE;IAClBE,MAAM;MAAEF,OAAO;IAAK;EACtB;EACAG,MAAM;IACJF,OAAO;MAAEG,SAAS;IAAE;IACpBF,MAAM;MAAEE,SAAS;IAAE;EACrB;EACAC,UAAU;IACRJ,OAAO;MAAEK,GAAG;IAAO;IACnBJ,MAAM;MAAEI,GAAG;IAAO;EACpB;EACAC,WAAW;IACTN,OAAO;MAAEK,GAAG;IAAQ;IACpBJ,MAAM;MAAEI,GAAG;IAAM;EACnB;EACAE,QAAQ;IACNP,OAAO;MAAEQ,GAAG;IAAO;IACnBP,MAAM;MAAEO,GAAG;IAAO;EACpB;EACAC,UAAU;IACRT,OAAO;MAAEQ,GAAG;IAAQ;IACpBP,MAAM;MAAEO,GAAG;IAAM;EACnB;EACAE,WAAW;IACTC,UAAU;MAAEC,MAAM;MAAGC,KAAK;MAAGC,QAAQ;MAAGC,OAAO;IAAO;IACtDf,OAAO;MAAEK,GAAG;MAAGG,GAAG;IAAE;IACpBP,MAAM;MAAEI,GAAG;MAASG,GAAG;IAAE;EAC3B;EACAQ,YAAY;IACVL,UAAU;MAAEM,OAAO;MAAGJ,KAAK;MAAGC,QAAQ;MAAGC,OAAO;IAAO;IACvDf,OAAO;MAAEK,GAAG;MAAGG,GAAG;IAAE;IACpBP,MAAM;MAAEI,GAAG;MAAQG,GAAG;IAAE;EAC1B;EACAU,SAAS;IACPP,UAAU;MAAEE,KAAK;MAAGD,MAAM;MAAGK,OAAO;MAAGE,UAAU;IAAQ;IACzDnB,OAAO;MAAEK,GAAG;MAAGG,GAAG;IAAE;IACpBP,MAAM;MAAEI,GAAG;MAAGG,GAAG;IAAQ;EAC3B;EACAY,WAAW;IACTT,UAAU;MAAEG,QAAQ;MAAGF,MAAM;MAAGK,OAAO;MAAGE,UAAU;IAAQ;IAC5DnB,OAAO;MAAEK,GAAG;MAAGG,GAAG;IAAE;IACpBP,MAAM;MAAEI,GAAG;MAAGG,GAAG;IAAO;EAC1B;AACF;AAIO,SAASa,mBAAmBC,SAA0C;EA7F7E;EA8FE,MAAMC,QAAOC,wCAASC,cAAT,YAAsB;EACnC,QAAQF;IACN,KAAK;MACH,OAAOzB,oBAAoBkB;IAC7B,KAAK;MACH,OAAOlB,oBAAoBY;IAC7B,KAAK;MACH,OAAOZ,oBAAoBsB;IAC7B,KAAK;MACH,OAAOtB,oBAAoBoB;IAC7B;MACE,OAAOpB,oBAAoBkB;EAAA;AAEjC;AAEO,IAAMU,sBAAsB;EACjC1B,OAAO;IACL2B,UAAU;IACVjC,MAAMD,mBAAmBG;EAC3B;EACAK,MAAM;IACJ0B,UAAU;IACVjC,MAAMD,mBAAmBE;EAC3B;AACF;AAcO,IAAMiC,YAAY;EACvB5B,OAAO,CACL6B,YACAC,WACgD;IAChD,GAAGD;IACHC,OAAO,OAAOA,UAAU,WAAWA,QAAQA,+BAAQ;EACrD;EACA7B,MAAM,CACJ4B,YACAC,WACgD;IAChD,GAAGD;IACHC,OAAO,OAAOA,UAAU,WAAWA,QAAQA,+BAAQ;EACrD;AACF","names":["TRANSITION_EASINGS","ease","easeIn","easeOut","easeInOut","TRANSITION_VARIANTS","scale","enter","exit","fade","opacity","pushLeft","x","pushRight","pushUp","y","pushDown","slideLeft","position","left","top","bottom","width","slideRight","right","slideUp","maxWidth","slideDown","getSlideTransition","options","side","_a","direction","TRANSITION_DEFAULTS","duration","withDelay","transition","delay"],"sources":["/Users/santitri1205/Documents/SkillAcademy/BATCH2/react-final-project-hacktogram-v1/node_modules/@chakra-ui/transition/src/transition-utils.ts"],"sourcesContent":["import type { Target, TargetAndTransition, Transition } from \"framer-motion\"\n\nexport type TransitionProperties = {\n  /**\n   * Custom `transition` definition for `enter` and `exit`\n   */\n  transition?: TransitionConfig\n  /**\n   * Custom `transitionEnd` definition for `enter` and `exit`\n   */\n  transitionEnd?: TransitionEndConfig\n  /**\n   * Custom `delay` definition for `enter` and `exit`\n   */\n  delay?: number | DelayConfig\n}\n\ntype TargetResolver<P = {}> = (\n  props: P & TransitionProperties,\n) => TargetAndTransition\n\ntype Variant<P = {}> = TargetAndTransition | TargetResolver<P>\n\nexport type Variants<P = {}> = {\n  enter: Variant<P>\n  exit: Variant<P>\n  initial?: Variant<P>\n}\n\ntype WithMotionState<P> = Partial<Record<\"enter\" | \"exit\", P>>\n\nexport type TransitionConfig = WithMotionState<Transition>\n\nexport type TransitionEndConfig = WithMotionState<Target>\n\nexport type DelayConfig = WithMotionState<number>\n\nexport const TRANSITION_EASINGS = {\n  ease: [0.25, 0.1, 0.25, 1],\n  easeIn: [0.4, 0, 1, 1],\n  easeOut: [0, 0, 0.2, 1],\n  easeInOut: [0.4, 0, 0.2, 1],\n} as const\n\nexport const TRANSITION_VARIANTS = {\n  scale: {\n    enter: { scale: 1 },\n    exit: { scale: 0.95 },\n  },\n  fade: {\n    enter: { opacity: 1 },\n    exit: { opacity: 0 },\n  },\n  pushLeft: {\n    enter: { x: \"100%\" },\n    exit: { x: \"-30%\" },\n  },\n  pushRight: {\n    enter: { x: \"-100%\" },\n    exit: { x: \"30%\" },\n  },\n  pushUp: {\n    enter: { y: \"100%\" },\n    exit: { y: \"-30%\" },\n  },\n  pushDown: {\n    enter: { y: \"-100%\" },\n    exit: { y: \"30%\" },\n  },\n  slideLeft: {\n    position: { left: 0, top: 0, bottom: 0, width: \"100%\" },\n    enter: { x: 0, y: 0 },\n    exit: { x: \"-100%\", y: 0 },\n  },\n  slideRight: {\n    position: { right: 0, top: 0, bottom: 0, width: \"100%\" },\n    enter: { x: 0, y: 0 },\n    exit: { x: \"100%\", y: 0 },\n  },\n  slideUp: {\n    position: { top: 0, left: 0, right: 0, maxWidth: \"100vw\" },\n    enter: { x: 0, y: 0 },\n    exit: { x: 0, y: \"-100%\" },\n  },\n  slideDown: {\n    position: { bottom: 0, left: 0, right: 0, maxWidth: \"100vw\" },\n    enter: { x: 0, y: 0 },\n    exit: { x: 0, y: \"100%\" },\n  },\n}\n\nexport type SlideDirection = \"top\" | \"left\" | \"bottom\" | \"right\"\n\nexport function getSlideTransition(options?: { direction?: SlideDirection }) {\n  const side = options?.direction ?? \"right\"\n  switch (side) {\n    case \"right\":\n      return TRANSITION_VARIANTS.slideRight\n    case \"left\":\n      return TRANSITION_VARIANTS.slideLeft\n    case \"bottom\":\n      return TRANSITION_VARIANTS.slideDown\n    case \"top\":\n      return TRANSITION_VARIANTS.slideUp\n    default:\n      return TRANSITION_VARIANTS.slideRight\n  }\n}\n\nexport const TRANSITION_DEFAULTS = {\n  enter: {\n    duration: 0.2,\n    ease: TRANSITION_EASINGS.easeOut,\n  },\n  exit: {\n    duration: 0.1,\n    ease: TRANSITION_EASINGS.easeIn,\n  },\n} as const\n\nexport type WithTransitionConfig<P extends object> = Omit<P, \"transition\"> &\n  TransitionProperties & {\n    /**\n     * If `true`, the element will unmount when `in={false}` and animation is done\n     */\n    unmountOnExit?: boolean\n    /**\n     * Show the component; triggers when enter or exit states\n     */\n    in?: boolean\n  }\n\nexport const withDelay = {\n  enter: (\n    transition: Transition,\n    delay?: number | DelayConfig,\n  ): Transition & { delay: number | undefined } => ({\n    ...transition,\n    delay: typeof delay === \"number\" ? delay : delay?.[\"enter\"],\n  }),\n  exit: (\n    transition: Transition,\n    delay?: number | DelayConfig,\n  ): Transition & { delay: number | undefined } => ({\n    ...transition,\n    delay: typeof delay === \"number\" ? delay : delay?.[\"exit\"],\n  }),\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}