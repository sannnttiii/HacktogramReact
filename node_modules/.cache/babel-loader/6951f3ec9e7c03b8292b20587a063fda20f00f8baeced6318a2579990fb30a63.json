{"ast":null,"code":"'use client';\n\nimport { styled } from \"./chunk-5PL47M24.mjs\";\n\n// src/factory.ts\nfunction factory() {\n  const cache = /* @__PURE__ */new Map();\n  return new Proxy(styled, {\n    /**\n     * @example\n     * const Div = chakra(\"div\")\n     * const WithChakra = chakra(AnotherComponent)\n     */\n    apply(target, thisArg, argArray) {\n      return styled(...argArray);\n    },\n    /**\n     * @example\n     * <chakra.div />\n     */\n    get(_, element) {\n      if (!cache.has(element)) {\n        cache.set(element, styled(element));\n      }\n      return cache.get(element);\n    }\n  });\n}\nvar chakra = factory();\nexport { chakra };","map":{"version":3,"mappings":";;;;;AAWA,SAASA,UAAU;EACjB,MAAMC,QAAQ,mBAAIC,KAA+C;EAEjE,OAAO,IAAIC,MAAMC,QAAQ;IAAA;AAAA;AAAA;AAAA;AAAA;IAMvBC,MAAMC,QAAQC,SAASC,UAA8C;MACnE,OAAOJ,OAAO,GAAGI,QAAQ;IAC3B;IAAA;AAAA;AAAA;AAAA;IAKAC,IAAIC,GAAGC,SAAsB;MAC3B,IAAI,CAACV,MAAMW,IAAID,OAAO,GAAG;QACvBV,MAAMY,IAAIF,SAASP,OAAOO,OAAO,CAAC;MACpC;MACA,OAAOV,MAAMQ,IAAIE,OAAO;IAC1B;EACF,CAAC;AACH;AAOO,IAAMG,SAASd,SAAQ","names":["factory","cache","Map","Proxy","styled","apply","target","thisArg","argArray","get","_","element","has","set","chakra"],"sources":["/Users/santitri1205/Documents/SkillAcademy/BATCH2/react-final-project-hacktogram-v1/node_modules/@chakra-ui/system/src/factory.ts"],"sourcesContent":["import { DOMElements } from \"./system.utils\"\nimport { ChakraStyledOptions, HTMLChakraComponents, styled } from \"./system\"\nimport { As, ChakraComponent } from \"./system.types\"\n\ntype ChakraFactory = {\n  <T extends As, P extends object = {}>(\n    component: T,\n    options?: ChakraStyledOptions,\n  ): ChakraComponent<T, P>\n}\n\nfunction factory() {\n  const cache = new Map<DOMElements, ChakraComponent<DOMElements>>()\n\n  return new Proxy(styled, {\n    /**\n     * @example\n     * const Div = chakra(\"div\")\n     * const WithChakra = chakra(AnotherComponent)\n     */\n    apply(target, thisArg, argArray: [DOMElements, ChakraStyledOptions]) {\n      return styled(...argArray)\n    },\n    /**\n     * @example\n     * <chakra.div />\n     */\n    get(_, element: DOMElements) {\n      if (!cache.has(element)) {\n        cache.set(element, styled(element))\n      }\n      return cache.get(element)\n    },\n  }) as ChakraFactory & HTMLChakraComponents\n}\n/**\n * The Chakra factory serves as an object of chakra enabled JSX elements,\n * and also a function that can be used to enable custom component receive chakra's style props.\n *\n * @see Docs https://chakra-ui.com/docs/styled-system/chakra-factory\n */\nexport const chakra = factory()\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}