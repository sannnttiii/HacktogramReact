{"ast":null,"code":"'use client';\n\nimport { useEventListener } from \"./chunk-7JEV5YKL.mjs\";\n\n// src/use-mouse-down-ref.ts\nimport { useRef } from \"react\";\nfunction useMouseDownRef() {\n  let shouldListen = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n  const mouseDownRef = useRef();\n  useEventListener(\"mousedown\", event => {\n    if (shouldListen) {\n      mouseDownRef.current = event.target;\n    }\n  });\n  return mouseDownRef;\n}\nexport { useMouseDownRef };","map":{"version":3,"mappings":";;;;;AAAA,SAASA,cAAc;AAGhB,SAASC,kBAAqC;EAAA,IAArBC,mFAAe;EAC7C,MAAMC,eAAeH,QAA2B;EAEhDI,iBAAiB,aAAcC,SAAU;IACvC,IAAIH,cAAc;MAChBC,aAAaG,UAAUD,MAAME;IAC/B;EACF,CAAC;EAED,OAAOJ;AACT","names":["useRef","useMouseDownRef","shouldListen","mouseDownRef","useEventListener","event","current","target"],"sources":["/Users/santitri1205/Documents/SkillAcademy/BATCH2/react-final-project-hacktogram-v1/node_modules/@chakra-ui/hooks/src/use-mouse-down-ref.ts"],"sourcesContent":["import { useRef } from \"react\"\nimport { useEventListener } from \"./use-event-listener\"\n\nexport function useMouseDownRef(shouldListen = true) {\n  const mouseDownRef = useRef<EventTarget | null>()\n\n  useEventListener(\"mousedown\", (event) => {\n    if (shouldListen) {\n      mouseDownRef.current = event.target\n    }\n  })\n\n  return mouseDownRef as React.RefObject<HTMLElement>\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}