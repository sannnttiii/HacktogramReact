{"ast":null,"code":"var _jsxFileName = \"/Users/santitri1205/Documents/SkillAcademy/BATCH2/react-final-project-hacktogram-v1/src/routes/CreatePhoto.jsx\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { Box, Button, Input, FormControl, FormLabel, Textarea } from '@chakra-ui/react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CreatePhoto = () => {\n  _s();\n  const [photoUrl, setPhotoUrl] = useState('');\n  const [caption, setCaption] = useState('');\n  const navigate = useNavigate();\n  const handleUpload = async e => {\n    e.preventDefault();\n    const user = JSON.parse(localStorage.getItem('user'));\n    const newPhoto = {\n      url: photoUrl,\n      caption,\n      userId: user.id,\n      username: user.username\n    };\n    try {\n      await fetch('http://localhost:3001/photos', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(newPhoto)\n      });\n      navigate('/');\n    } catch (err) {\n      console.error(err);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    className: \"create-photo-page\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleUpload,\n      children: [/*#__PURE__*/_jsxDEV(FormControl, {\n        id: \"photo-url\",\n        isRequired: true,\n        children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n          children: \"Photo URL\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          \"data-testid\": \"photo-url\",\n          value: photoUrl,\n          onChange: e => setPhotoUrl(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n        id: \"caption\",\n        isRequired: true,\n        children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n          children: \"Caption\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Textarea, {\n          \"data-testid\": \"caption\",\n          value: caption,\n          onChange: e => setCaption(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        \"data-testid\": \"upload-button\",\n        type: \"submit\",\n        children: \"Upload\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n};\n_s(CreatePhoto, \"D7oY2hX9++hGBjnXnZ++OdAOlEY=\", false, function () {\n  return [useNavigate];\n});\n_c = CreatePhoto;\nexport default CreatePhoto;\nvar _c;\n$RefreshReg$(_c, \"CreatePhoto\");","map":{"version":3,"names":["useState","useNavigate","Box","Button","Input","FormControl","FormLabel","Textarea","CreatePhoto","photoUrl","setPhotoUrl","caption","setCaption","navigate","handleUpload","e","preventDefault","user","JSON","parse","localStorage","getItem","newPhoto","url","userId","id","username","fetch","method","headers","body","stringify","err","console","error","target","value"],"sources":["/Users/santitri1205/Documents/SkillAcademy/BATCH2/react-final-project-hacktogram-v1/src/routes/CreatePhoto.jsx"],"sourcesContent":["import { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { Box, Button, Input, FormControl, FormLabel, Textarea } from '@chakra-ui/react';\n\nconst CreatePhoto = () => {\n    const [photoUrl, setPhotoUrl] = useState('');\n  const [caption, setCaption] = useState('');\n  const navigate = useNavigate();\n\n  const handleUpload = async (e) => {\n    e.preventDefault();\n    const user = JSON.parse(localStorage.getItem('user'));\n\n    const newPhoto = {\n      url: photoUrl,\n      caption,\n      userId: user.id,\n      username: user.username,\n    };\n\n    try {\n      await fetch('http://localhost:3001/photos', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(newPhoto),\n      });\n\n      navigate('/');\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n\n    return (\n        <Box className=\"create-photo-page\">\n      <form onSubmit={handleUpload}>\n        <FormControl id=\"photo-url\" isRequired>\n          <FormLabel>Photo URL</FormLabel>\n          <Input data-testid=\"photo-url\" value={photoUrl} onChange={(e) => setPhotoUrl(e.target.value)} />\n        </FormControl>\n        <FormControl id=\"caption\" isRequired>\n          <FormLabel>Caption</FormLabel>\n          <Textarea data-testid=\"caption\" value={caption} onChange={(e) => setCaption(e.target.value)} />\n        </FormControl>\n        <Button data-testid=\"upload-button\" type=\"submit\">Upload</Button>\n      </form>\n    </Box>  \n    );\n};\n\nexport default CreatePhoto;\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,GAAG,EAAEC,MAAM,EAAEC,KAAK,EAAEC,WAAW,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,kBAAkB;AAAC;AAExF,MAAMC,WAAW,GAAG,MAAM;EAAA;EACtB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACW,OAAO,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAMa,QAAQ,GAAGZ,WAAW,EAAE;EAE9B,MAAMa,YAAY,GAAG,MAAOC,CAAC,IAAK;IAChCA,CAAC,CAACC,cAAc,EAAE;IAClB,MAAMC,IAAI,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,CAAC;IAErD,MAAMC,QAAQ,GAAG;MACfC,GAAG,EAAEd,QAAQ;MACbE,OAAO;MACPa,MAAM,EAAEP,IAAI,CAACQ,EAAE;MACfC,QAAQ,EAAET,IAAI,CAACS;IACjB,CAAC;IAED,IAAI;MACF,MAAMC,KAAK,CAAC,8BAA8B,EAAE;QAC1CC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UAAE,cAAc,EAAE;QAAmB,CAAC;QAC/CC,IAAI,EAAEZ,IAAI,CAACa,SAAS,CAACT,QAAQ;MAC/B,CAAC,CAAC;MAEFT,QAAQ,CAAC,GAAG,CAAC;IACf,CAAC,CAAC,OAAOmB,GAAG,EAAE;MACZC,OAAO,CAACC,KAAK,CAACF,GAAG,CAAC;IACpB;EACF,CAAC;EAGC,oBACI,QAAC,GAAG;IAAC,SAAS,EAAC,mBAAmB;IAAA,uBACpC;MAAM,QAAQ,EAAElB,YAAa;MAAA,wBAC3B,QAAC,WAAW;QAAC,EAAE,EAAC,WAAW;QAAC,UAAU;QAAA,wBACpC,QAAC,SAAS;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAAsB,eAChC,QAAC,KAAK;UAAC,eAAY,WAAW;UAAC,KAAK,EAAEL,QAAS;UAAC,QAAQ,EAAGM,CAAC,IAAKL,WAAW,CAACK,CAAC,CAACoB,MAAM,CAACC,KAAK;QAAE;UAAA;UAAA;UAAA;QAAA,QAAG;MAAA;QAAA;QAAA;QAAA;MAAA,QACpF,eACd,QAAC,WAAW;QAAC,EAAE,EAAC,SAAS;QAAC,UAAU;QAAA,wBAClC,QAAC,SAAS;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAAoB,eAC9B,QAAC,QAAQ;UAAC,eAAY,SAAS;UAAC,KAAK,EAAEzB,OAAQ;UAAC,QAAQ,EAAGI,CAAC,IAAKH,UAAU,CAACG,CAAC,CAACoB,MAAM,CAACC,KAAK;QAAE;UAAA;UAAA;UAAA;QAAA,QAAG;MAAA;QAAA;QAAA;QAAA;MAAA,QACnF,eACd,QAAC,MAAM;QAAC,eAAY,eAAe;QAAC,IAAI,EAAC,QAAQ;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAgB;IAAA;MAAA;MAAA;MAAA;IAAA;EAC5D;IAAA;IAAA;IAAA;EAAA,QACH;AAEV,CAAC;AAAC,GA7CI5B,WAAW;EAAA,QAGEP,WAAW;AAAA;AAAA,KAHxBO,WAAW;AA+CjB,eAAeA,WAAW;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}