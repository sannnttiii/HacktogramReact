{"ast":null,"code":"'use client';\n\nimport { TRANSITION_DEFAULTS, withDelay } from \"./chunk-6NHXDBFO.mjs\";\n\n// src/fade.tsx\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { AnimatePresence, motion } from \"framer-motion\";\nimport { forwardRef } from \"react\";\nimport { jsx } from \"react/jsx-runtime\";\nvar variants = {\n  enter: function () {\n    let {\n      transition,\n      transitionEnd,\n      delay\n    } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var _a;\n    return {\n      opacity: 1,\n      transition: (_a = transition == null ? void 0 : transition.enter) != null ? _a : withDelay.enter(TRANSITION_DEFAULTS.enter, delay),\n      transitionEnd: transitionEnd == null ? void 0 : transitionEnd.enter\n    };\n  },\n  exit: function () {\n    let {\n      transition,\n      transitionEnd,\n      delay\n    } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var _a;\n    return {\n      opacity: 0,\n      transition: (_a = transition == null ? void 0 : transition.exit) != null ? _a : withDelay.exit(TRANSITION_DEFAULTS.exit, delay),\n      transitionEnd: transitionEnd == null ? void 0 : transitionEnd.exit\n    };\n  }\n};\nvar fadeConfig = {\n  initial: \"exit\",\n  animate: \"enter\",\n  exit: \"exit\",\n  variants\n};\nvar Fade = forwardRef(function Fade2(props, ref) {\n  const {\n    unmountOnExit,\n    in: isOpen,\n    className,\n    transition,\n    transitionEnd,\n    delay,\n    ...rest\n  } = props;\n  const animate = isOpen || unmountOnExit ? \"enter\" : \"exit\";\n  const show = unmountOnExit ? isOpen && unmountOnExit : true;\n  const custom = {\n    transition,\n    transitionEnd,\n    delay\n  };\n  return /* @__PURE__ */jsx(AnimatePresence, {\n    custom,\n    children: show && /* @__PURE__ */jsx(motion.div, {\n      ref,\n      className: cx(\"chakra-fade\", className),\n      custom,\n      ...fadeConfig,\n      animate,\n      ...rest\n    })\n  });\n});\nFade.displayName = \"Fade\";\nexport { fadeConfig, Fade };","map":{"version":3,"mappings":";;;;;AAAA,SAASA,UAAU;AACnB,SACEC,iBAEAC,cAEK;AACP,SAASC,kBAAkB;AAuDnB;AA5CR,IAAMC,WAAqB;EACzBC,OAAO,YAA4C;IAAA,IAA3C;MAAEC;MAAYC;MAAeC;IAAM,wEAAI,CAAC;IAnBlD;IAmByD;MACrDC,SAAS;MACTH,aACEI,8CAAYL,UAAZ,YAAqBM,UAAUN,MAAMO,oBAAoBP,OAAOG,KAAK;MACvED,eAAeA,+CAAeF;IAChC;EAAA;EACAQ,MAAM,YAA4C;IAAA,IAA3C;MAAEP;MAAYC;MAAeC;IAAM,wEAAI,CAAC;IAzBjD;IAyBwD;MACpDC,SAAS;MACTH,aACEI,8CAAYG,SAAZ,YAAoBF,UAAUE,KAAKD,oBAAoBC,MAAML,KAAK;MACpED,eAAeA,+CAAeM;IAChC;EAAA;AACF;AAEO,IAAMC,aAAqC;EAChDC,SAAS;EACTC,SAAS;EACTH,MAAM;EACNT;AACF;AAEO,IAAMa,OAAOd,WAAsC,SAASc,MACjEC,OACAC,KACA;EACA,MAAM;IACJC;IACAC,IAAIC;IACJC;IACAjB;IACAC;IACAC;IACA,GAAGgB;EACL,IAAIN;EAEJ,MAAMF,UAAUM,UAAUF,gBAAgB,UAAU;EACpD,MAAMK,OAAOL,gBAAgBE,UAAUF,gBAAgB;EAEvD,MAAMM,SAAS;IAAEpB;IAAYC;IAAeC;EAAM;EAElD,OACE,mBAACP;IAAgByB;IACdC,kBACC,mBAACzB,OAAO0B,KAAP;MACCT;MACAI,WAAWvB,GAAG,eAAeuB,SAAS;MACtCG;MACC,GAAGZ;MACJE;MACC,GAAGQ;IAAA;EACN,CAEJ;AAEJ,CAAC;AAEDP,KAAKY,cAAc","names":["cx","AnimatePresence","motion","forwardRef","variants","enter","transition","transitionEnd","delay","opacity","_a","withDelay","TRANSITION_DEFAULTS","exit","fadeConfig","initial","animate","Fade","props","ref","unmountOnExit","in","isOpen","className","rest","show","custom","children","div","displayName"],"sources":["/Users/santitri1205/Documents/SkillAcademy/BATCH2/react-final-project-hacktogram-v1/node_modules/@chakra-ui/transition/src/fade.tsx"],"sourcesContent":["import { cx } from \"@chakra-ui/shared-utils\"\nimport {\n  AnimatePresence,\n  HTMLMotionProps,\n  motion,\n  Variants as _Variants,\n} from \"framer-motion\"\nimport { forwardRef } from \"react\"\nimport {\n  TRANSITION_DEFAULTS,\n  Variants,\n  withDelay,\n  WithTransitionConfig,\n} from \"./transition-utils\"\n\nexport interface FadeProps\n  extends WithTransitionConfig<HTMLMotionProps<\"div\">> {}\n\nconst variants: Variants = {\n  enter: ({ transition, transitionEnd, delay } = {}) => ({\n    opacity: 1,\n    transition:\n      transition?.enter ?? withDelay.enter(TRANSITION_DEFAULTS.enter, delay),\n    transitionEnd: transitionEnd?.enter,\n  }),\n  exit: ({ transition, transitionEnd, delay } = {}) => ({\n    opacity: 0,\n    transition:\n      transition?.exit ?? withDelay.exit(TRANSITION_DEFAULTS.exit, delay),\n    transitionEnd: transitionEnd?.exit,\n  }),\n}\n\nexport const fadeConfig: HTMLMotionProps<\"div\"> = {\n  initial: \"exit\",\n  animate: \"enter\",\n  exit: \"exit\",\n  variants: variants as _Variants,\n}\n\nexport const Fade = forwardRef<HTMLDivElement, FadeProps>(function Fade(\n  props,\n  ref,\n) {\n  const {\n    unmountOnExit,\n    in: isOpen,\n    className,\n    transition,\n    transitionEnd,\n    delay,\n    ...rest\n  } = props\n\n  const animate = isOpen || unmountOnExit ? \"enter\" : \"exit\"\n  const show = unmountOnExit ? isOpen && unmountOnExit : true\n\n  const custom = { transition, transitionEnd, delay }\n\n  return (\n    <AnimatePresence custom={custom}>\n      {show && (\n        <motion.div\n          ref={ref}\n          className={cx(\"chakra-fade\", className)}\n          custom={custom}\n          {...fadeConfig}\n          animate={animate}\n          {...rest}\n        />\n      )}\n    </AnimatePresence>\n  )\n})\n\nFade.displayName = \"Fade\"\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}