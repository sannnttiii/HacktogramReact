{"ast":null,"code":"'use client';\n\n// src/modal-transition.tsx\nimport { chakra } from \"@chakra-ui/system\";\nimport { scaleFadeConfig, slideFadeConfig } from \"@chakra-ui/transition\";\nimport { motion } from \"framer-motion\";\nimport { forwardRef } from \"react\";\nimport { jsx } from \"react/jsx-runtime\";\nvar transitions = {\n  slideInBottom: {\n    ...slideFadeConfig,\n    custom: {\n      offsetY: 16,\n      reverse: true\n    }\n  },\n  slideInRight: {\n    ...slideFadeConfig,\n    custom: {\n      offsetX: 16,\n      reverse: true\n    }\n  },\n  slideInTop: {\n    ...slideFadeConfig,\n    custom: {\n      offsetY: -16,\n      reverse: true\n    }\n  },\n  slideInLeft: {\n    ...slideFadeConfig,\n    custom: {\n      offsetX: -16,\n      reverse: true\n    }\n  },\n  scale: {\n    ...scaleFadeConfig,\n    custom: {\n      initialScale: 0.95,\n      reverse: true\n    }\n  },\n  none: {}\n};\nvar MotionSection = chakra(motion.section);\nvar getMotionProps = preset => {\n  return transitions[preset || \"none\"];\n};\nvar ModalTransition = forwardRef((props, ref) => {\n  const {\n    preset,\n    motionProps = getMotionProps(preset),\n    ...rest\n  } = props;\n  return /* @__PURE__ */jsx(MotionSection, {\n    ref,\n    ...motionProps,\n    ...rest\n  });\n});\nModalTransition.displayName = \"ModalTransition\";\nexport { ModalTransition };","map":{"version":3,"mappings":";;;AAAA,SAASA,cAA2B;AACpC,SAASC,iBAAiBC,uBAAuB;AACjD,SAA0BC,cAAc;AACxC,SAASC,kBAAkB;AAiDrB;AAlCN,IAAMC,cAAc;EAClBC,eAAe;IACb,GAAGJ;IACHK,QAAQ;MAAEC,SAAS;MAAIC,SAAS;IAAK;EACvC;EACAC,cAAc;IACZ,GAAGR;IACHK,QAAQ;MAAEI,SAAS;MAAIF,SAAS;IAAK;EACvC;EACAG,YAAY;IACV,GAAGV;IACHK,QAAQ;MAAEC,SAAS;MAAKC,SAAS;IAAK;EACxC;EACAI,aAAa;IACX,GAAGX;IACHK,QAAQ;MAAEI,SAAS;MAAKF,SAAS;IAAK;EACxC;EACAK,OAAO;IACL,GAAGb;IACHM,QAAQ;MAAEQ,cAAc;MAAMN,SAAS;IAAK;EAC9C;EACAO,MAAM,CAAC;AACT;AAEA,IAAMC,gBAAgBjB,OAAOG,OAAOe,OAAO;AAE3C,IAAMC,iBAAkBC,UAA2C;EACjE,OAAOf,YAAYe,UAAU,MAAM;AACrC;AAEO,IAAMC,kBAAkBjB,WAC7B,CAACkB,OAA6BC,QAAwB;EACpD,MAAM;IAAEH;IAAQI,cAAcL,eAAeC,MAAM;IAAG,GAAGK;EAAK,IAAIH;EAClE,OACE,mBAACL;IAAcM;IAAW,GAAIC;IAA8B,GAAGC;EAAA,CAAM;AAEzE,EACF;AAEAJ,gBAAgBK,cAAc","names":["chakra","scaleFadeConfig","slideFadeConfig","motion","forwardRef","transitions","slideInBottom","custom","offsetY","reverse","slideInRight","offsetX","slideInTop","slideInLeft","scale","initialScale","none","MotionSection","section","getMotionProps","preset","ModalTransition","props","ref","motionProps","rest","displayName"],"sources":["/Users/santitri1205/Documents/SkillAcademy/BATCH2/react-final-project-hacktogram-v1/node_modules/@chakra-ui/modal/src/modal-transition.tsx"],"sourcesContent":["import { chakra, ChakraProps } from \"@chakra-ui/system\"\nimport { scaleFadeConfig, slideFadeConfig } from \"@chakra-ui/transition\"\nimport { HTMLMotionProps, motion } from \"framer-motion\"\nimport { forwardRef } from \"react\"\n\nexport interface ModalTransitionProps\n  extends Omit<HTMLMotionProps<\"section\">, \"color\" | \"transition\">,\n    ChakraProps {\n  preset?:\n    | \"slideInBottom\"\n    | \"slideInRight\"\n    | \"slideInTop\"\n    | \"slideInLeft\"\n    | \"scale\"\n    | \"none\"\n  motionProps?: HTMLMotionProps<\"section\">\n}\n\nconst transitions = {\n  slideInBottom: {\n    ...slideFadeConfig,\n    custom: { offsetY: 16, reverse: true },\n  },\n  slideInRight: {\n    ...slideFadeConfig,\n    custom: { offsetX: 16, reverse: true },\n  },\n  slideInTop: {\n    ...slideFadeConfig,\n    custom: { offsetY: -16, reverse: true },\n  },\n  slideInLeft: {\n    ...slideFadeConfig,\n    custom: { offsetX: -16, reverse: true },\n  },\n  scale: {\n    ...scaleFadeConfig,\n    custom: { initialScale: 0.95, reverse: true },\n  },\n  none: {},\n}\n\nconst MotionSection = chakra(motion.section)\n\nconst getMotionProps = (preset: ModalTransitionProps[\"preset\"]) => {\n  return transitions[preset || \"none\"]\n}\n\nexport const ModalTransition = forwardRef(\n  (props: ModalTransitionProps, ref: React.Ref<any>) => {\n    const { preset, motionProps = getMotionProps(preset), ...rest } = props\n    return (\n      <MotionSection ref={ref} {...(motionProps as ChakraProps)} {...rest} />\n    )\n  },\n)\n\nModalTransition.displayName = \"ModalTransition\"\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}