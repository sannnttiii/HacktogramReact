{"ast":null,"code":"'use client';\n\nimport { Icon } from \"./chunk-2GBDXOMA.mjs\";\n\n// src/create-icon.tsx\nimport { forwardRef } from \"@chakra-ui/system\";\nimport { Children } from \"react\";\nimport { jsx } from \"react/jsx-runtime\";\nfunction createIcon(options) {\n  const {\n    viewBox = \"0 0 24 24\",\n    d: pathDefinition,\n    displayName,\n    defaultProps = {}\n  } = options;\n  const path = Children.toArray(options.path);\n  const Comp = forwardRef((props, ref) => /* @__PURE__ */jsx(Icon, {\n    ref,\n    viewBox,\n    ...defaultProps,\n    ...props,\n    children: path.length ? path : /* @__PURE__ */jsx(\"path\", {\n      fill: \"currentColor\",\n      d: pathDefinition\n    })\n  }));\n  Comp.displayName = displayName;\n  return Comp;\n}\nexport { createIcon };","map":{"version":3,"mappings":";;;;;AAAA,SAASA,kBAAkB;AAC3B,SAASC,gBAAgB;AAuCG;AAXrB,SAASC,WAAWC,SAA4B;EACrD,MAAM;IACJC,UAAU;IACVC,GAAGC;IACHC;IACAC,eAAe,CAAC;EAClB,IAAIL;EACJ,MAAMM,OAAOR,SAASS,QAAQP,QAAQM,IAAI;EAE1C,MAAME,OAAOX,WAA6B,CAACY,OAAOC,QAChD,mBAACC;IAAKD;IAAUT;IAAmB,GAAGI;IAAe,GAAGI;IACrDG,eAAKC,SAASP,OAAO,mBAAC;MAAKQ,MAAK;MAAeZ,GAAGC;IAAA,CAAgB;EAAA,CACrE,CACD;EAEDK,KAAKJ,cAAcA;EAEnB,OAAOI;AACT","names":["forwardRef","Children","createIcon","options","viewBox","d","pathDefinition","displayName","defaultProps","path","toArray","Comp","props","ref","Icon","children","length","fill"],"sources":["/Users/santitri1205/Documents/SkillAcademy/BATCH2/react-final-project-hacktogram-v1/node_modules/@chakra-ui/icon/src/create-icon.tsx"],"sourcesContent":["import { forwardRef } from \"@chakra-ui/system\"\nimport { Children } from \"react\"\nimport { Icon, IconProps } from \"./icon\"\n\ninterface CreateIconOptions {\n  /**\n   * The icon `svg` viewBox\n   * @default \"0 0 24 24\"\n   */\n  viewBox?: string\n  /**\n   * The `svg` path or group element\n   * @type React.ReactElement | React.ReactElement[]\n   */\n  path?: React.ReactElement | React.ReactElement[]\n  /**\n   * If the `svg` has a single path, simply copy the path's `d` attribute\n   */\n  d?: string\n  /**\n   * The display name useful in the dev tools\n   */\n  displayName?: string\n  /**\n   * Default props automatically passed to the component; overwritable\n   */\n  defaultProps?: IconProps\n}\n\nexport function createIcon(options: CreateIconOptions) {\n  const {\n    viewBox = \"0 0 24 24\",\n    d: pathDefinition,\n    displayName,\n    defaultProps = {},\n  } = options\n  const path = Children.toArray(options.path)\n\n  const Comp = forwardRef<IconProps, \"svg\">((props, ref) => (\n    <Icon ref={ref} viewBox={viewBox} {...defaultProps} {...props}>\n      {path.length ? path : <path fill=\"currentColor\" d={pathDefinition} />}\n    </Icon>\n  ))\n\n  Comp.displayName = displayName\n\n  return Comp\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}