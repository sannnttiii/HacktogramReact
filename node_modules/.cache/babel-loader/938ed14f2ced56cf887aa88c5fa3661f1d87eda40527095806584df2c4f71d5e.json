{"ast":null,"code":"// src/components/progress.ts\nimport { progressAnatomy as parts } from \"@chakra-ui/anatomy\";\nimport { createMultiStyleConfigHelpers, defineStyle } from \"@chakra-ui/styled-system\";\nimport { generateStripe, getColor, mode } from \"@chakra-ui/theme-tools\";\nvar {\n  defineMultiStyleConfig,\n  definePartsStyle\n} = createMultiStyleConfigHelpers(parts.keys);\nvar filledStyle = defineStyle(props => {\n  const {\n    colorScheme: c,\n    theme: t,\n    isIndeterminate,\n    hasStripe\n  } = props;\n  const stripeStyle = mode(generateStripe(), generateStripe(\"1rem\", \"rgba(0,0,0,0.1)\"))(props);\n  const bgColor = mode(`${c}.500`, `${c}.200`)(props);\n  const gradient = `linear-gradient(\n    to right,\n    transparent 0%,\n    ${getColor(t, bgColor)} 50%,\n    transparent 100%\n  )`;\n  const addStripe = !isIndeterminate && hasStripe;\n  return {\n    ...(addStripe && stripeStyle),\n    ...(isIndeterminate ? {\n      bgImage: gradient\n    } : {\n      bgColor\n    })\n  };\n});\nvar baseStyleLabel = defineStyle({\n  lineHeight: \"1\",\n  fontSize: \"0.25em\",\n  fontWeight: \"bold\",\n  color: \"white\"\n});\nvar baseStyleTrack = defineStyle(props => {\n  return {\n    bg: mode(\"gray.100\", \"whiteAlpha.300\")(props)\n  };\n});\nvar baseStyleFilledTrack = defineStyle(props => {\n  return {\n    transitionProperty: \"common\",\n    transitionDuration: \"slow\",\n    ...filledStyle(props)\n  };\n});\nvar baseStyle = definePartsStyle(props => ({\n  label: baseStyleLabel,\n  filledTrack: baseStyleFilledTrack(props),\n  track: baseStyleTrack(props)\n}));\nvar sizes = {\n  xs: definePartsStyle({\n    track: {\n      h: \"1\"\n    }\n  }),\n  sm: definePartsStyle({\n    track: {\n      h: \"2\"\n    }\n  }),\n  md: definePartsStyle({\n    track: {\n      h: \"3\"\n    }\n  }),\n  lg: definePartsStyle({\n    track: {\n      h: \"4\"\n    }\n  })\n};\nvar progressTheme = defineMultiStyleConfig({\n  sizes,\n  baseStyle,\n  defaultProps: {\n    size: \"md\",\n    colorScheme: \"blue\"\n  }\n});\nexport { progressTheme };","map":{"version":3,"mappings":";AAAA,SAASA,mBAAmBC,aAAa;AACzC,SACEC,+BACAC,mBACK;AACP,SAASC,gBAAgBC,UAAUC,YAAY;AAE/C,IAAM;EAAEC;EAAwBC;AAAiB,IAC/CN,8BAA8BD,MAAMQ,IAAI;AAE1C,IAAMC,cAAcP,YAAaQ,SAAU;EACzC,MAAM;IAAEC,aAAaC;IAAGC,OAAOC;IAAGC;IAAiBC;EAAU,IAAIN;EAEjE,MAAMO,cAAcZ,KAClBF,gBAAe,EACfA,eAAe,QAAQ,iBAAiB,EAC1C,CAAEO,KAAK;EAEP,MAAMQ,UAAUb,KAAK,GAAGO,CAAC,QAAQ,GAAGA,CAAC,MAAM,EAAEF,KAAK;EAElD,MAAMS,WAAW;AAAA;AAAA;AAAA,MAGbf,SAASU,GAAGI,OAAO,CAAC;AAAA;AAAA;EAIxB,MAAME,YAAY,CAACL,mBAAmBC;EAEtC,OAAO;IACL,IAAII,aAAaH;IACjB,IAAIF,kBAAkB;MAAEM,SAASF;IAAS,IAAI;MAAED;IAAQ;EAC1D;AACF,CAAC;AAED,IAAMI,iBAAiBpB,YAAY;EACjCqB,YAAY;EACZC,UAAU;EACVC,YAAY;EACZC,OAAO;AACT,CAAC;AAED,IAAMC,iBAAiBzB,YAAaQ,SAAU;EAC5C,OAAO;IACLkB,IAAIvB,KAAK,YAAY,gBAAgB,EAAEK,KAAK;EAC9C;AACF,CAAC;AAED,IAAMmB,uBAAuB3B,YAAaQ,SAAU;EAClD,OAAO;IACLoB,oBAAoB;IACpBC,oBAAoB;IACpB,GAAGtB,YAAYC,KAAK;EACtB;AACF,CAAC;AAED,IAAMsB,YAAYzB,iBAAkBG,UAAW;EAC7CuB,OAAOX;EACPY,aAAaL,qBAAqBnB,KAAK;EACvCyB,OAAOR,eAAejB,KAAK;AAC7B,EAAE;AAEF,IAAM0B,QAAQ;EACZC,IAAI9B,iBAAiB;IACnB4B,OAAO;MAAEG,GAAG;IAAI;EAClB,CAAC;EACDC,IAAIhC,iBAAiB;IACnB4B,OAAO;MAAEG,GAAG;IAAI;EAClB,CAAC;EACDE,IAAIjC,iBAAiB;IACnB4B,OAAO;MAAEG,GAAG;IAAI;EAClB,CAAC;EACDG,IAAIlC,iBAAiB;IACnB4B,OAAO;MAAEG,GAAG;IAAI;EAClB,CAAC;AACH;AAEO,IAAMI,gBAAgBpC,uBAAuB;EAClD8B;EACAJ;EACAW,cAAc;IACZC,MAAM;IACNjC,aAAa;EACf;AACF,CAAC","names":["progressAnatomy","parts","createMultiStyleConfigHelpers","defineStyle","generateStripe","getColor","mode","defineMultiStyleConfig","definePartsStyle","keys","filledStyle","props","colorScheme","c","theme","t","isIndeterminate","hasStripe","stripeStyle","bgColor","gradient","addStripe","bgImage","baseStyleLabel","lineHeight","fontSize","fontWeight","color","baseStyleTrack","bg","baseStyleFilledTrack","transitionProperty","transitionDuration","baseStyle","label","filledTrack","track","sizes","xs","h","sm","md","lg","progressTheme","defaultProps","size"],"sources":["/Users/santitri1205/Documents/SkillAcademy/BATCH2/react-final-project-hacktogram-v1/node_modules/@chakra-ui/theme/src/components/progress.ts"],"sourcesContent":["import { progressAnatomy as parts } from \"@chakra-ui/anatomy\"\nimport {\n  createMultiStyleConfigHelpers,\n  defineStyle,\n} from \"@chakra-ui/styled-system\"\nimport { generateStripe, getColor, mode } from \"@chakra-ui/theme-tools\"\n\nconst { defineMultiStyleConfig, definePartsStyle } =\n  createMultiStyleConfigHelpers(parts.keys)\n\nconst filledStyle = defineStyle((props) => {\n  const { colorScheme: c, theme: t, isIndeterminate, hasStripe } = props\n\n  const stripeStyle = mode(\n    generateStripe(),\n    generateStripe(\"1rem\", \"rgba(0,0,0,0.1)\"),\n  )(props)\n\n  const bgColor = mode(`${c}.500`, `${c}.200`)(props)\n\n  const gradient = `linear-gradient(\n    to right,\n    transparent 0%,\n    ${getColor(t, bgColor)} 50%,\n    transparent 100%\n  )`\n\n  const addStripe = !isIndeterminate && hasStripe\n\n  return {\n    ...(addStripe && stripeStyle),\n    ...(isIndeterminate ? { bgImage: gradient } : { bgColor }),\n  }\n})\n\nconst baseStyleLabel = defineStyle({\n  lineHeight: \"1\",\n  fontSize: \"0.25em\",\n  fontWeight: \"bold\",\n  color: \"white\",\n})\n\nconst baseStyleTrack = defineStyle((props) => {\n  return {\n    bg: mode(\"gray.100\", \"whiteAlpha.300\")(props),\n  }\n})\n\nconst baseStyleFilledTrack = defineStyle((props) => {\n  return {\n    transitionProperty: \"common\",\n    transitionDuration: \"slow\",\n    ...filledStyle(props),\n  }\n})\n\nconst baseStyle = definePartsStyle((props) => ({\n  label: baseStyleLabel,\n  filledTrack: baseStyleFilledTrack(props),\n  track: baseStyleTrack(props),\n}))\n\nconst sizes = {\n  xs: definePartsStyle({\n    track: { h: \"1\" },\n  }),\n  sm: definePartsStyle({\n    track: { h: \"2\" },\n  }),\n  md: definePartsStyle({\n    track: { h: \"3\" },\n  }),\n  lg: definePartsStyle({\n    track: { h: \"4\" },\n  }),\n}\n\nexport const progressTheme = defineMultiStyleConfig({\n  sizes,\n  baseStyle,\n  defaultProps: {\n    size: \"md\",\n    colorScheme: \"blue\",\n  },\n})\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}