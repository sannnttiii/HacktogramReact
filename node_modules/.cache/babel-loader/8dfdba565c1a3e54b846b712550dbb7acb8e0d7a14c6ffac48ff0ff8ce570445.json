{"ast":null,"code":"'use client';\n\n// src/tag.tsx\nimport { Icon } from \"@chakra-ui/icon\";\nimport { createContext } from \"@chakra-ui/react-context\";\nimport { chakra, forwardRef, omitThemingProps, useMultiStyleConfig } from \"@chakra-ui/system\";\nimport { jsx } from \"react/jsx-runtime\";\nvar [TagStylesProvider, useTagStyles] = createContext({\n  name: `TagStylesContext`,\n  errorMessage: `useTagStyles returned is 'undefined'. Seems you forgot to wrap the components in \"<Tag />\" `\n});\nvar Tag = forwardRef((props, ref) => {\n  const styles = useMultiStyleConfig(\"Tag\", props);\n  const ownProps = omitThemingProps(props);\n  const containerStyles = {\n    display: \"inline-flex\",\n    verticalAlign: \"top\",\n    alignItems: \"center\",\n    maxWidth: \"100%\",\n    ...styles.container\n  };\n  return /* @__PURE__ */jsx(TagStylesProvider, {\n    value: styles,\n    children: /* @__PURE__ */jsx(chakra.span, {\n      ref,\n      ...ownProps,\n      __css: containerStyles\n    })\n  });\n});\nTag.displayName = \"Tag\";\nvar TagLabel = forwardRef((props, ref) => {\n  const styles = useTagStyles();\n  return /* @__PURE__ */jsx(chakra.span, {\n    ref,\n    noOfLines: 1,\n    ...props,\n    __css: styles.label\n  });\n});\nTagLabel.displayName = \"TagLabel\";\nvar TagLeftIcon = forwardRef((props, ref) => /* @__PURE__ */jsx(Icon, {\n  ref,\n  verticalAlign: \"top\",\n  marginEnd: \"0.5rem\",\n  ...props\n}));\nTagLeftIcon.displayName = \"TagLeftIcon\";\nvar TagRightIcon = forwardRef((props, ref) => /* @__PURE__ */jsx(Icon, {\n  ref,\n  verticalAlign: \"top\",\n  marginStart: \"0.5rem\",\n  ...props\n}));\nTagRightIcon.displayName = \"TagRightIcon\";\nvar TagCloseIcon = props => /* @__PURE__ */jsx(Icon, {\n  verticalAlign: \"inherit\",\n  viewBox: \"0 0 512 512\",\n  ...props,\n  children: /* @__PURE__ */jsx(\"path\", {\n    fill: \"currentColor\",\n    d: \"M289.94 256l95-95A24 24 0 00351 127l-95 95-95-95a24 24 0 00-34 34l95 95-95 95a24 24 0 1034 34l95-95 95 95a24 24 0 0034-34z\"\n  })\n});\nTagCloseIcon.displayName = \"TagCloseIcon\";\nvar TagCloseButton = forwardRef((props, ref) => {\n  const {\n    isDisabled,\n    children,\n    ...rest\n  } = props;\n  const styles = useTagStyles();\n  const btnStyles = {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    outline: \"0\",\n    ...styles.closeButton\n  };\n  return /* @__PURE__ */jsx(chakra.button, {\n    ref,\n    \"aria-label\": \"close\",\n    ...rest,\n    type: \"button\",\n    disabled: isDisabled,\n    __css: btnStyles,\n    children: children || /* @__PURE__ */jsx(TagCloseIcon, {})\n  });\n});\nTagCloseButton.displayName = \"TagCloseButton\";\nexport { useTagStyles, Tag, TagLabel, TagLeftIcon, TagRightIcon, TagCloseButton };","map":{"version":3,"mappings":";;;AAAA,SAASA,YAAuB;AAChC,SAASC,qBAAqB;AAC9B,SACEC,QACAC,YAEAC,kBAGAC,2BACK;AAkCD;AAhCN,IAAM,CAACC,mBAAmBC,YAAY,IAAIN,cAExC;EACAO,MAAM;EACNC,cAAc;AAChB,CAAC;AAaM,IAAMC,MAAMP,WAA6B,CAACQ,OAAOC,QAAQ;EAC9D,MAAMC,SAASR,oBAAoB,OAAOM,KAAK;EAC/C,MAAMG,WAAWV,iBAAiBO,KAAK;EAEvC,MAAMI,kBAAqC;IACzCC,SAAS;IACTC,eAAe;IACfC,YAAY;IACZC,UAAU;IACV,GAAGN,OAAOO;EACZ;EAEA,OACE,mBAACd;IAAkBe,OAAOR;IACxBS,6BAACpB,OAAOqB,MAAP;MAAYX;MAAW,GAAGE;MAAUU,OAAOT;IAAA,CAAiB;EAAA,CAC/D;AAEJ,CAAC;AAEDL,IAAIe,cAAc;AAIX,IAAMC,WAAWvB,WAAkC,CAACQ,OAAOC,QAAQ;EACxE,MAAMC,SAASN,cAAa;EAC5B,OAAO,mBAACL,OAAOqB,MAAP;IAAYX;IAAUe,WAAW;IAAI,GAAGhB;IAAOa,OAAOX,OAAOe;EAAA,CAAO;AAC9E,CAAC;AAEDF,SAASD,cAAc;AAEhB,IAAMI,cAAc1B,WAA6B,CAACQ,OAAOC,QAC9D,mBAACZ;EAAKY;EAAUK,eAAc;EAAMa,WAAU;EAAU,GAAGnB;AAAA,CAAO,CACnE;AAEDkB,YAAYJ,cAAc;AAEnB,IAAMM,eAAe5B,WAA6B,CAACQ,OAAOC,QAC/D,mBAACZ;EAAKY;EAAUK,eAAc;EAAMe,aAAY;EAAU,GAAGrB;AAAA,CAAO,CACrE;AAEDoB,aAAaN,cAAc;AAE3B,IAAMQ,eAAqCtB,SACzC,mBAACX;EAAKiB,eAAc;EAAUiB,SAAQ;EAAe,GAAGvB;EACtDW,6BAAC;IACCa,MAAK;IACLC,GAAE;EAAA;AACJ,CACF;AAGFH,aAAaR,cAAc;AAcpB,IAAMY,iBAAiBlC,WAC5B,CAACQ,OAAOC,QAAQ;EACd,MAAM;IAAE0B;IAAYhB;IAAU,GAAGiB;EAAK,IAAI5B;EAE1C,MAAME,SAASN,cAAa;EAE5B,MAAMiC,YAA+B;IACnCxB,SAAS;IACTE,YAAY;IACZuB,gBAAgB;IAChBC,SAAS;IACT,GAAG7B,OAAO8B;EACZ;EAEA,OACE,mBAACzC,OAAO0C,QAAP;IACChC;IACA,cAAW;IACV,GAAG2B;IACJM,MAAK;IACLC,UAAUR;IACVd,OAAOgB;IAENlB,sBAAY,mBAACW,gBAAa;EAAA,EAC7B;AAEJ,EACF;AAEAI,eAAeZ,cAAc","names":["Icon","createContext","chakra","forwardRef","omitThemingProps","useMultiStyleConfig","TagStylesProvider","useTagStyles","name","errorMessage","Tag","props","ref","styles","ownProps","containerStyles","display","verticalAlign","alignItems","maxWidth","container","value","children","span","__css","displayName","TagLabel","noOfLines","label","TagLeftIcon","marginEnd","TagRightIcon","marginStart","TagCloseIcon","viewBox","fill","d","TagCloseButton","isDisabled","rest","btnStyles","justifyContent","outline","closeButton","button","type","disabled"],"sources":["/Users/santitri1205/Documents/SkillAcademy/BATCH2/react-final-project-hacktogram-v1/node_modules/@chakra-ui/tag/src/tag.tsx"],"sourcesContent":["import { Icon, IconProps } from \"@chakra-ui/icon\"\nimport { createContext } from \"@chakra-ui/react-context\"\nimport {\n  chakra,\n  forwardRef,\n  HTMLChakraProps,\n  omitThemingProps,\n  SystemStyleObject,\n  ThemingProps,\n  useMultiStyleConfig,\n} from \"@chakra-ui/system\"\n\nconst [TagStylesProvider, useTagStyles] = createContext<\n  Record<string, SystemStyleObject>\n>({\n  name: `TagStylesContext`,\n  errorMessage: `useTagStyles returned is 'undefined'. Seems you forgot to wrap the components in \"<Tag />\" `,\n})\n\nexport { useTagStyles }\n\nexport interface TagProps\n  extends HTMLChakraProps<\"span\">,\n    ThemingProps<\"Tag\"> {}\n\n/**\n * The tag component is used to label or categorize UI elements.\n * To style the tag globally, change the styles in `theme.components.Tag`\n * @see Docs https://chakra-ui.com/tag\n */\nexport const Tag = forwardRef<TagProps, \"span\">((props, ref) => {\n  const styles = useMultiStyleConfig(\"Tag\", props)\n  const ownProps = omitThemingProps(props)\n\n  const containerStyles: SystemStyleObject = {\n    display: \"inline-flex\",\n    verticalAlign: \"top\",\n    alignItems: \"center\",\n    maxWidth: \"100%\",\n    ...styles.container,\n  }\n\n  return (\n    <TagStylesProvider value={styles}>\n      <chakra.span ref={ref} {...ownProps} __css={containerStyles} />\n    </TagStylesProvider>\n  )\n})\n\nTag.displayName = \"Tag\"\n\nexport interface TagLabelProps extends HTMLChakraProps<\"span\"> {}\n\nexport const TagLabel = forwardRef<TagLabelProps, \"span\">((props, ref) => {\n  const styles = useTagStyles()\n  return <chakra.span ref={ref} noOfLines={1} {...props} __css={styles.label} />\n})\n\nTagLabel.displayName = \"TagLabel\"\n\nexport const TagLeftIcon = forwardRef<IconProps, \"svg\">((props, ref) => (\n  <Icon ref={ref} verticalAlign=\"top\" marginEnd=\"0.5rem\" {...props} />\n))\n\nTagLeftIcon.displayName = \"TagLeftIcon\"\n\nexport const TagRightIcon = forwardRef<IconProps, \"svg\">((props, ref) => (\n  <Icon ref={ref} verticalAlign=\"top\" marginStart=\"0.5rem\" {...props} />\n))\n\nTagRightIcon.displayName = \"TagRightIcon\"\n\nconst TagCloseIcon: React.FC<IconProps> = (props) => (\n  <Icon verticalAlign=\"inherit\" viewBox=\"0 0 512 512\" {...props}>\n    <path\n      fill=\"currentColor\"\n      d=\"M289.94 256l95-95A24 24 0 00351 127l-95 95-95-95a24 24 0 00-34 34l95 95-95 95a24 24 0 1034 34l95-95 95 95a24 24 0 0034-34z\"\n    />\n  </Icon>\n)\n\nTagCloseIcon.displayName = \"TagCloseIcon\"\n\nexport interface TagCloseButtonProps\n  extends Omit<HTMLChakraProps<\"button\">, \"disabled\"> {\n  /**\n   * @default false\n   */\n  isDisabled?: boolean\n}\n\n/**\n * TagCloseButton is used to close \"remove\" the tag\n * @see Docs https://chakra-ui.com/tag\n */\nexport const TagCloseButton = forwardRef<TagCloseButtonProps, \"button\">(\n  (props, ref) => {\n    const { isDisabled, children, ...rest } = props\n\n    const styles = useTagStyles()\n\n    const btnStyles: SystemStyleObject = {\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      outline: \"0\",\n      ...styles.closeButton,\n    }\n\n    return (\n      <chakra.button\n        ref={ref}\n        aria-label=\"close\"\n        {...rest}\n        type=\"button\"\n        disabled={isDisabled}\n        __css={btnStyles}\n      >\n        {children || <TagCloseIcon />}\n      </chakra.button>\n    )\n  },\n)\n\nTagCloseButton.displayName = \"TagCloseButton\"\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}