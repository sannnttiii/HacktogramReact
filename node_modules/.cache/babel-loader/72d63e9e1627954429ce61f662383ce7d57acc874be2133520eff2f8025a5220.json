{"ast":null,"code":"'use client';\n\nimport { useTabsStyles } from \"./chunk-GTRZJDIL.mjs\";\nimport { useTab } from \"./chunk-NXSBASJ3.mjs\";\n\n// src/tab.tsx\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { chakra, forwardRef } from \"@chakra-ui/system\";\nimport { jsx } from \"react/jsx-runtime\";\nvar Tab = forwardRef(function Tab2(props, ref) {\n  const styles = useTabsStyles();\n  const tabProps = useTab({\n    ...props,\n    ref\n  });\n  const tabStyles = {\n    outline: \"0\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    ...styles.tab\n  };\n  return /* @__PURE__ */jsx(chakra.button, {\n    ...tabProps,\n    className: cx(\"chakra-tabs__tab\", props.className),\n    __css: tabStyles\n  });\n});\nTab.displayName = \"Tab\";\nexport { Tab };","map":{"version":3,"mappings":";;;;;;AAAA,SAASA,UAAU;AACnB,SAGEC,QACAC,kBACK;AAwBH;AAbG,IAAMC,MAAMD,WAA+B,SAASC,KAAIC,OAAOC,KAAK;EACzE,MAAMC,SAASC,eAAc;EAC7B,MAAMC,WAAWC,OAAO;IAAE,GAAGL;IAAOC;EAAI,CAAC;EAEzC,MAAMK,YAA+B;IACnCC,SAAS;IACTC,SAAS;IACTC,YAAY;IACZC,gBAAgB;IAChB,GAAGR,OAAOS;EACZ;EAEA,OACE,mBAACd,OAAOe,QAAP;IACE,GAAGR;IACJS,WAAWjB,GAAG,oBAAoBI,MAAMa,SAAS;IACjDC,OAAOR;EAAA,EACT;AAEJ,CAAC;AAEDP,IAAIgB,cAAc","names":["cx","chakra","forwardRef","Tab","props","ref","styles","useTabsStyles","tabProps","useTab","tabStyles","outline","display","alignItems","justifyContent","tab","button","className","__css","displayName"],"sources":["/Users/santitri1205/Documents/SkillAcademy/BATCH2/react-final-project-hacktogram-v1/node_modules/@chakra-ui/tabs/src/tab.tsx"],"sourcesContent":["import { cx } from \"@chakra-ui/shared-utils\"\nimport {\n  HTMLChakraProps,\n  SystemStyleObject,\n  chakra,\n  forwardRef,\n} from \"@chakra-ui/system\"\n\nimport { useTabsStyles } from \"./tabs\"\nimport { UseTabOptions, useTab } from \"./use-tabs\"\n\nexport interface TabProps extends UseTabOptions, HTMLChakraProps<\"button\"> {}\n\n/**\n * Tab button used to activate a specific tab panel. It renders a `button`,\n * and is responsible for automatic and manual selection modes.\n */\nexport const Tab = forwardRef<TabProps, \"button\">(function Tab(props, ref) {\n  const styles = useTabsStyles()\n  const tabProps = useTab({ ...props, ref })\n\n  const tabStyles: SystemStyleObject = {\n    outline: \"0\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    ...styles.tab,\n  }\n\n  return (\n    <chakra.button\n      {...tabProps}\n      className={cx(\"chakra-tabs__tab\", props.className)}\n      __css={tabStyles}\n    />\n  )\n})\n\nTab.displayName = \"Tab\"\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}