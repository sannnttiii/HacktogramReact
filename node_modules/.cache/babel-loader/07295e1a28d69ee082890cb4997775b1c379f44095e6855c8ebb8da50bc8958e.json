{"ast":null,"code":"'use client';\n\nimport { useSafeLayoutEffect } from \"./chunk-724WJZW4.mjs\";\n\n// src/use-dimensions.ts\nimport { getBox } from \"@chakra-ui/utils\";\nimport { useRef, useState } from \"react\";\nfunction useDimensions(ref, observe) {\n  const [dimensions, setDimensions] = useState(null);\n  const rafId = useRef();\n  useSafeLayoutEffect(() => {\n    function measure() {\n      const node = ref.current;\n      if (!node) return;\n      rafId.current = requestAnimationFrame(() => {\n        const boxModel = getBox(node);\n        setDimensions(boxModel);\n      });\n    }\n    measure();\n    if (observe) {\n      window.addEventListener(\"resize\", measure);\n      window.addEventListener(\"scroll\", measure);\n    }\n    return () => {\n      if (observe) {\n        window.removeEventListener(\"resize\", measure);\n        window.removeEventListener(\"scroll\", measure);\n      }\n      if (rafId.current) {\n        cancelAnimationFrame(rafId.current);\n      }\n    };\n  }, [observe]);\n  return dimensions;\n}\nexport { useDimensions };","map":{"version":3,"mappings":";;;;;AAAA,SAASA,cAAwB;AACjC,SAASC,QAAQC,gBAAgB;AAe1B,SAASC,cACdC,KACAC,SACA;EACA,MAAM,CAACC,YAAYC,aAAa,IAAIL,SAA0B,IAAI;EAClE,MAAMM,QAAQP,QAAe;EAE7BQ,oBAAoB,MAAM;IACxB,SAASC,UAAU;MACjB,MAAMC,OAAOP,IAAIQ;MACjB,IAAI,CAACD,MAAM;MACXH,MAAMI,UAAUC,sBAAsB,MAAM;QAC1C,MAAMC,WAAWd,OAAOW,IAAI;QAC5BJ,cAAcO,QAAQ;MACxB,CAAC;IACH;IAEAJ,SAAQ;IAER,IAAIL,SAAS;MACXU,OAAOC,iBAAiB,UAAUN,OAAO;MACzCK,OAAOC,iBAAiB,UAAUN,OAAO;IAC3C;IAEA,OAAO,MAAM;MACX,IAAIL,SAAS;QACXU,OAAOE,oBAAoB,UAAUP,OAAO;QAC5CK,OAAOE,oBAAoB,UAAUP,OAAO;MAC9C;MAEA,IAAIF,MAAMI,SAAS;QACjBM,qBAAqBV,MAAMI,OAAO;MACpC;IACF;EACF,GAAG,CAACP,OAAO,CAAC;EAEZ,OAAOC;AACT","names":["getBox","useRef","useState","useDimensions","ref","observe","dimensions","setDimensions","rafId","useSafeLayoutEffect","measure","node","current","requestAnimationFrame","boxModel","window","addEventListener","removeEventListener","cancelAnimationFrame"],"sources":["/Users/santitri1205/Documents/SkillAcademy/BATCH2/react-final-project-hacktogram-v1/node_modules/@chakra-ui/hooks/src/use-dimensions.ts"],"sourcesContent":["import { getBox, BoxModel } from \"@chakra-ui/utils\"\nimport { useRef, useState } from \"react\"\nimport { useSafeLayoutEffect } from \"./use-safe-layout-effect\"\n\n/**\n * React hook to measure a component's dimensions\n *\n * @param ref ref of the component to measure\n * @param observe if `true`, resize and scroll observers will be turned on\n *\n * @deprecated use the `useSize` hook instead\n *\n * ```jsx\n * import { useSize } from \"@chakra-ui/react-use-size\"\n * ```\n */\nexport function useDimensions(\n  ref: React.RefObject<HTMLElement>,\n  observe?: boolean,\n) {\n  const [dimensions, setDimensions] = useState<BoxModel | null>(null)\n  const rafId = useRef<number>()\n\n  useSafeLayoutEffect(() => {\n    function measure() {\n      const node = ref.current\n      if (!node) return\n      rafId.current = requestAnimationFrame(() => {\n        const boxModel = getBox(node)\n        setDimensions(boxModel)\n      })\n    }\n\n    measure()\n\n    if (observe) {\n      window.addEventListener(\"resize\", measure)\n      window.addEventListener(\"scroll\", measure)\n    }\n\n    return () => {\n      if (observe) {\n        window.removeEventListener(\"resize\", measure)\n        window.removeEventListener(\"scroll\", measure)\n      }\n\n      if (rafId.current) {\n        cancelAnimationFrame(rafId.current)\n      }\n    }\n  }, [observe])\n\n  return dimensions\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}