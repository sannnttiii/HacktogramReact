{"ast":null,"code":"'use client';\n\n// src/divider.tsx\nimport { chakra, forwardRef, omitThemingProps, useStyleConfig } from \"@chakra-ui/system\";\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { jsx } from \"react/jsx-runtime\";\nvar Divider = forwardRef(function Divider2(props, ref) {\n  const {\n    borderLeftWidth,\n    borderBottomWidth,\n    borderTopWidth,\n    borderRightWidth,\n    borderWidth,\n    borderStyle,\n    borderColor,\n    ...styles\n  } = useStyleConfig(\"Divider\", props);\n  const {\n    className,\n    orientation = \"horizontal\",\n    __css,\n    ...rest\n  } = omitThemingProps(props);\n  const dividerStyles = {\n    vertical: {\n      borderLeftWidth: borderLeftWidth || borderRightWidth || borderWidth || \"1px\",\n      height: \"100%\"\n    },\n    horizontal: {\n      borderBottomWidth: borderBottomWidth || borderTopWidth || borderWidth || \"1px\",\n      width: \"100%\"\n    }\n  };\n  return /* @__PURE__ */jsx(chakra.hr, {\n    ref,\n    \"aria-orientation\": orientation,\n    ...rest,\n    __css: {\n      ...styles,\n      border: \"0\",\n      borderColor,\n      borderStyle,\n      ...dividerStyles[orientation],\n      ...__css\n    },\n    className: cx(\"chakra-divider\", className)\n  });\n});\nDivider.displayName = \"Divider\";\nexport { Divider };","map":{"version":3,"mappings":";;;AAAA,SACEA,QACAC,YACAC,kBAEAC,sBAEK;AACP,SAASC,UAAU;AA2Cf;AAnCG,IAAMC,UAAUJ,WAA+B,SAASI,SAC7DC,OACAC,KACA;EACA,MAAM;IACJC;IACAC;IACAC;IACAC;IACAC;IACAC;IACAC;IACA,GAAGC;EACL,IAAIZ,eAAe,WAAWG,KAAK;EACnC,MAAM;IACJU;IACAC,cAAc;IACdC;IACA,GAAGC;EACL,IAAIjB,iBAAiBI,KAAK;EAE1B,MAAMc,gBAAgB;IACpBC,UAAU;MACRb,iBACEA,mBAAmBG,oBAAoBC,eAAe;MACxDU,QAAQ;IACV;IACAC,YAAY;MACVd,mBACEA,qBAAqBC,kBAAkBE,eAAe;MACxDY,OAAO;IACT;EACF;EAEA,OACE,mBAACxB,OAAOyB,IAAP;IACClB;IACA,oBAAkBU;IACjB,GAAGE;IACJD,OAAO;MACL,GAAGH;MACHW,QAAQ;MAERZ;MACAD;MACA,GAAGO,cAAcH,WAAW;MAC5B,GAAGC;IACL;IACAF,WAAWZ,GAAG,kBAAkBY,SAAS;EAAA,EAC3C;AAEJ,CAAC;AAQDX,QAAQsB,cAAc","names":["chakra","forwardRef","omitThemingProps","useStyleConfig","cx","Divider","props","ref","borderLeftWidth","borderBottomWidth","borderTopWidth","borderRightWidth","borderWidth","borderStyle","borderColor","styles","className","orientation","__css","rest","dividerStyles","vertical","height","horizontal","width","hr","border","displayName"],"sources":["/Users/santitri1205/Documents/SkillAcademy/BATCH2/react-final-project-hacktogram-v1/node_modules/@chakra-ui/layout/src/divider.tsx"],"sourcesContent":["import {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  ThemingProps,\n  useStyleConfig,\n  HTMLChakraProps,\n} from \"@chakra-ui/system\"\nimport { cx } from \"@chakra-ui/shared-utils\"\n\n/**\n * Layout component used to visually separate content in a list or group.\n * It displays a thin horizontal or vertical line, and renders a `hr` tag.\n *\n * @see Docs https://chakra-ui.com/divider\n */\nexport const Divider = forwardRef<DividerProps, \"hr\">(function Divider(\n  props,\n  ref,\n) {\n  const {\n    borderLeftWidth,\n    borderBottomWidth,\n    borderTopWidth,\n    borderRightWidth,\n    borderWidth,\n    borderStyle,\n    borderColor,\n    ...styles\n  } = useStyleConfig(\"Divider\", props)\n  const {\n    className,\n    orientation = \"horizontal\",\n    __css,\n    ...rest\n  } = omitThemingProps(props)\n\n  const dividerStyles = {\n    vertical: {\n      borderLeftWidth:\n        borderLeftWidth || borderRightWidth || borderWidth || \"1px\",\n      height: \"100%\",\n    },\n    horizontal: {\n      borderBottomWidth:\n        borderBottomWidth || borderTopWidth || borderWidth || \"1px\",\n      width: \"100%\",\n    },\n  }\n\n  return (\n    <chakra.hr\n      ref={ref}\n      aria-orientation={orientation}\n      {...rest}\n      __css={{\n        ...styles,\n        border: \"0\",\n\n        borderColor,\n        borderStyle,\n        ...dividerStyles[orientation],\n        ...__css,\n      }}\n      className={cx(\"chakra-divider\", className)}\n    />\n  )\n})\n\nexport interface DividerProps\n  extends HTMLChakraProps<\"div\">,\n    ThemingProps<\"Divider\"> {\n  orientation?: \"horizontal\" | \"vertical\"\n}\n\nDivider.displayName = \"Divider\"\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}