{"ast":null,"code":"// src/components/slider.ts\nimport { sliderAnatomy as parts } from \"@chakra-ui/anatomy\";\nimport { createMultiStyleConfigHelpers, cssVar, defineStyle } from \"@chakra-ui/styled-system\";\nimport { orient } from \"@chakra-ui/theme-tools\";\nvar {\n  defineMultiStyleConfig,\n  definePartsStyle\n} = createMultiStyleConfigHelpers(parts.keys);\nvar $thumbSize = cssVar(\"slider-thumb-size\");\nvar $trackSize = cssVar(\"slider-track-size\");\nvar $bg = cssVar(\"slider-bg\");\nvar baseStyleContainer = defineStyle(props => {\n  const {\n    orientation\n  } = props;\n  return {\n    display: \"inline-block\",\n    position: \"relative\",\n    cursor: \"pointer\",\n    _disabled: {\n      opacity: 0.6,\n      cursor: \"default\",\n      pointerEvents: \"none\"\n    },\n    ...orient({\n      orientation,\n      vertical: {\n        h: \"100%\"\n      },\n      horizontal: {\n        w: \"100%\"\n      }\n    })\n  };\n});\nvar baseStyleTrack = defineStyle(props => {\n  const orientationStyles = orient({\n    orientation: props.orientation,\n    horizontal: {\n      h: $trackSize.reference\n    },\n    vertical: {\n      w: $trackSize.reference\n    }\n  });\n  return {\n    ...orientationStyles,\n    overflow: \"hidden\",\n    borderRadius: \"sm\",\n    [$bg.variable]: \"colors.gray.200\",\n    _dark: {\n      [$bg.variable]: \"colors.whiteAlpha.200\"\n    },\n    _disabled: {\n      [$bg.variable]: \"colors.gray.300\",\n      _dark: {\n        [$bg.variable]: \"colors.whiteAlpha.300\"\n      }\n    },\n    bg: $bg.reference\n  };\n});\nvar baseStyleThumb = defineStyle(props => {\n  const {\n    orientation\n  } = props;\n  const orientationStyle = orient({\n    orientation,\n    vertical: {\n      left: \"50%\",\n      transform: `translateX(-50%)`,\n      _active: {\n        transform: `translateX(-50%) scale(1.15)`\n      }\n    },\n    horizontal: {\n      top: \"50%\",\n      transform: `translateY(-50%)`,\n      _active: {\n        transform: `translateY(-50%) scale(1.15)`\n      }\n    }\n  });\n  return {\n    ...orientationStyle,\n    w: $thumbSize.reference,\n    h: $thumbSize.reference,\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    position: \"absolute\",\n    outline: 0,\n    zIndex: 1,\n    borderRadius: \"full\",\n    bg: \"white\",\n    boxShadow: \"base\",\n    border: \"1px solid\",\n    borderColor: \"transparent\",\n    transitionProperty: \"transform\",\n    transitionDuration: \"normal\",\n    _focusVisible: {\n      boxShadow: \"outline\"\n    },\n    _disabled: {\n      bg: \"gray.300\"\n    }\n  };\n});\nvar baseStyleFilledTrack = defineStyle(props => {\n  const {\n    colorScheme: c\n  } = props;\n  return {\n    width: \"inherit\",\n    height: \"inherit\",\n    [$bg.variable]: `colors.${c}.500`,\n    _dark: {\n      [$bg.variable]: `colors.${c}.200`\n    },\n    bg: $bg.reference\n  };\n});\nvar baseStyle = definePartsStyle(props => ({\n  container: baseStyleContainer(props),\n  track: baseStyleTrack(props),\n  thumb: baseStyleThumb(props),\n  filledTrack: baseStyleFilledTrack(props)\n}));\nvar sizeLg = definePartsStyle({\n  container: {\n    [$thumbSize.variable]: `sizes.4`,\n    [$trackSize.variable]: `sizes.1`\n  }\n});\nvar sizeMd = definePartsStyle({\n  container: {\n    [$thumbSize.variable]: `sizes.3.5`,\n    [$trackSize.variable]: `sizes.1`\n  }\n});\nvar sizeSm = definePartsStyle({\n  container: {\n    [$thumbSize.variable]: `sizes.2.5`,\n    [$trackSize.variable]: `sizes.0.5`\n  }\n});\nvar sizes = {\n  lg: sizeLg,\n  md: sizeMd,\n  sm: sizeSm\n};\nvar sliderTheme = defineMultiStyleConfig({\n  baseStyle,\n  sizes,\n  defaultProps: {\n    size: \"md\",\n    colorScheme: \"blue\"\n  }\n});\nexport { sliderTheme };","map":{"version":3,"mappings":"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","names":["sliderAnatomy","parts","createMultiStyleConfigHelpers","cssVar","defineStyle","orient","defineMultiStyleConfig","definePartsStyle","keys","$thumbSize","$trackSize","$bg","baseStyleContainer","props","orientation","display","position","cursor","_disabled","opacity","pointerEvents","vertical","h","horizontal","w","baseStyleTrack","orientationStyles","reference","overflow","borderRadius","variable","_dark","bg","baseStyleThumb","orientationStyle","left","transform","_active","top","alignItems","justifyContent","outline","zIndex","boxShadow","border","borderColor","transitionProperty","transitionDuration","_focusVisible","baseStyleFilledTrack","colorScheme","c","width","height","baseStyle","container","track","thumb","filledTrack","sizeLg","sizeMd","sizeSm","sizes","lg","md","sm","sliderTheme","defaultProps","size"],"sources":["/Users/santitri1205/Documents/SkillAcademy/BATCH2/react-final-project-hacktogram-v1/node_modules/@chakra-ui/theme/src/components/slider.ts"],"sourcesContent":["import { sliderAnatomy as parts } from \"@chakra-ui/anatomy\"\nimport {\n  createMultiStyleConfigHelpers,\n  cssVar,\n  defineStyle,\n} from \"@chakra-ui/styled-system\"\nimport { orient } from \"@chakra-ui/theme-tools\"\n\nconst { defineMultiStyleConfig, definePartsStyle } =\n  createMultiStyleConfigHelpers(parts.keys)\n\nconst $thumbSize = cssVar(\"slider-thumb-size\")\nconst $trackSize = cssVar(\"slider-track-size\")\nconst $bg = cssVar(\"slider-bg\")\n\nconst baseStyleContainer = defineStyle((props) => {\n  const { orientation } = props\n\n  return {\n    display: \"inline-block\",\n    position: \"relative\",\n    cursor: \"pointer\",\n    _disabled: {\n      opacity: 0.6,\n      cursor: \"default\",\n      pointerEvents: \"none\",\n    },\n    ...orient({\n      orientation,\n      vertical: { h: \"100%\" },\n      horizontal: { w: \"100%\" },\n    }),\n  }\n})\n\nconst baseStyleTrack = defineStyle((props) => {\n  const orientationStyles = orient({\n    orientation: props.orientation,\n    horizontal: { h: $trackSize.reference },\n    vertical: { w: $trackSize.reference },\n  })\n\n  return {\n    ...orientationStyles,\n    overflow: \"hidden\",\n    borderRadius: \"sm\",\n    [$bg.variable]: \"colors.gray.200\",\n    _dark: {\n      [$bg.variable]: \"colors.whiteAlpha.200\",\n    },\n    _disabled: {\n      [$bg.variable]: \"colors.gray.300\",\n      _dark: {\n        [$bg.variable]: \"colors.whiteAlpha.300\",\n      },\n    },\n    bg: $bg.reference,\n  }\n})\n\nconst baseStyleThumb = defineStyle((props) => {\n  const { orientation } = props\n  const orientationStyle = orient({\n    orientation,\n    vertical: {\n      left: \"50%\",\n      transform: `translateX(-50%)`,\n      _active: {\n        transform: `translateX(-50%) scale(1.15)`,\n      },\n    },\n    horizontal: {\n      top: \"50%\",\n      transform: `translateY(-50%)`,\n      _active: {\n        transform: `translateY(-50%) scale(1.15)`,\n      },\n    },\n  })\n\n  return {\n    ...orientationStyle,\n    w: $thumbSize.reference,\n    h: $thumbSize.reference,\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    position: \"absolute\",\n    outline: 0,\n    zIndex: 1,\n    borderRadius: \"full\",\n    bg: \"white\",\n    boxShadow: \"base\",\n    border: \"1px solid\",\n    borderColor: \"transparent\",\n    transitionProperty: \"transform\",\n    transitionDuration: \"normal\",\n    _focusVisible: {\n      boxShadow: \"outline\",\n    },\n    _disabled: {\n      bg: \"gray.300\",\n    },\n  }\n})\n\nconst baseStyleFilledTrack = defineStyle((props) => {\n  const { colorScheme: c } = props\n\n  return {\n    width: \"inherit\",\n    height: \"inherit\",\n    [$bg.variable]: `colors.${c}.500`,\n    _dark: {\n      [$bg.variable]: `colors.${c}.200`,\n    },\n    bg: $bg.reference,\n  }\n})\n\nconst baseStyle = definePartsStyle((props) => ({\n  container: baseStyleContainer(props),\n  track: baseStyleTrack(props),\n  thumb: baseStyleThumb(props),\n  filledTrack: baseStyleFilledTrack(props),\n}))\n\nconst sizeLg = definePartsStyle({\n  container: {\n    [$thumbSize.variable]: `sizes.4`,\n    [$trackSize.variable]: `sizes.1`,\n  },\n})\n\nconst sizeMd = definePartsStyle({\n  container: {\n    [$thumbSize.variable]: `sizes.3.5`,\n    [$trackSize.variable]: `sizes.1`,\n  },\n})\n\nconst sizeSm = definePartsStyle({\n  container: {\n    [$thumbSize.variable]: `sizes.2.5`,\n    [$trackSize.variable]: `sizes.0.5`,\n  },\n})\n\nconst sizes = {\n  lg: sizeLg,\n  md: sizeMd,\n  sm: sizeSm,\n}\n\nexport const sliderTheme = defineMultiStyleConfig({\n  baseStyle,\n  sizes,\n  defaultProps: {\n    size: \"md\",\n    colorScheme: \"blue\",\n  },\n})\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}