{"ast":null,"code":"'use client';\n\n// src/button-spinner.tsx\nimport { Spinner } from \"@chakra-ui/spinner\";\nimport { chakra } from \"@chakra-ui/system\";\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { useMemo } from \"react\";\nimport { jsx } from \"react/jsx-runtime\";\nfunction ButtonSpinner(props) {\n  const {\n    label,\n    placement,\n    spacing = \"0.5rem\",\n    children = /* @__PURE__ */jsx(Spinner, {\n      color: \"currentColor\",\n      width: \"1em\",\n      height: \"1em\"\n    }),\n    className,\n    __css,\n    ...rest\n  } = props;\n  const _className = cx(\"chakra-button__spinner\", className);\n  const marginProp = placement === \"start\" ? \"marginEnd\" : \"marginStart\";\n  const spinnerStyles = useMemo(() => ({\n    display: \"flex\",\n    alignItems: \"center\",\n    position: label ? \"relative\" : \"absolute\",\n    [marginProp]: label ? spacing : 0,\n    fontSize: \"1em\",\n    lineHeight: \"normal\",\n    ...__css\n  }), [__css, label, marginProp, spacing]);\n  return /* @__PURE__ */jsx(chakra.div, {\n    className: _className,\n    ...rest,\n    __css: spinnerStyles,\n    children\n  });\n}\nButtonSpinner.displayName = \"ButtonSpinner\";\nexport { ButtonSpinner };","map":{"version":3,"mappings":";;;AAAA,SAASA,eAAe;AACxB,SAASC,cAAkD;AAC3D,SAASC,UAAU;AACnB,SAASC,eAAe;AAYT;AALR,SAASC,cAAcC,OAA2B;EACvD,MAAM;IACJC;IACAC;IACAC,UAAU;IACVC,WAAW,mBAACT;MAAQU,OAAM;MAAeC,OAAM;MAAMC,QAAO;IAAA,CAAM;IAClEC;IACAC;IACA,GAAGC;EACL,IAAIV;EAEJ,MAAMW,aAAad,GAAG,0BAA0BW,SAAS;EAEzD,MAAMI,aAAaV,cAAc,UAAU,cAAc;EAEzD,MAAMW,gBAAmCf,QACvC,OAAO;IACLgB,SAAS;IACTC,YAAY;IACZC,UAAUf,QAAQ,aAAa;IAC/B,CAACW,UAAU,GAAGX,QAAQE,UAAU;IAChCc,UAAU;IACVC,YAAY;IACZ,GAAGT;EACL,IACA,CAACA,OAAOR,OAAOW,YAAYT,OAAO,EACpC;EAEA,OACE,mBAACP,OAAOuB,KAAP;IAAWX,WAAWG;IAAa,GAAGD;IAAMD,OAAOI;IACjDT;EAAA,CACH;AAEJ;AACAL,cAAcqB,cAAc","names":["Spinner","chakra","cx","useMemo","ButtonSpinner","props","label","placement","spacing","children","color","width","height","className","__css","rest","_className","marginProp","spinnerStyles","display","alignItems","position","fontSize","lineHeight","div","displayName"],"sources":["/Users/santitri1205/Documents/SkillAcademy/BATCH2/react-final-project-hacktogram-v1/node_modules/@chakra-ui/button/src/button-spinner.tsx"],"sourcesContent":["import { Spinner } from \"@chakra-ui/spinner\"\nimport { chakra, HTMLChakraProps, SystemStyleObject } from \"@chakra-ui/system\"\nimport { cx } from \"@chakra-ui/shared-utils\"\nimport { useMemo } from \"react\"\nimport { ButtonSpinnerOptions } from \"./button-types\"\n\ninterface ButtonSpinnerProps\n  extends HTMLChakraProps<\"div\">,\n    ButtonSpinnerOptions {}\n\nexport function ButtonSpinner(props: ButtonSpinnerProps) {\n  const {\n    label,\n    placement,\n    spacing = \"0.5rem\",\n    children = <Spinner color=\"currentColor\" width=\"1em\" height=\"1em\" />,\n    className,\n    __css,\n    ...rest\n  } = props\n\n  const _className = cx(\"chakra-button__spinner\", className)\n\n  const marginProp = placement === \"start\" ? \"marginEnd\" : \"marginStart\"\n\n  const spinnerStyles: SystemStyleObject = useMemo(\n    () => ({\n      display: \"flex\",\n      alignItems: \"center\",\n      position: label ? \"relative\" : \"absolute\",\n      [marginProp]: label ? spacing : 0,\n      fontSize: \"1em\",\n      lineHeight: \"normal\",\n      ...__css,\n    }),\n    [__css, label, marginProp, spacing],\n  )\n\n  return (\n    <chakra.div className={_className} {...rest} __css={spinnerStyles}>\n      {children}\n    </chakra.div>\n  )\n}\nButtonSpinner.displayName = \"ButtonSpinner\"\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}