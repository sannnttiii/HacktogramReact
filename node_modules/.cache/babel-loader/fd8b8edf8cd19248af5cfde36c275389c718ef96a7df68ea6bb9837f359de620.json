{"ast":null,"code":"'use client';\n\nimport { useSafeLayoutEffect } from \"./chunk-724WJZW4.mjs\";\n\n// src/use-callback-ref.ts\nimport { useCallback, useRef } from \"react\";\nfunction useCallbackRef(fn) {\n  let deps = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n  const ref = useRef(fn);\n  useSafeLayoutEffect(() => {\n    ref.current = fn;\n  });\n  return useCallback(function () {\n    var _a;\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    return (_a = ref.current) == null ? void 0 : _a.call(ref, ...args);\n  }, deps);\n}\nexport { useCallbackRef };","map":{"version":3,"mappings":";;;;;AAAA,SAASA,aAAaC,cAAc;AAU7B,SAASC,eACdC,IAEG;EAAA,IADHC,2EAA6B,EAAC;EAE9B,MAAMC,MAAMJ,OAAOE,EAAE;EAErBG,oBAAoB,MAAM;IACxBD,IAAIE,UAAUJ;EAChB,CAAC;EAGD,OAAOH,YAAa,YAAU;IArBhC;IAAA,kCAqB0BQ;MAAAA;IAAA;IAAS,iBAAID,YAAJ,6BAAc,GAAGC;EAAA,GAAaJ,IAAI;AACrE","names":["useCallback","useRef","useCallbackRef","fn","deps","ref","useSafeLayoutEffect","current","args"],"sources":["/Users/santitri1205/Documents/SkillAcademy/BATCH2/react-final-project-hacktogram-v1/node_modules/@chakra-ui/hooks/src/use-callback-ref.ts"],"sourcesContent":["import { useCallback, useRef } from \"react\"\nimport { useSafeLayoutEffect } from \"./use-safe-layout-effect\"\n\n/**\n * React hook to persist any value between renders,\n * but keeps it up-to-date if it changes.\n *\n * @param fn the function to persist\n * @param deps the function dependency list\n */\nexport function useCallbackRef<T extends (...args: any[]) => any>(\n  fn: T | undefined,\n  deps: React.DependencyList = [],\n): T {\n  const ref = useRef(fn)\n\n  useSafeLayoutEffect(() => {\n    ref.current = fn\n  })\n\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  return useCallback(((...args) => ref.current?.(...args)) as T, deps)\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}