{"ast":null,"code":"'use client';\n\nimport { useMenuStyles } from \"./chunk-UZJ3TPNQ.mjs\";\n\n// src/menu-icon.tsx\nimport { chakra } from \"@chakra-ui/system\";\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { Children, cloneElement, isValidElement } from \"react\";\nimport { jsx } from \"react/jsx-runtime\";\nvar MenuIcon = props => {\n  const {\n    className,\n    children,\n    ...rest\n  } = props;\n  const styles = useMenuStyles();\n  const child = Children.only(children);\n  const clone = isValidElement(child) ? cloneElement(child, {\n    focusable: \"false\",\n    \"aria-hidden\": true,\n    className: cx(\"chakra-menu__icon\", child.props.className)\n  }) : null;\n  const _className = cx(\"chakra-menu__icon-wrapper\", className);\n  return /* @__PURE__ */jsx(chakra.span, {\n    className: _className,\n    ...rest,\n    __css: styles.icon,\n    children: clone\n  });\n};\nMenuIcon.displayName = \"MenuIcon\";\nexport { MenuIcon };","map":{"version":3,"mappings":";;;;;AAAA,SAA0BA,cAAc;AACxC,SAASC,UAAU;AAEnB,SAASC,UAAUC,cAAcC,sBAAsB;AAqBnD;AAlBG,IAAMC,WAA+CC,SAAU;EACpE,MAAM;IAAEC;IAAWC;IAAU,GAAGC;EAAK,IAAIH;EAEzC,MAAMI,SAASC,eAAc;EAE7B,MAAMC,QAAQV,SAASW,KAAKL,QAAQ;EAEpC,MAAMM,QAAQV,eAAeQ,KAAK,IAC9BT,aAAkBS,OAAO;IACvBG,WAAW;IACX,eAAe;IACfR,WAAWN,GAAG,qBAAqBW,MAAMN,MAAMC,SAAS;EAC1D,CAAC,IACD;EAEJ,MAAMS,aAAaf,GAAG,6BAA6BM,SAAS;EAE5D,OACE,mBAACP,OAAOiB,MAAP;IAAYV,WAAWS;IAAa,GAAGP;IAAMS,OAAOR,OAAOS;IACzDX;EAAA,CACH;AAEJ;AAEAH,SAASe,cAAc","names":["chakra","cx","Children","cloneElement","isValidElement","MenuIcon","props","className","children","rest","styles","useMenuStyles","child","only","clone","focusable","_className","span","__css","icon","displayName"],"sources":["/Users/santitri1205/Documents/SkillAcademy/BATCH2/react-final-project-hacktogram-v1/node_modules/@chakra-ui/menu/src/menu-icon.tsx"],"sourcesContent":["import { HTMLChakraProps, chakra } from \"@chakra-ui/system\"\nimport { cx } from \"@chakra-ui/shared-utils\"\n\nimport { Children, cloneElement, isValidElement } from \"react\"\nimport { useMenuStyles } from \"./menu\"\n\nexport const MenuIcon: React.FC<HTMLChakraProps<\"span\">> = (props) => {\n  const { className, children, ...rest } = props\n\n  const styles = useMenuStyles()\n\n  const child = Children.only(children)\n\n  const clone = isValidElement(child)\n    ? cloneElement<any>(child, {\n        focusable: \"false\",\n        \"aria-hidden\": true,\n        className: cx(\"chakra-menu__icon\", child.props.className),\n      })\n    : null\n\n  const _className = cx(\"chakra-menu__icon-wrapper\", className)\n\n  return (\n    <chakra.span className={_className} {...rest} __css={styles.icon}>\n      {clone}\n    </chakra.span>\n  )\n}\n\nMenuIcon.displayName = \"MenuIcon\"\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}