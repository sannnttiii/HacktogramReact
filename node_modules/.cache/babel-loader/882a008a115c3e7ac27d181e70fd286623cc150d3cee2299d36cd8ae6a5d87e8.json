{"ast":null,"code":"'use client';\n\nimport { StyledMenuItem } from \"./chunk-M565QO7N.mjs\";\nimport { MenuIcon } from \"./chunk-HB6KBUMZ.mjs\";\nimport { useMenuOption } from \"./chunk-SANI5SUM.mjs\";\n\n// src/menu-item-option.tsx\nimport { forwardRef } from \"@chakra-ui/system\";\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { jsx, jsxs } from \"react/jsx-runtime\";\nvar CheckIcon = props => /* @__PURE__ */jsx(\"svg\", {\n  viewBox: \"0 0 14 14\",\n  width: \"1em\",\n  height: \"1em\",\n  ...props,\n  children: /* @__PURE__ */jsx(\"polygon\", {\n    fill: \"currentColor\",\n    points: \"5.5 11.9993304 14 3.49933039 12.5 2 5.5 8.99933039 1.5 4.9968652 0 6.49933039\"\n  })\n});\nvar MenuItemOption = forwardRef((props, ref) => {\n  const {\n    icon,\n    iconSpacing = \"0.75rem\",\n    ...rest\n  } = props;\n  const optionProps = useMenuOption(rest, ref);\n  return /* @__PURE__ */jsxs(StyledMenuItem, {\n    ...optionProps,\n    className: cx(\"chakra-menu__menuitem-option\", rest.className),\n    children: [icon !== null && /* @__PURE__ */jsx(MenuIcon, {\n      fontSize: \"0.8em\",\n      marginEnd: iconSpacing,\n      opacity: props.isChecked ? 1 : 0,\n      children: icon || /* @__PURE__ */jsx(CheckIcon, {})\n    }), /* @__PURE__ */jsx(\"span\", {\n      style: {\n        flex: 1\n      },\n      children: optionProps.children\n    })]\n  });\n});\nMenuItemOption.id = \"MenuItemOption\";\nMenuItemOption.displayName = \"MenuItemOption\";\nexport { MenuItemOption };","map":{"version":3,"mappings":";;;;;;;AACA,SAASA,kBAAwC;AAMjD,SAASC,UAAU;AAIf,cA4BEC,YA5BF;AAFJ,IAAMC,YAAuCC,SAC3C,mBAAC;EAAIC,SAAQ;EAAYC,OAAM;EAAMC,QAAO;EAAO,GAAGH;EACpDI,6BAAC;IACCC,MAAK;IACLC,QAAO;EAAA;AACT,CACF;AAgBK,IAAMC,iBAAiBX,WAC5B,CAACI,OAAOQ,QAAQ;EAEd,MAAM;IAAEC;IAAMC,cAAc;IAAW,GAAGC;EAAK,IAAIX;EAEnD,MAAMY,cAAcC,cAAcF,MAAMH,GAAG;EAE3C,OACE,oBAACM;IACE,GAAGF;IACJG,WAAWlB,GAAG,gCAAgCc,KAAKI,SAAS;IAE3DX,oBAAS,QACR,mBAACY;MACCC,UAAS;MACTC,WAAWR;MACXS,SAASnB,MAAMoB,YAAY,IAAI;MAE9BhB,kBAAQ,mBAACL,aAAU;IAAA,EACtB,EAEF,mBAAC;MAAKsB,OAAO;QAAEC,MAAM;MAAE;MAAIlB,sBAAYA;IAAA,CAAS;EAAA,EAClD;AAEJ,EACF;AAEAG,eAAegB,KAAK;AAEpBhB,eAAeiB,cAAc","names":["forwardRef","cx","jsxs","CheckIcon","props","viewBox","width","height","children","fill","points","MenuItemOption","ref","icon","iconSpacing","rest","optionProps","useMenuOption","StyledMenuItem","className","MenuIcon","fontSize","marginEnd","opacity","isChecked","style","flex","id","displayName"],"sources":["/Users/santitri1205/Documents/SkillAcademy/BATCH2/react-final-project-hacktogram-v1/node_modules/@chakra-ui/menu/src/menu-item-option.tsx"],"sourcesContent":["import { HTMLAttributes, ReactElement } from \"react\"\nimport { forwardRef, PropsOf, SystemProps } from \"@chakra-ui/system\"\n\nimport { MenuItemProps } from \"./menu-item\"\nimport { useMenuOption, UseMenuOptionOptions } from \"./use-menu\"\nimport { StyledMenuItem } from \"./styled-menu-item\"\nimport { MenuIcon } from \"./menu-icon\"\nimport { cx } from \"@chakra-ui/shared-utils\"\n\nconst CheckIcon: React.FC<PropsOf<\"svg\">> = (props) => (\n  <svg viewBox=\"0 0 14 14\" width=\"1em\" height=\"1em\" {...props}>\n    <polygon\n      fill=\"currentColor\"\n      points=\"5.5 11.9993304 14 3.49933039 12.5 2 5.5 8.99933039 1.5 4.9968652 0 6.49933039\"\n    />\n  </svg>\n)\n\nexport interface MenuItemOptionProps\n  extends UseMenuOptionOptions,\n    Omit<MenuItemProps, keyof UseMenuOptionOptions | \"icon\"> {\n  /**\n   * @type React.ReactElement\n   */\n  icon?: ReactElement | null\n  /**\n   * @type SystemProps[\"mr\"]\n   */\n  iconSpacing?: SystemProps[\"mr\"]\n}\n\nexport const MenuItemOption = forwardRef<MenuItemOptionProps, \"button\">(\n  (props, ref) => {\n    // menu option item should always be `type=button`, so we omit `type`\n    const { icon, iconSpacing = \"0.75rem\", ...rest } = props\n\n    const optionProps = useMenuOption(rest, ref) as HTMLAttributes<HTMLElement>\n\n    return (\n      <StyledMenuItem\n        {...optionProps}\n        className={cx(\"chakra-menu__menuitem-option\", rest.className)}\n      >\n        {icon !== null && (\n          <MenuIcon\n            fontSize=\"0.8em\"\n            marginEnd={iconSpacing}\n            opacity={props.isChecked ? 1 : 0}\n          >\n            {icon || <CheckIcon />}\n          </MenuIcon>\n        )}\n        <span style={{ flex: 1 }}>{optionProps.children}</span>\n      </StyledMenuItem>\n    )\n  },\n)\n\nMenuItemOption.id = \"MenuItemOption\"\n\nMenuItemOption.displayName = \"MenuItemOption\"\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}