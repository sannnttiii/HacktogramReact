{"ast":null,"code":"// src/components/alert.ts\nimport { alertAnatomy as parts } from \"@chakra-ui/anatomy\";\nimport { createMultiStyleConfigHelpers, cssVar } from \"@chakra-ui/styled-system\";\nimport { transparentize } from \"@chakra-ui/theme-tools\";\nvar {\n  definePartsStyle,\n  defineMultiStyleConfig\n} = createMultiStyleConfigHelpers(parts.keys);\nvar $fg = cssVar(\"alert-fg\");\nvar $bg = cssVar(\"alert-bg\");\nvar baseStyle = definePartsStyle({\n  container: {\n    bg: $bg.reference,\n    px: \"4\",\n    py: \"3\"\n  },\n  title: {\n    fontWeight: \"bold\",\n    lineHeight: \"6\",\n    marginEnd: \"2\"\n  },\n  description: {\n    lineHeight: \"6\"\n  },\n  icon: {\n    color: $fg.reference,\n    flexShrink: 0,\n    marginEnd: \"3\",\n    w: \"5\",\n    h: \"6\"\n  },\n  spinner: {\n    color: $fg.reference,\n    flexShrink: 0,\n    marginEnd: \"3\",\n    w: \"5\",\n    h: \"5\"\n  }\n});\nfunction getBg(props) {\n  const {\n    theme,\n    colorScheme: c\n  } = props;\n  const darkBg = transparentize(`${c}.200`, 0.16)(theme);\n  return {\n    light: `colors.${c}.100`,\n    dark: darkBg\n  };\n}\nvar variantSubtle = definePartsStyle(props => {\n  const {\n    colorScheme: c\n  } = props;\n  const bg = getBg(props);\n  return {\n    container: {\n      [$fg.variable]: `colors.${c}.600`,\n      [$bg.variable]: bg.light,\n      _dark: {\n        [$fg.variable]: `colors.${c}.200`,\n        [$bg.variable]: bg.dark\n      }\n    }\n  };\n});\nvar variantLeftAccent = definePartsStyle(props => {\n  const {\n    colorScheme: c\n  } = props;\n  const bg = getBg(props);\n  return {\n    container: {\n      [$fg.variable]: `colors.${c}.600`,\n      [$bg.variable]: bg.light,\n      _dark: {\n        [$fg.variable]: `colors.${c}.200`,\n        [$bg.variable]: bg.dark\n      },\n      paddingStart: \"3\",\n      borderStartWidth: \"4px\",\n      borderStartColor: $fg.reference\n    }\n  };\n});\nvar variantTopAccent = definePartsStyle(props => {\n  const {\n    colorScheme: c\n  } = props;\n  const bg = getBg(props);\n  return {\n    container: {\n      [$fg.variable]: `colors.${c}.600`,\n      [$bg.variable]: bg.light,\n      _dark: {\n        [$fg.variable]: `colors.${c}.200`,\n        [$bg.variable]: bg.dark\n      },\n      pt: \"2\",\n      borderTopWidth: \"4px\",\n      borderTopColor: $fg.reference\n    }\n  };\n});\nvar variantSolid = definePartsStyle(props => {\n  const {\n    colorScheme: c\n  } = props;\n  return {\n    container: {\n      [$fg.variable]: `colors.white`,\n      [$bg.variable]: `colors.${c}.600`,\n      _dark: {\n        [$fg.variable]: `colors.gray.900`,\n        [$bg.variable]: `colors.${c}.200`\n      },\n      color: $fg.reference\n    }\n  };\n});\nvar variants = {\n  subtle: variantSubtle,\n  \"left-accent\": variantLeftAccent,\n  \"top-accent\": variantTopAccent,\n  solid: variantSolid\n};\nvar alertTheme = defineMultiStyleConfig({\n  baseStyle,\n  variants,\n  defaultProps: {\n    variant: \"subtle\",\n    colorScheme: \"blue\"\n  }\n});\nexport { alertTheme };","map":{"version":3,"mappings":"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","names":["alertAnatomy","parts","createMultiStyleConfigHelpers","cssVar","transparentize","definePartsStyle","defineMultiStyleConfig","keys","$fg","$bg","baseStyle","container","bg","reference","px","py","title","fontWeight","lineHeight","marginEnd","description","icon","color","flexShrink","w","h","spinner","getBg","props","theme","colorScheme","c","darkBg","light","dark","variantSubtle","variable","_dark","variantLeftAccent","paddingStart","borderStartWidth","borderStartColor","variantTopAccent","pt","borderTopWidth","borderTopColor","variantSolid","variants","subtle","solid","alertTheme","defaultProps","variant"],"sources":["/Users/santitri1205/Documents/SkillAcademy/BATCH2/react-final-project-hacktogram-v1/node_modules/@chakra-ui/theme/src/components/alert.ts"],"sourcesContent":["import { alertAnatomy as parts } from \"@chakra-ui/anatomy\"\nimport {\n  createMultiStyleConfigHelpers,\n  cssVar,\n  StyleFunctionProps,\n} from \"@chakra-ui/styled-system\"\nimport { transparentize } from \"@chakra-ui/theme-tools\"\n\nconst { definePartsStyle, defineMultiStyleConfig } =\n  createMultiStyleConfigHelpers(parts.keys)\n\nconst $fg = cssVar(\"alert-fg\")\nconst $bg = cssVar(\"alert-bg\")\n\nconst baseStyle = definePartsStyle({\n  container: {\n    bg: $bg.reference,\n    px: \"4\",\n    py: \"3\",\n  },\n  title: {\n    fontWeight: \"bold\",\n    lineHeight: \"6\",\n    marginEnd: \"2\",\n  },\n  description: {\n    lineHeight: \"6\",\n  },\n  icon: {\n    color: $fg.reference,\n    flexShrink: 0,\n    marginEnd: \"3\",\n    w: \"5\",\n    h: \"6\",\n  },\n  spinner: {\n    color: $fg.reference,\n    flexShrink: 0,\n    marginEnd: \"3\",\n    w: \"5\",\n    h: \"5\",\n  },\n})\n\nfunction getBg(props: StyleFunctionProps) {\n  const { theme, colorScheme: c } = props\n  const darkBg = transparentize(`${c}.200`, 0.16)(theme)\n  return {\n    light: `colors.${c}.100`,\n    dark: darkBg,\n  }\n}\n\nconst variantSubtle = definePartsStyle((props) => {\n  const { colorScheme: c } = props\n  const bg = getBg(props)\n  return {\n    container: {\n      [$fg.variable]: `colors.${c}.600`,\n      [$bg.variable]: bg.light,\n      _dark: {\n        [$fg.variable]: `colors.${c}.200`,\n        [$bg.variable]: bg.dark,\n      },\n    },\n  }\n})\n\nconst variantLeftAccent = definePartsStyle((props) => {\n  const { colorScheme: c } = props\n  const bg = getBg(props)\n  return {\n    container: {\n      [$fg.variable]: `colors.${c}.600`,\n      [$bg.variable]: bg.light,\n      _dark: {\n        [$fg.variable]: `colors.${c}.200`,\n        [$bg.variable]: bg.dark,\n      },\n      paddingStart: \"3\",\n      borderStartWidth: \"4px\",\n      borderStartColor: $fg.reference,\n    },\n  }\n})\n\nconst variantTopAccent = definePartsStyle((props) => {\n  const { colorScheme: c } = props\n  const bg = getBg(props)\n  return {\n    container: {\n      [$fg.variable]: `colors.${c}.600`,\n      [$bg.variable]: bg.light,\n      _dark: {\n        [$fg.variable]: `colors.${c}.200`,\n        [$bg.variable]: bg.dark,\n      },\n      pt: \"2\",\n      borderTopWidth: \"4px\",\n      borderTopColor: $fg.reference,\n    },\n  }\n})\n\nconst variantSolid = definePartsStyle((props) => {\n  const { colorScheme: c } = props\n  return {\n    container: {\n      [$fg.variable]: `colors.white`,\n      [$bg.variable]: `colors.${c}.600`,\n      _dark: {\n        [$fg.variable]: `colors.gray.900`,\n        [$bg.variable]: `colors.${c}.200`,\n      },\n      color: $fg.reference,\n    },\n  }\n})\n\nconst variants = {\n  subtle: variantSubtle,\n  \"left-accent\": variantLeftAccent,\n  \"top-accent\": variantTopAccent,\n  solid: variantSolid,\n}\n\nexport const alertTheme = defineMultiStyleConfig({\n  baseStyle,\n  variants,\n  defaultProps: {\n    variant: \"subtle\",\n    colorScheme: \"blue\",\n  },\n})\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}