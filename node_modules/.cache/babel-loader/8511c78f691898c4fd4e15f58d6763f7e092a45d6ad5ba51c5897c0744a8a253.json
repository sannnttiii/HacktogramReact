{"ast":null,"code":"'use client';\n\n// src/use-theme.ts\nimport { ThemeContext } from \"@emotion/react\";\nimport { useContext } from \"react\";\nfunction useTheme() {\n  const theme = useContext(ThemeContext);\n  if (!theme) {\n    throw Error(\"useTheme: `theme` is undefined. Seems you forgot to wrap your app in `<ChakraProvider />` or `<ThemeProvider />`\");\n  }\n  return theme;\n}\nexport { useTheme };","map":{"version":3,"mappings":";;;AAEA,SAASA,oBAAoB;AAC7B,SAASC,kBAAkB;AAOpB,SAASC,WAAoC;EAClD,MAAMC,QAAQF,WACZD,aACF;EACA,IAAI,CAACG,OAAO;IACV,MAAMC,MACJ,mHACF;EACF;EAEA,OAAOD;AACT","names":["ThemeContext","useContext","useTheme","theme","Error"],"sources":["/Users/santitri1205/Documents/SkillAcademy/BATCH2/react-final-project-hacktogram-v1/node_modules/@chakra-ui/system/src/use-theme.ts"],"sourcesContent":["import { WithCSSVar } from \"@chakra-ui/styled-system\"\nimport { Dict } from \"@chakra-ui/utils\"\nimport { ThemeContext } from \"@emotion/react\"\nimport { useContext } from \"react\"\n\n/**\n * `useTheme` is a custom hook used to get the theme object from context.\n *\n * @see Docs https://chakra-ui.com/docs/hooks/use-theme\n */\nexport function useTheme<T extends object = Dict>() {\n  const theme = useContext(\n    ThemeContext as unknown as React.Context<T | undefined>,\n  )\n  if (!theme) {\n    throw Error(\n      \"useTheme: `theme` is undefined. Seems you forgot to wrap your app in `<ChakraProvider />` or `<ThemeProvider />`\",\n    )\n  }\n\n  return theme as WithCSSVar<T>\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}