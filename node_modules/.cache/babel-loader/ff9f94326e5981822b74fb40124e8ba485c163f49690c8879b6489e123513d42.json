{"ast":null,"code":"'use client';\n\nimport { useTabsStyles } from \"./chunk-GTRZJDIL.mjs\";\nimport { useTabPanels } from \"./chunk-NXSBASJ3.mjs\";\n\n// src/tab-panels.tsx\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { chakra, forwardRef } from \"@chakra-ui/system\";\nimport { jsx } from \"react/jsx-runtime\";\nvar TabPanels = forwardRef(function TabPanels2(props, ref) {\n  const panelsProps = useTabPanels(props);\n  const styles = useTabsStyles();\n  return /* @__PURE__ */jsx(chakra.div, {\n    ...panelsProps,\n    width: \"100%\",\n    ref,\n    className: cx(\"chakra-tabs__tab-panels\", props.className),\n    __css: styles.tabpanels\n  });\n});\nTabPanels.displayName = \"TabPanels\";\nexport { TabPanels };","map":{"version":3,"mappings":";;;;;;AAAA,SAASA,UAAU;AACnB,SAA0BC,QAAQC,kBAAkB;AAuBhD;AARG,IAAMC,YAAYD,WAAkC,SAASC,WAClEC,OACAC,KACA;EACA,MAAMC,cAAcC,aAAaH,KAAK;EACtC,MAAMI,SAASC,eAAc;EAE7B,OACE,mBAACR,OAAOS,KAAP;IACE,GAAGJ;IACJK,OAAM;IACNN;IACAO,WAAWZ,GAAG,2BAA2BI,MAAMQ,SAAS;IACxDC,OAAOL,OAAOM;EAAA,EAChB;AAEJ,CAAC;AAEDX,UAAUY,cAAc","names":["cx","chakra","forwardRef","TabPanels","props","ref","panelsProps","useTabPanels","styles","useTabsStyles","div","width","className","__css","tabpanels","displayName"],"sources":["/Users/santitri1205/Documents/SkillAcademy/BATCH2/react-final-project-hacktogram-v1/node_modules/@chakra-ui/tabs/src/tab-panels.tsx"],"sourcesContent":["import { cx } from \"@chakra-ui/shared-utils\"\nimport { HTMLChakraProps, chakra, forwardRef } from \"@chakra-ui/system\"\n\nimport { useTabsStyles } from \"./tabs\"\nimport { useTabPanels } from \"./use-tabs\"\n\nexport interface TabPanelsProps extends HTMLChakraProps<\"div\"> {}\n\n/**\n * TabPanel\n *\n * Used to manage the rendering of multiple tab panels. It uses\n * `cloneElement` to hide/show tab panels.\n *\n * It renders a `div` by default.\n */\nexport const TabPanels = forwardRef<TabPanelsProps, \"div\">(function TabPanels(\n  props,\n  ref,\n) {\n  const panelsProps = useTabPanels(props)\n  const styles = useTabsStyles()\n\n  return (\n    <chakra.div\n      {...panelsProps}\n      width=\"100%\"\n      ref={ref}\n      className={cx(\"chakra-tabs__tab-panels\", props.className)}\n      __css={styles.tabpanels}\n    />\n  )\n})\n\nTabPanels.displayName = \"TabPanels\"\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}