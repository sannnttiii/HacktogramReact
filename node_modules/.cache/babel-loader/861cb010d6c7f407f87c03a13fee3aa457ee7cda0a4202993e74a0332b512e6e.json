{"ast":null,"code":"'use client';\n\n// src/chakra-provider.tsx\nimport { ChakraProvider as BaseChakraProvider } from \"@chakra-ui/provider\";\nimport { theme as defaultTheme, baseTheme } from \"@chakra-ui/theme\";\nimport { ToastProvider, ToastOptionProvider } from \"@chakra-ui/toast\";\nimport { jsx, jsxs } from \"react/jsx-runtime\";\nvar createChakraProvider = providerTheme => {\n  return function ChakraProvider2(_ref) {\n    let {\n      children,\n      theme = providerTheme,\n      toastOptions,\n      ...restProps\n    } = _ref;\n    return /* @__PURE__ */jsxs(BaseChakraProvider, {\n      theme,\n      ...restProps,\n      children: [/* @__PURE__ */jsx(ToastOptionProvider, {\n        value: toastOptions == null ? void 0 : toastOptions.defaultOptions,\n        children\n      }), /* @__PURE__ */jsx(ToastProvider, {\n        ...toastOptions\n      })]\n    });\n  };\n};\nvar ChakraProvider = createChakraProvider(defaultTheme);\nvar ChakraBaseProvider = createChakraProvider(baseTheme);\nexport { ChakraProvider, ChakraBaseProvider };","map":{"version":3,"mappings":";;;AAAA,SACEA,kBAAkBC,0BAEb;AACP,SAASC,SAASC,cAAcC,iBAAwB;AACxD,SACEC,eAEAC,2BACK;AAoBD,SACEC,KADFC;AAVN,IAAMC,uBACJC,iBACG;EACH,OAAO,SAASV,sBAKQ;IAAA,IALO;MAC7BW;MACAT,QAAQQ;MACRE;MACA,GAAGC;IACL;IACE,OACE,oBAACZ;MAAmBC;MAAe,GAAGW;MACpCF,8BAACL;QAAoBQ,OAAOF,6CAAcG;QACvCJ;MAAA,CACH,GACA,mBAACN;QAAe,GAAGO;MAAA,CAAc;IAAA,CACnC;EAEJ;AACF;AAEO,IAAMZ,iBAAiBS,qBAAqBN,YAAY;AACxD,IAAMa,qBAAqBP,qBAAqBL,SAAS","names":["ChakraProvider","BaseChakraProvider","theme","defaultTheme","baseTheme","ToastProvider","ToastOptionProvider","jsx","jsxs","createChakraProvider","providerTheme","children","toastOptions","restProps","value","defaultOptions","ChakraBaseProvider"],"sources":["/Users/santitri1205/Documents/SkillAcademy/BATCH2/react-final-project-hacktogram-v1/node_modules/@chakra-ui/react/src/chakra-provider.tsx"],"sourcesContent":["import {\n  ChakraProvider as BaseChakraProvider,\n  ChakraProviderProps as BaseChakraProviderProps,\n} from \"@chakra-ui/provider\"\nimport { theme as defaultTheme, baseTheme, Theme } from \"@chakra-ui/theme\"\nimport {\n  ToastProvider,\n  ToastProviderProps,\n  ToastOptionProvider,\n} from \"@chakra-ui/toast\"\nimport { Dict } from \"@chakra-ui/utils\"\n\nexport interface ChakraProviderProps extends BaseChakraProviderProps {\n  /**\n   * Provide defaults for `useToast()` usages for `ChakraProvider`s children\n   */\n  toastOptions?: ToastProviderProps\n}\n\nconst createChakraProvider = (\n  providerTheme: Theme | (Omit<Theme, \"components\"> & { components: Dict }),\n) => {\n  return function ChakraProvider({\n    children,\n    theme = providerTheme,\n    toastOptions,\n    ...restProps\n  }: ChakraProviderProps) {\n    return (\n      <BaseChakraProvider theme={theme} {...restProps}>\n        <ToastOptionProvider value={toastOptions?.defaultOptions}>\n          {children}\n        </ToastOptionProvider>\n        <ToastProvider {...toastOptions} />\n      </BaseChakraProvider>\n    )\n  }\n}\n\nexport const ChakraProvider = createChakraProvider(defaultTheme)\nexport const ChakraBaseProvider = createChakraProvider(baseTheme)\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}