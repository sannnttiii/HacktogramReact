{"ast":null,"code":"import { time } from '../../../frameloop/sync-time.mjs';\nimport { frame, cancelFrame, frameData } from '../../../frameloop/frame.mjs';\nconst frameloopDriver = update => {\n  const passTimestamp = _ref => {\n    let {\n      timestamp\n    } = _ref;\n    return update(timestamp);\n  };\n  return {\n    start: () => frame.update(passTimestamp, true),\n    stop: () => cancelFrame(passTimestamp),\n    /**\n     * If we're processing this frame we can use the\n     * framelocked timestamp to keep things in sync.\n     */\n    now: () => frameData.isProcessing ? frameData.timestamp : time.now()\n  };\n};\nexport { frameloopDriver };","map":{"version":3,"names":["time","frame","cancelFrame","frameData","frameloopDriver","update","passTimestamp","timestamp","start","stop","now","isProcessing"],"sources":["/Users/santitri1205/Documents/SkillAcademy/BATCH2/react-final-project-hacktogram-v1/node_modules/framer-motion/dist/es/animation/animators/drivers/driver-frameloop.mjs"],"sourcesContent":["import { time } from '../../../frameloop/sync-time.mjs';\nimport { frame, cancelFrame, frameData } from '../../../frameloop/frame.mjs';\n\nconst frameloopDriver = (update) => {\n    const passTimestamp = ({ timestamp }) => update(timestamp);\n    return {\n        start: () => frame.update(passTimestamp, true),\n        stop: () => cancelFrame(passTimestamp),\n        /**\n         * If we're processing this frame we can use the\n         * framelocked timestamp to keep things in sync.\n         */\n        now: () => (frameData.isProcessing ? frameData.timestamp : time.now()),\n    };\n};\n\nexport { frameloopDriver };\n"],"mappings":"AAAA,SAASA,IAAI,QAAQ,kCAAkC;AACvD,SAASC,KAAK,EAAEC,WAAW,EAAEC,SAAS,QAAQ,8BAA8B;AAE5E,MAAMC,eAAe,GAAIC,MAAM,IAAK;EAChC,MAAMC,aAAa,GAAG;IAAA,IAAC;MAAEC;IAAU,CAAC;IAAA,OAAKF,MAAM,CAACE,SAAS,CAAC;EAAA;EAC1D,OAAO;IACHC,KAAK,EAAE,MAAMP,KAAK,CAACI,MAAM,CAACC,aAAa,EAAE,IAAI,CAAC;IAC9CG,IAAI,EAAE,MAAMP,WAAW,CAACI,aAAa,CAAC;IACtC;AACR;AACA;AACA;IACQI,GAAG,EAAE,MAAOP,SAAS,CAACQ,YAAY,GAAGR,SAAS,CAACI,SAAS,GAAGP,IAAI,CAACU,GAAG;EACvE,CAAC;AACL,CAAC;AAED,SAASN,eAAe"},"metadata":{},"sourceType":"module","externalDependencies":[]}