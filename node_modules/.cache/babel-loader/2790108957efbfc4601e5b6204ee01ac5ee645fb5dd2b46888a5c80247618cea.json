{"ast":null,"code":"'use client';\n\nimport { useTabsStyles } from \"./chunk-GTRZJDIL.mjs\";\nimport { useTabIndicator } from \"./chunk-NXSBASJ3.mjs\";\n\n// src/tab-indicator.tsx\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { chakra, forwardRef } from \"@chakra-ui/system\";\nimport { jsx } from \"react/jsx-runtime\";\nvar TabIndicator = forwardRef(function TabIndicator2(props, ref) {\n  const indicatorStyle = useTabIndicator();\n  const style = {\n    ...props.style,\n    ...indicatorStyle\n  };\n  const styles = useTabsStyles();\n  return /* @__PURE__ */jsx(chakra.div, {\n    ref,\n    ...props,\n    className: cx(\"chakra-tabs__tab-indicator\", props.className),\n    style,\n    __css: styles.indicator\n  });\n});\nTabIndicator.displayName = \"TabIndicator\";\nexport { TabIndicator };","map":{"version":3,"mappings":";;;;;;AAAA,SAASA,UAAU;AACnB,SAA0BC,QAAQC,kBAAkB;AAwB9C;AAXC,IAAMC,eAAeD,WAC1B,SAASC,cAAaC,OAAOC,KAAK;EAChC,MAAMC,iBAAiBC,iBAAgB;EACvC,MAAMC,QAAQ;IACZ,GAAGJ,MAAMI;IACT,GAAGF;EACL;EAEA,MAAMG,SAASC,eAAc;EAE7B,OACE,mBAACT,OAAOU,KAAP;IACCN;IACC,GAAGD;IACJQ,WAAWZ,GAAG,8BAA8BI,MAAMQ,SAAS;IAC3DJ;IACAK,OAAOJ,OAAOK;EAAA,EAChB;AAEJ,EACF;AAEAX,aAAaY,cAAc","names":["cx","chakra","forwardRef","TabIndicator","props","ref","indicatorStyle","useTabIndicator","style","styles","useTabsStyles","div","className","__css","indicator","displayName"],"sources":["/Users/santitri1205/Documents/SkillAcademy/BATCH2/react-final-project-hacktogram-v1/node_modules/@chakra-ui/tabs/src/tab-indicator.tsx"],"sourcesContent":["import { cx } from \"@chakra-ui/shared-utils\"\nimport { HTMLChakraProps, chakra, forwardRef } from \"@chakra-ui/system\"\n\nimport { useTabsStyles } from \"./tabs\"\nimport { useTabIndicator } from \"./use-tabs\"\n\nexport interface TabIndicatorProps extends HTMLChakraProps<\"div\"> {}\n\n/**\n * TabIndicator\n *\n * Used to render an active tab indicator that animates between\n * selected tabs.\n */\nexport const TabIndicator = forwardRef<TabIndicatorProps, \"div\">(\n  function TabIndicator(props, ref) {\n    const indicatorStyle = useTabIndicator()\n    const style = {\n      ...props.style,\n      ...indicatorStyle,\n    }\n\n    const styles = useTabsStyles()\n\n    return (\n      <chakra.div\n        ref={ref}\n        {...props}\n        className={cx(\"chakra-tabs__tab-indicator\", props.className)}\n        style={style}\n        __css={styles.indicator}\n      />\n    )\n  },\n)\n\nTabIndicator.displayName = \"TabIndicator\"\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}