{"ast":null,"code":"'use client';\n\n// src/use-attr-observer.ts\nimport { useEffect } from \"react\";\nfunction useAttributeObserver(ref, attributes, fn, enabled) {\n  useEffect(() => {\n    var _a;\n    if (!ref.current || !enabled) return;\n    const win = (_a = ref.current.ownerDocument.defaultView) != null ? _a : window;\n    const attrs = Array.isArray(attributes) ? attributes : [attributes];\n    const obs = new win.MutationObserver(changes => {\n      for (const change of changes) {\n        if (change.type === \"attributes\" && change.attributeName && attrs.includes(change.attributeName)) {\n          fn(change);\n        }\n      }\n    });\n    obs.observe(ref.current, {\n      attributes: true,\n      attributeFilter: attrs\n    });\n    return () => obs.disconnect();\n  });\n}\nexport { useAttributeObserver };","map":{"version":3,"mappings":";;;AAAA,SAASA,iBAAiB;AAEnB,SAASC,qBACdC,KACAC,YACAC,IACAC,SACA;EACAL,UAAU,MAAM;IARlB;IASI,IAAI,CAACE,IAAII,WAAW,CAACD,SAAS;IAC9B,MAAME,OAAMC,SAAIF,QAAQG,cAAcC,gBAA1B,YAAyCC;IACrD,MAAMC,QAAQC,MAAMC,QAAQX,UAAU,IAAIA,aAAa,CAACA,UAAU;IAClE,MAAMY,MAAM,IAAIR,IAAIS,iBAAkBC,WAAY;MAChD,WAAWC,UAAUD,SAAS;QAC5B,IACEC,OAAOC,SAAS,gBAChBD,OAAOE,iBACPR,MAAMS,SAASH,OAAOE,aAAa,GACnC;UACAhB,GAAGc,MAAM;QACX;MACF;IACF,CAAC;IAEDH,IAAIO,QAAQpB,IAAII,SAAS;MAAEH,YAAY;MAAMoB,iBAAiBX;IAAM,CAAC;IAErE,OAAO,MAAMG,IAAIS,YAAW;EAC9B,CAAC;AACH","names":["useEffect","useAttributeObserver","ref","attributes","fn","enabled","current","win","_a","ownerDocument","defaultView","window","attrs","Array","isArray","obs","MutationObserver","changes","change","type","attributeName","includes","observe","attributeFilter","disconnect"],"sources":["/Users/santitri1205/Documents/SkillAcademy/BATCH2/react-final-project-hacktogram-v1/node_modules/@chakra-ui/number-input/src/use-attr-observer.ts"],"sourcesContent":["import { useEffect } from \"react\"\n\nexport function useAttributeObserver(\n  ref: React.RefObject<HTMLElement | null>,\n  attributes: string | string[],\n  fn: (v: MutationRecord) => void,\n  enabled: boolean,\n) {\n  useEffect(() => {\n    if (!ref.current || !enabled) return\n    const win = ref.current.ownerDocument.defaultView ?? window\n    const attrs = Array.isArray(attributes) ? attributes : [attributes]\n    const obs = new win.MutationObserver((changes) => {\n      for (const change of changes) {\n        if (\n          change.type === \"attributes\" &&\n          change.attributeName &&\n          attrs.includes(change.attributeName)\n        ) {\n          fn(change)\n        }\n      }\n    })\n\n    obs.observe(ref.current, { attributes: true, attributeFilter: attrs })\n\n    return () => obs.disconnect()\n  })\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}