{"ast":null,"code":"'use client';\n\nimport { useStepContext } from \"./chunk-5JULEEQD.mjs\";\n\n// src/step-status.tsx\nimport { runIfFn } from \"@chakra-ui/shared-utils\";\nimport { Fragment, jsx } from \"react/jsx-runtime\";\nfunction StepStatus(props) {\n  const {\n    complete,\n    incomplete,\n    active\n  } = props;\n  const context = useStepContext();\n  let render = null;\n  switch (context.status) {\n    case \"complete\":\n      render = runIfFn(complete, context);\n      break;\n    case \"incomplete\":\n      render = runIfFn(incomplete, context);\n      break;\n    case \"active\":\n      render = runIfFn(active, context);\n      break;\n  }\n  return render ? /* @__PURE__ */jsx(Fragment, {\n    children: render\n  }) : null;\n}\nexport { StepStatus };","map":{"version":3,"mappings":";;;;;AAAA,SAASA,eAAe;AA4BN;AAlBX,SAASC,WAAWC,OAAwB;EACjD,MAAM;IAAEC;IAAUC;IAAYC;EAAO,IAAIH;EACzC,MAAMI,UAAUC,gBAAe;EAE/B,IAAIC,SAAiC;EAErC,QAAQF,QAAQG;IACd,KAAK;MACHD,SAASR,QAAQG,UAAUG,OAAO;MAClC;IACF,KAAK;MACHE,SAASR,QAAQI,YAAYE,OAAO;MACpC;IACF,KAAK;MACHE,SAASR,QAAQK,QAAQC,OAAO;MAChC;EAAA;EAGJ,OAAOE,SAAS;IAAGE;EAAA,CAAO,IAAM;AAClC","names":["runIfFn","StepStatus","props","complete","incomplete","active","context","useStepContext","render","status","children"],"sources":["/Users/santitri1205/Documents/SkillAcademy/BATCH2/react-final-project-hacktogram-v1/node_modules/@chakra-ui/stepper/src/step-status.tsx"],"sourcesContent":["import { runIfFn } from \"@chakra-ui/shared-utils\"\nimport { StepContext, StepStatusType, useStepContext } from \"./step-context\"\n\ntype MaybeRenderProp =\n  | React.ReactNode\n  | ((props: StepContext) => React.ReactNode)\n\nexport interface StepStatusProps\n  extends Partial<Record<StepStatusType, MaybeRenderProp>> {}\n\nexport function StepStatus(props: StepStatusProps) {\n  const { complete, incomplete, active } = props\n  const context = useStepContext()\n\n  let render: React.ReactNode | null = null\n\n  switch (context.status) {\n    case \"complete\":\n      render = runIfFn(complete, context)\n      break\n    case \"incomplete\":\n      render = runIfFn(incomplete, context)\n      break\n    case \"active\":\n      render = runIfFn(active, context)\n      break\n  }\n\n  return render ? <>{render}</> : null\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}