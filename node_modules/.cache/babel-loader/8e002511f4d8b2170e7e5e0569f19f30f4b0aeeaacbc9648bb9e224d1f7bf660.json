{"ast":null,"code":"'use client';\n\nimport { TRANSITION_DEFAULTS, withDelay } from \"./chunk-6NHXDBFO.mjs\";\n\n// src/slide-fade.tsx\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { AnimatePresence, motion } from \"framer-motion\";\nimport { forwardRef } from \"react\";\nimport { jsx } from \"react/jsx-runtime\";\nvar variants = {\n  initial: _ref => {\n    let {\n      offsetX,\n      offsetY,\n      transition,\n      transitionEnd,\n      delay\n    } = _ref;\n    var _a;\n    return {\n      opacity: 0,\n      x: offsetX,\n      y: offsetY,\n      transition: (_a = transition == null ? void 0 : transition.exit) != null ? _a : withDelay.exit(TRANSITION_DEFAULTS.exit, delay),\n      transitionEnd: transitionEnd == null ? void 0 : transitionEnd.exit\n    };\n  },\n  enter: _ref2 => {\n    let {\n      transition,\n      transitionEnd,\n      delay\n    } = _ref2;\n    var _a;\n    return {\n      opacity: 1,\n      x: 0,\n      y: 0,\n      transition: (_a = transition == null ? void 0 : transition.enter) != null ? _a : withDelay.enter(TRANSITION_DEFAULTS.enter, delay),\n      transitionEnd: transitionEnd == null ? void 0 : transitionEnd.enter\n    };\n  },\n  exit: _ref3 => {\n    let {\n      offsetY,\n      offsetX,\n      transition,\n      transitionEnd,\n      reverse,\n      delay\n    } = _ref3;\n    var _a;\n    const offset = {\n      x: offsetX,\n      y: offsetY\n    };\n    return {\n      opacity: 0,\n      transition: (_a = transition == null ? void 0 : transition.exit) != null ? _a : withDelay.exit(TRANSITION_DEFAULTS.exit, delay),\n      ...(reverse ? {\n        ...offset,\n        transitionEnd: transitionEnd == null ? void 0 : transitionEnd.exit\n      } : {\n        transitionEnd: {\n          ...offset,\n          ...(transitionEnd == null ? void 0 : transitionEnd.exit)\n        }\n      })\n    };\n  }\n};\nvar slideFadeConfig = {\n  initial: \"initial\",\n  animate: \"enter\",\n  exit: \"exit\",\n  variants\n};\nvar SlideFade = forwardRef(function SlideFade2(props, ref) {\n  const {\n    unmountOnExit,\n    in: isOpen,\n    reverse = true,\n    className,\n    offsetX = 0,\n    offsetY = 8,\n    transition,\n    transitionEnd,\n    delay,\n    ...rest\n  } = props;\n  const show = unmountOnExit ? isOpen && unmountOnExit : true;\n  const animate = isOpen || unmountOnExit ? \"enter\" : \"exit\";\n  const custom = {\n    offsetX,\n    offsetY,\n    reverse,\n    transition,\n    transitionEnd,\n    delay\n  };\n  return /* @__PURE__ */jsx(AnimatePresence, {\n    custom,\n    children: show && /* @__PURE__ */jsx(motion.div, {\n      ref,\n      className: cx(\"chakra-offset-slide\", className),\n      custom,\n      ...slideFadeConfig,\n      animate,\n      ...rest\n    })\n  });\n});\nSlideFade.displayName = \"SlideFade\";\nexport { slideFadeConfig, SlideFade };","map":{"version":3,"mappings":";;;;;AAAA,SAASA,UAAU;AACnB,SACEC,iBAEAC,cAEK;AACP,SAASC,kBAAkB;AAkGjB;AAvEV,IAAMC,WAAuC;EAC3CC,SAAS,QAAyD;IAAA,IAAxD;MAAEC;MAASC;MAASC;MAAYC;MAAeC;IAAM;IAnCjE;IAmCwE;MACpEC,SAAS;MACTC,GAAGN;MACHO,GAAGN;MACHC,aACEM,8CAAYC,SAAZ,YAAoBC,UAAUD,KAAKE,oBAAoBF,MAAML,KAAK;MACpED,eAAeA,+CAAeM;IAChC;EAAA;EACAG,OAAO,SAAuC;IAAA,IAAtC;MAAEV;MAAYC;MAAeC;IAAM;IA3C7C;IA2CoD;MAChDC,SAAS;MACTC,GAAG;MACHC,GAAG;MACHL,aACEM,8CAAYI,UAAZ,YAAqBF,UAAUE,MAAMD,oBAAoBC,OAAOR,KAAK;MACvED,eAAeA,+CAAeS;IAChC;EAAA;EACAH,MAAM,SAAqE;IAAA,IAApE;MAAER;MAASD;MAASE;MAAYC;MAAeU;MAAST;IAAM;IAnDvE;IAoDI,MAAMU,SAAS;MAAER,GAAGN;MAASO,GAAGN;IAAQ;IACxC,OAAO;MACLI,SAAS;MACTH,aACEM,8CAAYC,SAAZ,YAAoBC,UAAUD,KAAKE,oBAAoBF,MAAML,KAAK;MACpE,IAAIS,UACA;QAAE,GAAGC;QAAQX,eAAeA,+CAAeM;MAAK,IAChD;QAAEN,eAAe;UAAE,GAAGW;UAAQ,IAAGX,+CAAeM;QAAK;MAAE;IAC7D;EACF;AACF;AAEO,IAAMM,kBAA0C;EACrDhB,SAAS;EACTiB,SAAS;EACTP,MAAM;EACNX;AACF;AAMO,IAAMmB,YAAYpB,WACvB,SAASoB,WAAUC,OAAOC,KAAK;EAC7B,MAAM;IACJC;IACAC,IAAIC;IACJT,UAAU;IACVU;IACAvB,UAAU;IACVC,UAAU;IACVC;IACAC;IACAC;IACA,GAAGoB;EACL,IAAIN;EAEJ,MAAMO,OAAOL,gBAAgBE,UAAUF,gBAAgB;EACvD,MAAMJ,UAAUM,UAAUF,gBAAgB,UAAU;EAEpD,MAAMM,SAAS;IACb1B;IACAC;IACAY;IACAX;IACAC;IACAC;EACF;EAEA,OACE,mBAACT;IAAgB+B;IACdC,kBACC,mBAAC/B,OAAOgC,KAAP;MACCT;MACAI,WAAW7B,GAAG,uBAAuB6B,SAAS;MAC9CG;MACC,GAAGX;MACJC;MACC,GAAGQ;IAAA;EACN,CAEJ;AAEJ,EACF;AAEAP,UAAUY,cAAc","names":["cx","AnimatePresence","motion","forwardRef","variants","initial","offsetX","offsetY","transition","transitionEnd","delay","opacity","x","y","_a","exit","withDelay","TRANSITION_DEFAULTS","enter","reverse","offset","slideFadeConfig","animate","SlideFade","props","ref","unmountOnExit","in","isOpen","className","rest","show","custom","children","div","displayName"],"sources":["/Users/santitri1205/Documents/SkillAcademy/BATCH2/react-final-project-hacktogram-v1/node_modules/@chakra-ui/transition/src/slide-fade.tsx"],"sourcesContent":["import { cx } from \"@chakra-ui/shared-utils\"\nimport {\n  AnimatePresence,\n  HTMLMotionProps,\n  motion,\n  Variants as _Variants,\n} from \"framer-motion\"\nimport { forwardRef } from \"react\"\nimport {\n  TRANSITION_DEFAULTS,\n  Variants,\n  withDelay,\n  WithTransitionConfig,\n} from \"./transition-utils\"\n\ninterface SlideFadeOptions {\n  /**\n   * The offset on the horizontal or `x` axis\n   * @default 0\n   */\n  offsetX?: string | number\n  /**\n   * The offset on the vertical or `y` axis\n   * @default 8\n   */\n  offsetY?: string | number\n  /**\n   * If `true`, the element will be transitioned back to the offset when it leaves.\n   * Otherwise, it'll only fade out\n   * @default true\n   */\n  reverse?: boolean\n}\n\nconst variants: Variants<SlideFadeOptions> = {\n  initial: ({ offsetX, offsetY, transition, transitionEnd, delay }) => ({\n    opacity: 0,\n    x: offsetX,\n    y: offsetY,\n    transition:\n      transition?.exit ?? withDelay.exit(TRANSITION_DEFAULTS.exit, delay),\n    transitionEnd: transitionEnd?.exit,\n  }),\n  enter: ({ transition, transitionEnd, delay }) => ({\n    opacity: 1,\n    x: 0,\n    y: 0,\n    transition:\n      transition?.enter ?? withDelay.enter(TRANSITION_DEFAULTS.enter, delay),\n    transitionEnd: transitionEnd?.enter,\n  }),\n  exit: ({ offsetY, offsetX, transition, transitionEnd, reverse, delay }) => {\n    const offset = { x: offsetX, y: offsetY }\n    return {\n      opacity: 0,\n      transition:\n        transition?.exit ?? withDelay.exit(TRANSITION_DEFAULTS.exit, delay),\n      ...(reverse\n        ? { ...offset, transitionEnd: transitionEnd?.exit }\n        : { transitionEnd: { ...offset, ...transitionEnd?.exit } }),\n    }\n  },\n}\n\nexport const slideFadeConfig: HTMLMotionProps<\"div\"> = {\n  initial: \"initial\",\n  animate: \"enter\",\n  exit: \"exit\",\n  variants: variants as _Variants,\n}\n\nexport interface SlideFadeProps\n  extends SlideFadeOptions,\n    WithTransitionConfig<HTMLMotionProps<\"div\">> {}\n\nexport const SlideFade = forwardRef<HTMLDivElement, SlideFadeProps>(\n  function SlideFade(props, ref) {\n    const {\n      unmountOnExit,\n      in: isOpen,\n      reverse = true,\n      className,\n      offsetX = 0,\n      offsetY = 8,\n      transition,\n      transitionEnd,\n      delay,\n      ...rest\n    } = props\n\n    const show = unmountOnExit ? isOpen && unmountOnExit : true\n    const animate = isOpen || unmountOnExit ? \"enter\" : \"exit\"\n\n    const custom = {\n      offsetX,\n      offsetY,\n      reverse,\n      transition,\n      transitionEnd,\n      delay,\n    }\n\n    return (\n      <AnimatePresence custom={custom}>\n        {show && (\n          <motion.div\n            ref={ref}\n            className={cx(\"chakra-offset-slide\", className)}\n            custom={custom}\n            {...slideFadeConfig}\n            animate={animate}\n            {...rest}\n          />\n        )}\n      </AnimatePresence>\n    )\n  },\n)\n\nSlideFade.displayName = \"SlideFade\"\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}