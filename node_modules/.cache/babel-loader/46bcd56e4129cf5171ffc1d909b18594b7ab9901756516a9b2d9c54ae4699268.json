{"ast":null,"code":"'use client';\n\nimport { useModalContext, useModalStyles } from \"./chunk-MSA2NPQT.mjs\";\n\n// src/modal-close-button.tsx\nimport { CloseButton } from \"@chakra-ui/close-button\";\nimport { cx, callAllHandlers } from \"@chakra-ui/shared-utils\";\nimport { forwardRef } from \"@chakra-ui/system\";\nimport { jsx } from \"react/jsx-runtime\";\nvar ModalCloseButton = forwardRef((props, ref) => {\n  const {\n    onClick,\n    className,\n    ...rest\n  } = props;\n  const {\n    onClose\n  } = useModalContext();\n  const _className = cx(\"chakra-modal__close-btn\", className);\n  const styles = useModalStyles();\n  return /* @__PURE__ */jsx(CloseButton, {\n    ref,\n    __css: styles.closeButton,\n    className: _className,\n    onClick: callAllHandlers(onClick, event => {\n      event.stopPropagation();\n      onClose();\n    }),\n    ...rest\n  });\n});\nModalCloseButton.displayName = \"ModalCloseButton\";\nexport { ModalCloseButton };","map":{"version":3,"mappings":";;;;;AAAA,SAA2BA,mBAAmB;AAC9C,SAASC,IAAIC,uBAAuB;AACpC,SAASC,kBAAkB;AAsBrB;AAVC,IAAMC,mBAAmBD,WAC9B,CAACE,OAAOC,QAAQ;EACd,MAAM;IAAEC;IAASC;IAAW,GAAGC;EAAK,IAAIJ;EACxC,MAAM;IAAEK;EAAQ,IAAIC,iBAAgB;EAEpC,MAAMC,aAAaX,GAAG,2BAA2BO,SAAS;EAE1D,MAAMK,SAASC,gBAAe;EAE9B,OACE,mBAACd;IACCM;IACAS,OAAOF,OAAOG;IACdR,WAAWI;IACXL,SAASL,gBAAgBK,SAAUU,SAA4B;MAC7DA,MAAMC,iBAAgB;MACtBR,SAAQ;IACV,CAAC;IACA,GAAGD;EAAA,EACN;AAEJ,EACF;AAEAL,iBAAiBe,cAAc","names":["CloseButton","cx","callAllHandlers","forwardRef","ModalCloseButton","props","ref","onClick","className","rest","onClose","useModalContext","_className","styles","useModalStyles","__css","closeButton","event","stopPropagation","displayName"],"sources":["/Users/santitri1205/Documents/SkillAcademy/BATCH2/react-final-project-hacktogram-v1/node_modules/@chakra-ui/modal/src/modal-close-button.tsx"],"sourcesContent":["import { CloseButtonProps, CloseButton } from \"@chakra-ui/close-button\"\nimport { cx, callAllHandlers } from \"@chakra-ui/shared-utils\"\nimport { forwardRef } from \"@chakra-ui/system\"\n\nimport { useModalContext, useModalStyles } from \"./modal\"\n\nexport type ModalCloseButtonProps = CloseButtonProps\n\n/**\n * ModalCloseButton is used closes the modal.\n *\n * You don't need to pass the `onClick` to it, it reads the\n * `onClose` action from the modal context.\n */\nexport const ModalCloseButton = forwardRef<CloseButtonProps, \"button\">(\n  (props, ref) => {\n    const { onClick, className, ...rest } = props\n    const { onClose } = useModalContext()\n\n    const _className = cx(\"chakra-modal__close-btn\", className)\n\n    const styles = useModalStyles()\n\n    return (\n      <CloseButton\n        ref={ref}\n        __css={styles.closeButton}\n        className={_className}\n        onClick={callAllHandlers(onClick, (event: React.MouseEvent) => {\n          event.stopPropagation()\n          onClose()\n        })}\n        {...rest}\n      />\n    )\n  },\n)\n\nModalCloseButton.displayName = \"ModalCloseButton\"\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}