{"ast":null,"code":"import { badgeTheme, vars } from \"./chunk-ZQMLTFF3.mjs\";\n\n// src/components/tag.ts\nimport { tagAnatomy as parts } from \"@chakra-ui/anatomy\";\nimport { createMultiStyleConfigHelpers, cssVar, defineStyle } from \"@chakra-ui/styled-system\";\nvar {\n  defineMultiStyleConfig,\n  definePartsStyle\n} = createMultiStyleConfigHelpers(parts.keys);\nvar $bg = cssVar(\"tag-bg\");\nvar $color = cssVar(\"tag-color\");\nvar $shadow = cssVar(\"tag-shadow\");\nvar $minH = cssVar(\"tag-min-height\");\nvar $minW = cssVar(\"tag-min-width\");\nvar $fontSize = cssVar(\"tag-font-size\");\nvar $paddingX = cssVar(\"tag-padding-inline\");\nvar baseStyleContainer = defineStyle({\n  fontWeight: \"medium\",\n  lineHeight: 1.2,\n  outline: 0,\n  [$color.variable]: vars.color.reference,\n  [$bg.variable]: vars.bg.reference,\n  [$shadow.variable]: vars.shadow.reference,\n  color: $color.reference,\n  bg: $bg.reference,\n  boxShadow: $shadow.reference,\n  borderRadius: \"md\",\n  minH: $minH.reference,\n  minW: $minW.reference,\n  fontSize: $fontSize.reference,\n  px: $paddingX.reference,\n  _focusVisible: {\n    [$shadow.variable]: \"shadows.outline\"\n  }\n});\nvar baseStyleLabel = defineStyle({\n  lineHeight: 1.2,\n  overflow: \"visible\"\n});\nvar baseStyleCloseButton = defineStyle({\n  fontSize: \"lg\",\n  w: \"5\",\n  h: \"5\",\n  transitionProperty: \"common\",\n  transitionDuration: \"normal\",\n  borderRadius: \"full\",\n  marginStart: \"1.5\",\n  marginEnd: \"-1\",\n  opacity: 0.5,\n  _disabled: {\n    opacity: 0.4\n  },\n  _focusVisible: {\n    boxShadow: \"outline\",\n    bg: \"rgba(0, 0, 0, 0.14)\"\n  },\n  _hover: {\n    opacity: 0.8\n  },\n  _active: {\n    opacity: 1\n  }\n});\nvar baseStyle = definePartsStyle({\n  container: baseStyleContainer,\n  label: baseStyleLabel,\n  closeButton: baseStyleCloseButton\n});\nvar sizes = {\n  sm: definePartsStyle({\n    container: {\n      [$minH.variable]: \"sizes.5\",\n      [$minW.variable]: \"sizes.5\",\n      [$fontSize.variable]: \"fontSizes.xs\",\n      [$paddingX.variable]: \"space.2\"\n    },\n    closeButton: {\n      marginEnd: \"-2px\",\n      marginStart: \"0.35rem\"\n    }\n  }),\n  md: definePartsStyle({\n    container: {\n      [$minH.variable]: \"sizes.6\",\n      [$minW.variable]: \"sizes.6\",\n      [$fontSize.variable]: \"fontSizes.sm\",\n      [$paddingX.variable]: \"space.2\"\n    }\n  }),\n  lg: definePartsStyle({\n    container: {\n      [$minH.variable]: \"sizes.8\",\n      [$minW.variable]: \"sizes.8\",\n      [$fontSize.variable]: \"fontSizes.md\",\n      [$paddingX.variable]: \"space.3\"\n    }\n  })\n};\nvar variants = {\n  subtle: definePartsStyle(props => {\n    var _a;\n    return {\n      container: (_a = badgeTheme.variants) == null ? void 0 : _a.subtle(props)\n    };\n  }),\n  solid: definePartsStyle(props => {\n    var _a;\n    return {\n      container: (_a = badgeTheme.variants) == null ? void 0 : _a.solid(props)\n    };\n  }),\n  outline: definePartsStyle(props => {\n    var _a;\n    return {\n      container: (_a = badgeTheme.variants) == null ? void 0 : _a.outline(props)\n    };\n  })\n};\nvar tagTheme = defineMultiStyleConfig({\n  variants,\n  baseStyle,\n  sizes,\n  defaultProps: {\n    size: \"md\",\n    variant: \"subtle\",\n    colorScheme: \"gray\"\n  }\n});\nexport { tagTheme };","map":{"version":3,"mappings":"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","names":["tagAnatomy","parts","createMultiStyleConfigHelpers","cssVar","defineStyle","defineMultiStyleConfig","definePartsStyle","keys","$bg","$color","$shadow","$minH","$minW","$fontSize","$paddingX","baseStyleContainer","fontWeight","lineHeight","outline","variable","vars","color","reference","bg","shadow","boxShadow","borderRadius","minH","minW","fontSize","px","_focusVisible","baseStyleLabel","overflow","baseStyleCloseButton","w","h","transitionProperty","transitionDuration","marginStart","marginEnd","opacity","_disabled","_hover","_active","baseStyle","container","label","closeButton","sizes","sm","md","lg","variants","subtle","props","_a","solid","tagTheme","defaultProps","size","variant","colorScheme"],"sources":["/Users/santitri1205/Documents/SkillAcademy/BATCH2/react-final-project-hacktogram-v1/node_modules/@chakra-ui/theme/src/components/tag.ts"],"sourcesContent":["import { tagAnatomy as parts } from \"@chakra-ui/anatomy\"\nimport {\n  createMultiStyleConfigHelpers,\n  cssVar,\n  defineStyle,\n} from \"@chakra-ui/styled-system\"\nimport { badgeTheme, badgeVars } from \"./badge\"\n\nconst { defineMultiStyleConfig, definePartsStyle } =\n  createMultiStyleConfigHelpers(parts.keys)\n\nconst $bg = cssVar(\"tag-bg\")\nconst $color = cssVar(\"tag-color\")\nconst $shadow = cssVar(\"tag-shadow\")\nconst $minH = cssVar(\"tag-min-height\")\nconst $minW = cssVar(\"tag-min-width\")\nconst $fontSize = cssVar(\"tag-font-size\")\nconst $paddingX = cssVar(\"tag-padding-inline\")\n\nconst baseStyleContainer = defineStyle({\n  fontWeight: \"medium\",\n  lineHeight: 1.2,\n  outline: 0,\n  [$color.variable]: badgeVars.color.reference,\n  [$bg.variable]: badgeVars.bg.reference,\n  [$shadow.variable]: badgeVars.shadow.reference,\n  color: $color.reference,\n  bg: $bg.reference,\n  boxShadow: $shadow.reference,\n  borderRadius: \"md\",\n  minH: $minH.reference,\n  minW: $minW.reference,\n  fontSize: $fontSize.reference,\n  px: $paddingX.reference,\n  _focusVisible: {\n    [$shadow.variable]: \"shadows.outline\",\n  },\n})\n\nconst baseStyleLabel = defineStyle({\n  lineHeight: 1.2,\n  overflow: \"visible\",\n})\n\nconst baseStyleCloseButton = defineStyle({\n  fontSize: \"lg\",\n  w: \"5\",\n  h: \"5\",\n  transitionProperty: \"common\",\n  transitionDuration: \"normal\",\n  borderRadius: \"full\",\n  marginStart: \"1.5\",\n  marginEnd: \"-1\",\n  opacity: 0.5,\n  _disabled: {\n    opacity: 0.4,\n  },\n  _focusVisible: {\n    boxShadow: \"outline\",\n    bg: \"rgba(0, 0, 0, 0.14)\",\n  },\n  _hover: {\n    opacity: 0.8,\n  },\n  _active: {\n    opacity: 1,\n  },\n})\n\nconst baseStyle = definePartsStyle({\n  container: baseStyleContainer,\n  label: baseStyleLabel,\n  closeButton: baseStyleCloseButton,\n})\n\nconst sizes = {\n  sm: definePartsStyle({\n    container: {\n      [$minH.variable]: \"sizes.5\",\n      [$minW.variable]: \"sizes.5\",\n      [$fontSize.variable]: \"fontSizes.xs\",\n      [$paddingX.variable]: \"space.2\",\n    },\n    closeButton: {\n      marginEnd: \"-2px\",\n      marginStart: \"0.35rem\",\n    },\n  }),\n  md: definePartsStyle({\n    container: {\n      [$minH.variable]: \"sizes.6\",\n      [$minW.variable]: \"sizes.6\",\n      [$fontSize.variable]: \"fontSizes.sm\",\n      [$paddingX.variable]: \"space.2\",\n    },\n  }),\n  lg: definePartsStyle({\n    container: {\n      [$minH.variable]: \"sizes.8\",\n      [$minW.variable]: \"sizes.8\",\n      [$fontSize.variable]: \"fontSizes.md\",\n      [$paddingX.variable]: \"space.3\",\n    },\n  }),\n}\n\nconst variants = {\n  subtle: definePartsStyle((props) => ({\n    container: badgeTheme.variants?.subtle(props),\n  })),\n  solid: definePartsStyle((props) => ({\n    container: badgeTheme.variants?.solid(props),\n  })),\n  outline: definePartsStyle((props) => ({\n    container: badgeTheme.variants?.outline(props),\n  })),\n}\n\nexport const tagTheme = defineMultiStyleConfig({\n  variants,\n  baseStyle,\n  sizes,\n  defaultProps: {\n    size: \"md\",\n    variant: \"subtle\",\n    colorScheme: \"gray\",\n  },\n})\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}