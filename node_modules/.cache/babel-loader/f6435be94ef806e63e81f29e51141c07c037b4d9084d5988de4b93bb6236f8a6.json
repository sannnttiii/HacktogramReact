{"ast":null,"code":"'use client';\n\n// src/use-button-type.tsx\nimport { useCallback, useState } from \"react\";\nfunction useButtonType(value) {\n  const [isButton, setIsButton] = useState(!value);\n  const refCallback = useCallback(node => {\n    if (!node) return;\n    setIsButton(node.tagName === \"BUTTON\");\n  }, []);\n  const type = isButton ? \"button\" : void 0;\n  return {\n    ref: refCallback,\n    type\n  };\n}\nexport { useButtonType };","map":{"version":3,"mappings":";;;AAAA,SAASA,aAAaC,gBAAgB;AAE/B,SAASC,cAAcC,OAA2B;EACvD,MAAM,CAACC,UAAUC,WAAW,IAAIJ,SAAS,CAACE,KAAK;EAC/C,MAAMG,cAAcN,YAAaO,QAA6B;IAC5D,IAAI,CAACA,MAAM;IACXF,YAAYE,KAAKC,YAAY,QAAQ;EACvC,GAAG,EAAE;EACL,MAAMC,OAAOL,WAAW,WAAW;EACnC,OAAO;IAAEM,KAAKJ;IAAaG;EAAK;AAClC","names":["useCallback","useState","useButtonType","value","isButton","setIsButton","refCallback","node","tagName","type","ref"],"sources":["/Users/santitri1205/Documents/SkillAcademy/BATCH2/react-final-project-hacktogram-v1/node_modules/@chakra-ui/button/src/use-button-type.tsx"],"sourcesContent":["import { useCallback, useState } from \"react\"\n\nexport function useButtonType(value?: React.ElementType) {\n  const [isButton, setIsButton] = useState(!value)\n  const refCallback = useCallback((node: HTMLElement | null) => {\n    if (!node) return\n    setIsButton(node.tagName === \"BUTTON\")\n  }, [])\n  const type = isButton ? \"button\" : undefined\n  return { ref: refCallback, type } as const\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}